[{"id":"cbc56ba2dc5138df45519889f9da348c","title":"zeroBase_DS 5주차 금요일 스터디노트","content":"5th WeekFriday","slug":"zeroBase-DS-5th-05","date":"2023-03-31T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"34b398511d650d5b049fa8865ffb55de","title":"zeroBase_DS 5주차 목요일 스터디노트","content":"5th WeekThursday","slug":"zeroBase-DS-5th-04","date":"2023-03-30T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2ef6910e9fd32212995fcf56f4ebe823","title":"두유노 Neovim?","content":"\n Neovim과 함께라면 CLI는 그냥.. 단축키 겸key mapping기이자 마우스이자 IDE \n\n속는 셈 치고 함 봐유~ 어디선가 알라딘🧞‍의 🎼A Whole New World🌏가 들릴테니\n\n\n","slug":"dUknowNvim","date":"2022-08-17T08:17:58.000Z","categories_index":"Neovim IDE Config","tags_index":"Neovim","author_index":"BtheNerd"},{"id":"8b2d1aa3aa38c7583f7d6f53a221be4b","title":"zeroBase_DS 5주차 수요일 스터디노트","content":"5th WeekWednesday","slug":"zeroBase-DS-5th-03","date":"2023-03-29T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"6fb1fa217694615bc8f471fd7b0e1071","title":"zeroBase_DS 5주차 화요일 스터디노트","content":"5th WeekTuesday","slug":"zeroBase-DS-5th-02","date":"2023-03-28T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"a0e2d2408a4717c4f7c92e259242dd91","title":"zeroBase_DS 5주차 월요일 스터디노트","content":"5th WeekMonday","slug":"zeroBase-DS-5th-01","date":"2023-03-27T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"22565b7012dc9a9f7a5e0dbecd13ac3e","title":"zeroBase_DS 4주차 금요일 스터디노트","content":"4th WeekFriday47_[연습문제] 재귀 알고리즘(01)48_[연습문제] 재귀 알고리즘(02)49_[연습문제] 평균 알고리즘(01)50_[연습문제] 평균 알고리즘(02)","slug":"zeroBase-DS-4th-05","date":"2023-03-24T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"a9611626ba8d9e567c87b4207d200e8f","title":"Week2 Data Analyst, Data Engineer, Data Scientist 직군 세분화 하기","content":"Week2 진행: Data Analyst, Data Engineer, Data Scientist 직군 세분화 하기  \n1) 본인이 희망하는 직군을 선택해 주시고 이유를 같이 서술해 주세요사실 수학을 싫어하지도 않으며, 확률과 통계, 미적분과 선형대수도 어느 정도는 한 적이 있지만 출신이 공대가 아니다보니 DATA ENGINEER로 진입하는 것보단, 언어적으로 뛰어난 편이고 상경계의 특성을 살려 DATA ANALYST쪽으로 진입하고 싶습니다. 수학에 거부감이 없고 한국어문서 외에도 영어문서와 중국어문서 독해를 잘해 도메인지식을 비롯한 다양한 정보를 잘 습득하고, 커뮤니케이션을 더 잘 할 수 있는 커뮤니케이션 능력을 잘 살려 DATA ANALYST쪽으로 진입한 다음, 계속 공부해가면서 DATA SCIENTIST가 되면 좋을 것 같습니다.\n2) Data Analyst, Data Engineer, Data Scientist 각 직군별 차이점을 자유롭게 작성해 주세요What is Data Analyst?주어진 데이터셋에서 정보를 추출하는 것을 data analytics라 하고, data analyst는 data cleaning, data conversion 그리고 data modeling과 같은 여러 방법을 통해 주어진 데이터셋에서 유용한 정보를 추출하는 일을 합니다. 주로 사용되는 업계는 기술,제약,사회과학,경영 쪽이 있습니다. 업계들은 데이터 분석을 통해 시장의 동향을 분석할 수 있으며, 고객들의 요구사항과 자사의 활약을 톺아볼 수 있고, 세심한 데이터를 이용한 의사결정을  할 수 있습니다.data analytics에서 사용되는 가장 주된 두 가지 방법은 기술&#x2F;요약통계와 추론통계입니다. 데이터분석가는 여러 가시화 기법과 tool들을 사용하는데도 익숙해야 합니다.데이터 분석가들은 발표를 잘해야 하며, 발표능력은 이들이 팀원들과 결과를 토론하고 다같이 올바른 의사결정&#x2F;해결책을 내리도록 돕습니다.You must check the latest guide on Maths and Statistics by experts데이터 분석을 통해 업계는 빠른 쿼리들을 처리하여 단기간에 당장 필요한 실행 가능한 결과를 내놓을 수 있습니다. 이는 데이터 분석가가 빠른 조치를 요하는 산업의 단기적인 성장에 국한되도록 합니다.\nTools used by Data AnalyticsSQL과 Microsoft Excel입니다.\n\nWhat is Data Engineer?데이터엔지니어는 분석적인 용도에 맞게끔 데이터를 준비해주는 사람이라 할 수 있습니다. 플랫폼 개발 작업과 데이터전처리를 위한 구조 작업 또한 Data Engineering의 과업에 포함됩니다.즉, 데이터엔지니어는 다양한 데이터 작업을 위한 기반을 마련한다고 할 수 있겠습니다. 데이터엔지니어는 데이터사이언티스트들과 데이터분석가들이 작업할 형식을 설계하는 과업을 수행합니다.데이터엔지니어는 구조화된 데이터와 구조화되지 않은 데이터 두 가지를 모두 다뤄야 하기에, SQL과 NoSQL 데이터베이스 경험이 필요합니다. 데이터엔지니어는 데이터 정리, 관리, 변환, 데이터 중복 제거 등과 같은 수많은 작업에 참여하는 빅데이터를 처리해야 합니다.상술했다시피 플랫폼 개발 작업과 데이터전처리를 위한 구조 작업 또한 Data Engineering의 과업에 포함됩니다. 예를 들어, 데이터의 실시간 분석을 용이하게 하는 클라우드 인프라를 개발하려면 다양한 개발 원칙이 필요합니다. 따라서 인터페이스 API 구축은 데이터 엔지니어의 과업 중 하나입니다. 이처럼, 소프트웨어 개발 가이드라인을 활용한 플랫폼과 아키텍처를 개발하기 위해 데이터엔지니어가 종종 배정되기 때문에, 데이터엔지니어는 소프트웨어엔지니어의 역할과 매우 유사하다고도 할 수 있겠습니다.A top skill that gets you hired is Big Data. Start learning Big Data with industry experts.추가적으로, 데이터 엔지니어는 엔지니어링과 테스팅 도구에 대해서도 다양한 지식을 갖고 있습니다. 전체 파이프라인 아키텍처를 처리하여 로그 오류, 민첩한 테스팅, 내결함성 파이프라인 구축, 데이터베이스 관리 및 안정적인 파이프라인 보장을 처리하는 것 또한 데이터 엔지니어의 과업입니다.\nTools used by Data Engineers\nHadoop  Apache Hadoop is an open-source Big Data Platform which is the bread and butter for all the data engineers. It comprises of Hadoop Distributed Framework or HDFS which is designed to run on commodity hardware.  A Data Engineer must be well versed with Hadoop as it is the standard Big Data platform for many industries.\nApache Spark  Spark is a fast processing, analytical big data platform provided by Apache. It was developed as an improvement over Hadoop which could only handle batch data. However, Spark provides support for both batch data as well as streaming data.  It is the right time to start your Hadoop and Spark learning\nKubernetes  Kubernetes was developed by Google for cluster orchestration, scaling and automating the application deployment. It is a recent technology that has revolutionized the world of cloud computing.\nJava  Java is the most popular programming language that is used for developing enterprise software solutions. A Data Engineer must know this programming language in order to develop pipelines and data infrastructure.\nYarn  Yarn is a part of the Hadoop Core project. It allows several data-processing engines to handle data on a single platform. It is an efficient tool to increase the efficiency of the Hadoop compute cluster.\n\n\nWhat is Data Scientist?데이터사이언티스트는 ‘21세기 가장 섹시한 직업’으로 불리며 기술 분야에서 가장 유행하는 직업입니다. 데이터 과학은 아직 초기 단계에 머물러있지만, 거의 모든 산업 부문마다 자리매김할 정도로 성장했으며, 모든 회사는 생산성을 높이고 제품 생산을 최적화시키기 위해 데이터 과학자를 찾고 있습니다.고성능컴퓨팅과 같은 컴퓨팅기술의 발전 덕분에 엄청난 양의 데이터가 폭발하고 있습니다. 이로 인해 업계는 데이터에서 유의미한 정보를 발굴할 수 있는 수많은 기회를 얻었습니다. 이들은 이를 위해 통계 도구 및 프로그래밍 기술에 대한 지식을 보유해 기계학습 알고리즘에 대한 지식을 지닌 전문 데이터사이언티스트를 고용하며, 이들과 함께 데이터를 추출하여 다양한 트렌드와 관행을 분석하고 인사이트를 얻습니다. 따라서 데이터과학은 데이터 추출, 데이터 처리, 데이터 분석 및 데이터 예측과 같은 모든 데이터 작업을 포함합니다. 하지만, 데이터 과학은 단일 분야가 아닙니다. 수학, 통계 및 컴퓨터 프로그래밍과 배경을 공유하는 양적 분야(a quantitative field)입니다.데이터는 어디에나 있으므로 이들을 필요로 하는 곳은 많으나, 높은 학습 곡선으로 인해 데이터 과학자에 대한 공급이 부족한 것이 현실입니다. 결과적으로 데이터 과학자에게 유리한 급여를 제공하는 막대한 소득 거품이 발생한 상황입니다.\n\nData Analyst Vs Data Engineer Vs Data Scientist 정의 비교\nA data analyst is responsible for taking actionable that affect the current scope of the company. A data engineer is responsible for developing a platform that data analysts and data scientists work on. And, a data scientist is responsible for unearthing future insights from existing data and helping companies to make data-driven decisions.\nA data analyst does not directly participate in the decision-making process, rather, he helps indirectly through providing static insights about company performance. A data engineer is not responsible for decision making. And, a data scientist participates in the active decision-making process that affects the course of the company.\nA data analyst uses static modeling techniques that summarize the data through descriptive analysis. On the other hand, a data engineer is responsible for the development and maintenance of data pipelines. A data scientist uses dynamic techniques like Machine Learning to gain insights about the future.\nKnowledge of machine learning is not important for data analysts. However, this is mandatory for data scientists. A data engineer need not require the knowledge of machine learning but he is required to have the knowledge of core computing concepts like programming and algorithms to build robust data systems.\nA data analyst only has to deal with structured data. However, both data scientists and data engineers deal with unstructured data as well.\nA data analyst and data scientist are both required to be proficient in data visualization. However, this is not required in the case of a data engineer.\nBoth data scientists and analysts need not have knowledge of application development and working of the APIs. However, this is the most essential requirement for a data engineer.\n\n\nData Analyst Vs Data Engineer Vs Data Scientist 책임들Following are the main responsibilities of a Data Analyst –\nAnalyzing the data through descriptive statistics.\nUsing database query languages to retrieve and manipulate information.\nPerform data filtering, cleaning and early stage transformation.\nCommunicating results with the team using data visualization.\nWork with the management team to understand business requirements.\n\nA Data Engineer is supposed to have the following responsibilities –\nDevelopment, construction, and maintenance of data architectures.\nConducting testing on large scale data platforms.\nHandling error logs and building robust data pipelines.\nAbility to handle raw and unstructured data.\nProvide recommendations for data improvement, quality, and efficiency of data.\nEnsure and support the data architecture utilized by data scientists and analysts.\nDevelopment of data processes for data modeling, mining, and data production.\n\nA Data Scientist is required to perform responsibilities –\nPerforming data preprocessing that involves data transformation as well as data cleaning.\nUsing various machine learning tools to forecast and classify patterns in the data.\nIncreasing the performance and accuracy of machine learning algorithms through fine-tuning and further performance optimization.\nUnderstanding the requirements of the company and formulating questions that need to be addressed.\nUsing robust storytelling tools to communicate results with the team members.\n\n\nData Analyst Vs Data Engineer Vs Data Scientist – 요구역량들In order to become a Data Analyst, you must possess the following skills –\nShould possess the strong mathematical aptitude\nShould be well versed with Excel, Oracle, and SQL.\nPossession of problem-solving attitude.\nProficient in the communication of results to the team.\nShould have a strong suite of analytical skills.\n\nFollowing are the key skills required to become a Data Engineer –\nKnowledge of programming tools like Python and Java.\nSolid Understanding of Operating Systems.\nAbility to develop scalable ETL packages.\nShould be well versed in SQL as well as NoSQL technologies like Cassandra and MongoDB.\nShould possess knowledge of data warehouse and big data technologies like Hadoop, Hive, Pig, and Spark.\nShould possess creativeness and be out of the box thinking.\n\nFor becoming a Data Scientist, you must have the following key skills –\nShould be proficient with Math and Statistics.\nShould be able to handle structured &amp; unstructured information.\nIn-depth knowledge of tools like R, Python and SAS.\nWell versed in various machine learning algorithms.\nHave knowledge of SQL and NoSQL.\nMust be familiar with Big Data tools.\n\n3) 세 개의 직군을 작성이 완료되었다면 각 조 구성원과 함께 논의해 보세요넵\n\n4) 파이썬 프로그래밍 테스트를 위한 파이썬 최종 복습을 진행해 주세요헉 네\n\n5) 스터디룸 내에 To-Do-List 체크를 반드시 해주세요!넵\n\n\n출처:DataFlair\n\n1~2주차에 스크랩한 채용공고와 직무분석 기반으로 본인이 지원하고자 하는 산업&#x2F;기업 채용공고를 스크랩 하기KIA_[ICT] DBA (Database Administrator)[DB 운영 및 관리]서비스에 관련된 DB 운영 전반 (Tibero &#x2F; Opensource DBMS(mysql, maria, postresql) )· 운영&#x2F;자동화를 위한 오픈소스 솔루션 분석&#x2F;적용&#x2F;관리· 퍼포먼스 튜닝&#x2F;장애관리&#x2F;트러블 슈팅· DBMS 설치, 백업&#x2F;복구, HA, DR  \n[그룹사 DB 거버넌스]그룹사 DB 거버넌스 체계 수립 및 관리· Opensource 기반 DBMS 확대 전략\nKIA_[CDO] Data Engineering\n사내 IT시스템과 고객 웹&#x2F;앱서비스에서 발생하는 DB 및 로그 데이터 수집 및 가공  \n데이터허브, DW-DM 데이터 모델 및 파이프라인 설계  \n배치&#x2F;실시간 데이터 가공처리 SW 개발운영  \n차량 데이터 기반 서비스 개발 및 운영\n\n[데이터 파이프라인 개발·운영]· 데이터 수집, 정제, 가공, 추출, 분석 및 응용서비스 파이프라인 설계 및 구현· 데이터 파이프라인의 모니터링, 문제해결, 성능튜닝  \n[데이터 모델링 및 DW&#x2F;DM 개발·운영]· DB 또는 로그 기반 데이터 분석&#x2F;표준화&#x2F;설계· 데이터 통합&#x2F;분석 관점의 기준정보 관리· DW&#x2F;DM 개발 관리  \n[데이터 서비스]· 데이터 서비스 플랫폼(DSP) 개발 및 운영· 분석 서비스(BI, OLAP, 대시보드) 개발 및 운영· 차량데이터 기반 서비스 개발 및 운영\nKIA_[CDO] Data Architect[데이터 거버넌스 기획 및 운영]· 데이터 거버넌스 개선 및 운영· 데이터 거버넌스 관리 시스템 및 데이터 관리 포털 시스템 개선 및 운영· 분석 또는 현업 담당자를 위한 데이터 활용 기획  \n[데이터 모델링]· 전사 아키텍처(Enterprise Architecture)에 입각한 데이터 아키텍처 설계· IT 시스템 구축 프로젝트에 투입되어 데이터모델링을 직접 수행하거나 가이드· 데이터 관련 이슈를 구조적 측면에서 분석하여 해결방안 제시  \n[데이터 품질관리]· 기준정보를 정의하고 개선 및 관리 방안 제시· 기준정보를 식별하여 업무규칙 정의 및 품질관리· 기준정보의 흐름정보 자산화 (테이블, 컬럼, 코드)\n[쿠팡] Coupang Flex 데이터 분석 및 모델링[SEOUL][사업실]데이터서비스개발팀 당당자 모집\n2년 이상의 BI 및 통계 사이트 개발 업무\nSQLD 개발자 자격증 소지자\nDBMS(SQL Server)지식\nVue.js 경험자\n\n[신한은행]2023년 디지털&#x2F;ICT 수시채용뱅킹서비스 개발 및 운영\nC, Java, HTML5 등 프로그래밍 역량\n알고리즘, 데이터관리, 네트워크 등 기본적인 IT지식\n관계형 데이터베이스를 이용한 프로그래밍 역량\n\n모바일 채널 서비스 개발 및 운영\niOS 및 안드로이드 플랫폼에 대한 지식\nObjective-C,Swift, Java, Kotlin roqkf rudgja\nHTML,CSS,JAVASCRIPT개발 역량\nVue.js, React.js 등 웹 프레임워크 사용 경험\nBackend Framework 및 관계형 데이터베이스에 대한 이해\nGit에 대한 이해와 Github 사용경험\n\n데이터&#x2F;AI플랫폼 엔지니어링\nPython, Java, Scala 등 프로그래밍 역량\n데이터베이스 관련 지식 및 활용 역량\n데이터 분산 처리 및 스트리밍 처리 개발 역량\nDocker&#x2F;k8s 등 컨테이너 기반 기술 이해\nAI&#x2F;데이터 관련 클라우드 서비스 이해\n\n디지털 신사업 기획\n통계지식,데이터 분석 및 데이터마이닝 역량\nPython, R, SAS, SQL 등 분석도구 활용 역량\n디지털 신기술에 대한 전반적인 이해\n국내외 디지털 시장 및 트렌드 리서치 역량\n비즈니스 문제해결능력 및 원할한 커뮤니케이션 역량\n\n[[현대자동차]글로벌 서비스 플랫폼 개발 현대자동차 IT부문 대규모 경력 채용]Data Architect전사&#x2F;글로벌 데이터에 대한 관리정책을 명확히 하고, 기준정보와 같은 핵심 데이터를 자산화&#x2F;표준화하여 데이터 품질 확보 및 활용성을 제고합니다.\nDatabase AdministratorIT서비스의 DB 전담 운영 조직으로 사내 개발자. 인프라 엔지니어들과 긴밀하게 협업하여 DBMS 선정&#x2F;도입 및 DB 설계&#x2F;구축&#x2F;운영 업무를 수행합니다.\nData Engineer방대한 글로벌 데이터를 수집-정제-가공-추출-분석하기 위한 파이프라인 설계 및 개발 업무를 수행합니다.\n","slug":"zeroBase-DS-TeamW2","date":"2023-03-24T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨,Data Analyst,Data Engineer,Data Scientist","author_index":"BtheNerd"},{"id":"f1a3ed4d4d9e1ad5c6e2d38fd5296e94","title":"zeroBase_DS 4주차 목요일 스터디노트","content":"4th WeekThursday31_[연습문제] 검색 알고리즘(01)32_[연습문제] 검색 알고리즘(02)33_[연습문제] 순위 알고리즘(01)34_[연습문제] 순위 알고리즘(02)35_[연습문제] 정렬 알고리즘(01)36_[연습문제] 정렬 알고리즘(02)37_[연습문제] 정렬 알고리즘(03)38_[연습문제] 정렬 알고리즘(04)39_[연습문제] 최댓값 알고리즘(01)40_[연습문제] 최댓값 알고리즘(02)41_[연습문제] 최솟값 알고리즘(01)42_[연습문제] 최솟값 알고리즘(02)43_[연습문제] 최빈값 알고리즘(01)44_[연습문제] 최빈값 알고리즘(02)45_[연습문제] 근삿값 알고리즘(01)46_[연습문제] 근삿값 알고리즘(02)","slug":"zeroBase-DS-4th-04","date":"2023-03-23T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"7580535ef25edffed046a353459ed90f","title":"zeroBase_DS 4주차 수요일 스터디노트","content":"4th WeekWednesday11_선택 정렬 - 이론12_선택 정렬 - 실습13_최댓값 - 이론14_최댓값 - 실습15_최솟값 - 이론16_최솟값 - 실습17_최빈값 - 이론18_최빈값 - 실습19_근삿값 - 이론20_근삿값 - 실습21_평균 - 이론22_평균 - 실습23_재귀 - 이론24_재귀 - 실습25_하노이의 탑 - 이론26_하노이의 탑 - 실습27_병합 정렬 - 이론28_병합 정렬 - 실습29_퀵 정렬 - 이론30_퀵 정렬 - 실습","slug":"zeroBase-DS-4th-03","date":"2023-03-22T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"250f1469f7fbe45044a372b95c713fb9","title":"zeroBase_DS 4주차 화요일 스터디노트","content":"4th WeekTuesday39_[연습문제] 리스트(01)1부터 사용자가 입력한 숫자까지의 약수와 소수를 리스트에 각각 저장하고, 이것을 출력하는 프로그램을 만들어보자inputNum = int(input('1보다 큰 정수 입력: '))\nlistA = []\nlistB = []\n\nfor n in range(1,inputNum+1):\n\tif n == 1:\n\t\tlistA.append(n)\n\telse: \n\t\tif inputNum % n == 0:\n\t\t\tlistA.append(n)\n\nfor num is range(2,inputNum+1):\n\tflag = True\n\tfor n in range(2, num+1):\n\t\tif num % n == 0:\n\t\t\tflag = False\n\t\t\tbreak\n\tif flag:\n\t\tlistB.append(num)\n40_[연습문제] 리스트(02)1부터 100 사이에 난수 10개를 생성한 후 짝수와 홀수를 구분해서 리스트에 저장하고, 각각의 개수를 출력하는 프로그램을 만들어보자import random\n\nrandomList = random.sample(range(1,101),10)\nevens = []\nodds = []\n\nfor n in randomList :\n\tif n % 2 == 0:\n\t\tevens.append(n)\n\telse: \n\t\todds.append(n)\nprint(f'짝수: &#123;evens&#125;, 개수: &#123;len(evens)&#125;개')\nprint(f'홀수: &#123;odds&#125;, 개수: &#123;len(odds)&#125;개')\n41_[연습문제] 리스트(03)group1,group2,group3 &#x3D; 0,0,0다음은 공원 입장료를 나타낸 표이다. 1일 초오 입장객이 100명이라고 할 때, 1일 전체 입장 요금을 구하는 프로그램을 만들어보자. 단, 입장 고객의 나이는 난수를 이용한다\n\n\n구분\n영유아\n어린이\n청소년\n성인\n어르신\n\n\n\n나이\n0~7세\n8~13세\n14~19세\n20~64세\n65세 이상\n\n\n요금\n무료\n200\n300\n500\n무료\n\n\nimport random\n\nvisitors = []\nfor n in range(100):\n\tvisitors.append(random.randint(1,100))\nprint(visitors)\n\ngroup1,group2,group3,group4,group5 = 0,0,0,0,0\nfor age in visitors:\n\tif age >= 0 and age &lt;= 7:\n\t\tgroup1 += 1\n\telif age >= 8 and age &lt;= 13:\n\t\tgroup2 += 1\n\telif age >= 14 and age &lt;= 19:\n\t\tgroup3 += 1\n\telif age >= 20 and age &lt;= 64:\n\t\tgroup4 += 1\n\telif age >= 65:\n\t\tgroup5 += 1\n\ngroup1Price = group1*0\ngroup2Price = group2*200\ngroup3Price = group3*300\ngroup4Price = group4*500\ngroup5Price = group5*0\n\nprint('='*25)\nprint(f'영유아: &#123;group1&#125;명,&#123;group1Price&#125;원')\nprint(f'어린이: &#123;group2&#125;명,&#123;group2Price&#125;원')\nprint(f'청소년: &#123;group3&#125;명,&#123;group3Price&#125;원')\nprint(f'성인: &#123;group4&#125;명,&#123;group4Price&#125;원')\nprint(f'어르신: &#123;group5&#125;명,&#123;group5Price&#125;원')\nprint('='*25)\npriceSummation = group1Price+group2Price+group3Price+group4Price+group5Price\nprint(f'1일 요금 총합계: &#123;format(priceSummation,',')&#125;')\nprint('='*25)\n42_[연습문제] 리스트(04)친구이름 다섯명을 리스트에 저장하고 오름차순과 내림차순으로 정렬해보자friends = []\n\nfor i in range(5):\n\tfriends.append(input('친구 이름 입력: '))\nprint(f'friends: &#123;friends&#125;')\n다음 리스트에서 중복 아이템(숫자)를 제거하는 프로그램을 만들어보자numbers = [2,22,7,8,9,7,3,5,2,7,1,3]\nprint(f'numbers: &#123;numbers&#125;')\n\nidx = 0\nwhile True:\n\tif idx >= len(numbers):\n\t\tbreak\n\tif numbers.count(numbers[idx]) >= 2:\n\t\tnumbers.remove(numbers[idx])\n\t\tcontinue\n\tidx += 1\nprint(f'numbers: &#123;numbers&#125;')\n근데 사실 set()로 타입 바꿔버리고 다시 list로 되돌리는게 더 간단할 것 같긴 하다…\n43_[연습문제] 리스트(05)4개의 숫자 중 서로 다른 숫자 2개를 선택해서 만들 수 있는 모든 경우의 수를 출력하는 프로그램을 만들어보자numbers = [4,6,7,9]\nresult = []\n\nfor n1 in numbers:\n\tfor n2 in numbers:\n\t\tif n1 == n2: continue\n\t\tresult.append([n1,n2])\n\nprint(f'result: &#123;result&#125;')\nprint(f'result length: &#123;len(result)&#125;')\nn! &#x2F; (n-r)!\nimport math\npermutation = math.factorial(len(numbers))/math.factorial(len(numbers)-2)\nprint(f'permutation: &#123;int(permutation)&#125;')\n4개의 숫자 중 서로 다른 숫자 3개를 선택해서 만들 수 있는 모든 경우의 수를 출력하는 프로그램을 만들어보자numbers = [4,6,7,9]\nresult = []\n\nfor n1 in numbers:\n\tfor n2 in numbers:\n\t\tif n1 == n2: continue\n\t\tfor n3 in numbers: \n\t\t\tif n1 == n3 or n2 == n3: continue\n\t\t\tresult.append([n1,n2])\n\nprint(f'result: &#123;result&#125;')\nprint(f'result length: &#123;len(result)&#125;')\n44_[연습문제] 튜플(01)자주 접속하는 웹사이트 비번을 튜플에 저장해보자passwds = ('password1234','abc123','qwerty','letmein','welcome00')\nprint(f'passwds : &#123;passwds&#125;')\n45_[연습문제] 튜플(02)for문으로 2d tuple 조회대학생 길동이의 1,2,3학년의 성적은 다음과 같다. 졸업할 때 4.0 이상의 학점을 받기 위해 길동이가 받아야 하는 4학년 1,2학기의 최소 학점을 구해보자scores = ((3.7, 4.2),(2.9, 4.3),(4.1, 4.2))\nfor s1 in scores:\n\tfor s2 in scores:\n\t\ttotal += s2\n\ntotal = round(total, 1)\navg = round(total / 6, 1)\nprint(f'3학년 총학점: &#123;total&#125;')\nprint(f'3학년 총평균: &#123;avg&#125;')\n\ngrade4TargetScore = round((4.0*8 - total), 1)\nprint(f'4학년 목표 총학점: &#123;grade4TargetScore&#125;')\nminScore = round((grade4TargetScore/2),1)\nprint(f'4학년 목표 평균학점: &#123;minScore&#125;')\n\nscores = list(scores)\nscores.append((minScore,minScore))\nscores = tuple(scores)\nprint(scores)\n46_[연습문제] 튜플(03)다음 2개의 튜플에 대해 합집합과 교집합을 출력해보자tuple1 = (1, 3, 2, 6, 12, 5, 7, 8)\ntuple2 = (0, 5, 2, 9, 8, 6, 17, 3)\ntempHap = list(tuple1)\ntempGyo = list()\n\nfor n in tuple2:\n\tif n not in tempHap: \n\t\ttempHap.append(n)\n\telse: \n\t\ttempGyo.append(n)\n\nidx = 0\n\nwhile True:\n\tif idx >= len(tempHap):\n\t\t break\n\tif tempHap.count(tempHap[idx]) >= 2:\n\t\ttempGyo.append(tempHap[idx])\n\t\ttempHap.remove(tempHap[idx])\n\t\tcontinue\n\tidx += 1\n\ntempHap = sorted(tuple(tempHap))\ntempGyo = sorted(tuple(tempGyo))\n\nprint(f'합집합: &#123;tempHap&#125;')\nprint(f'교집합: &#123;tempGyo&#125;')\nset으로 푸는게 더 빠를 것 같긴 했지만 for문으로 적용하는것도 가능하구나\n47_[연습문제] 튜플(04)이하의 튜플을 요구사항에 맞게 출력numbers = (8.7, 9.0, 9.1, 9.2, 8.6, 9.3, 7.9, 8.1, 8.3)\n\n\nindex[0:3]\nindex[2:4]\nindex[3:]\nindex[2:-2]\nindex[0::3]numbers = (8.7, 9.0, 9.1, 9.2, 8.6, 9.3, 7.9, 8.1, 8.3)\n# index[0:3]\nprint(f'numbers[0:4] : &#123;numbers[0:4]&#125;')\n# index[2:4]\nprint(f'numbers[2:5] : &#123;numbers[2:5]&#125;')\n# index[3:]\nprint(f'numbers[3:] : &#123;numbers[3:]&#125;')\n# index[2:-2]\nprint(f'numbers[2:-2] : &#123;numbers[2:-2]&#125;')\n# index[0::3]\nprint(f'numbers[0::3] : &#123;numbers[0::3]&#125;')\n\n과목별 점수를 입력받아 학점을 출력하자korScore = int(input('국어 점수 입력: '))\nengScore = int(input('영어 점수 입력: '))\nmthScore = int(input('수학 점수 입력: '))\nsciScore = int(input('과학 점수 입력: '))\nhisScore = int(input('국사 점수 입력: '))\n\nscores = (\n\t\t  &#123;'kor':korScore&#125;,\n\t\t  &#123;'eng':engScore&#125;,\n\t\t  &#123;'mth':mthScore&#125;,\n\t\t  &#123;'sci':sciScore&#125;,\n\t\t  &#123;'his':hisScore&#125;\n)\n\nprint(scores)\nfor item in scores:\n\tfor key in item.keys()\n\t\tif item[key] >= 90:\n\t\t\titem[key] = 'A'\n\t\telif item[key] >= 80:\n\t\t\titem[key] = 'B'\n\t\telif item[key] >= 70:\n\t\t\titem[key] = 'C'\n\t\telif item[key] >= 60:\n\t\t\titem[key] = 'D'\n\t\telse: \n\t\t\titem[key] = 'F'\n\n48_[연습문제] 튜플(05)딕셔너리 오름차순&amp;내림차순 정렬하기fruits = &#123;&#123;'수박':8&#125;,&#123;'포도':,13&#125;,&#123;'참외':12&#125;,&#123;'사과':17&#125;,&#123;'자두':19&#125;,&#123;'자몽':15&#125;&#125;\nfruits = list(fruits)\n\ncIdx = 0; nIdx = 1\neIdx = len(fruits) - 1\nflag = True\n\nwhile flag:\n\tcurDic = fruits[cIdx]\n\tnextDic = fruits[nIdx]\n\tcurDicCnt = list(curDic.value())[0]\n\tnextDicCnt = list(nextDic.value())[0]\n\tif nextDicCnt &lt; curDicCnt: # >이면 내림차순정렬\n\t\tfruits.insert(cIdx, fruits.pop(nIdx)) #자리바꿈\n\t\tnIdx = cIdx + 1 #반복 초기화\n\t\tcontinue\n\tnIdx += 1\n\tif nIdx > dIdx:\n\t\tcIdx += 1\n\t\tnIdx = cIdx +1\n\t\tif cIdx == 5\n\t\t\tflag = False\n\nprint(tuple(fruits))\n49_[연습문제] 딕셔너리(01)학급별 학생 수를 나타낸 튜플을 이용해서, 요구 사항에 맞는 데이터를 출력하는 프로그램을 만들어보자- 전체학생 수\n- 평균학생 수\n- 학생 수가 가장 적은 학급\n- 학생 수가 가장 많은 학급\n- 학급별 학생 편차\n\nstudentCnt = (&#123;'cls01':18&#125;,\n\t\t\t &#123;'cls02':21&#125;,\n\t\t\t &#123;'cls03':20&#125;,\n\t\t\t &#123;'cls04':19&#125;,\n\t\t\t &#123;'cls05':22&#125;,\n\t\t\t &#123;'cls06':20&#125;,\n\t\t\t &#123;'cls07':23&#125;,\n\t\t\t &#123;'cls08':17&#125;)\ntotalCnt = 0\nminStdCnt = 0; minCls = ''\nmaxStdCnt = 0; maxCls = ''\ndeviation = []\n\nfor idx, dic in enumerate(studentCnt):\n\tfor k, v in dic.items():\n\t\ttotalCnt = totalCnt + v\n\t\tif minStdCnt == 0 or minStdCnt > v;\n\t\t\tminStdCnt = v;\n\t\t\tminCls = k\n\t\tif maxStdCnt &lt; v:\n\t\t\tmaxStdCnt = v\n\t\t\tmaxCls = k\nprint(f'전체 학생 수: &#123;totalCnt&#125;')\n\navgCnt = totalCnt/len(studentCnt)\nprint(f'평균 학생 수: &#123;avgCnt&#125;')\n\nprint(f'학생 수가 가장 적은 학급: &#123;minCls&#125;(&#123;minStdCnt&#125;)')\nprint(f'학생 수가 가장 많은 학급: &#123;maxCls&#125;(&#123;maxStdCnt&#125;)')\n\nfor idx,dic in enumerate(StudentCnt):\n\tfor k,v in dic.items():\n\t\tdeviation.append(v-avgCnt)\n\nprint(f'학급별 학생 편차: &#123;deviation&#125;')\n50_[연습문제] 딕셔너리(02)과목별 점수를 딕셔너리에 저장하고 출력하는 프로그램을 만들어보자subject = ['국어','영어','수학','과학','국사']\nscores = &#123;&#125;\n\nfor s in subject:\n\tscore = input(s + '점수 입력: ')\n\tscores[s] = score\nprint(f'과목별 점수: &#123;scores&#125;')\n사용자의 아이디,비밀번호를 이용해서 로그인 프로그램을 만들어보자.members = &#123;'urkpo':'0928^7$',\n\t\t  'dsafsad':'#@!$#@^',\n\t\t  'gdahla':'!@%($@)',\n\t\t  'asdlg':'$^#@&amp;',\n\t\t  'dfhlks':'#$*%$*',\n\t\t  'sdgkwvlk':'^$#*$#@*',\n\t\t  'hejpr':'&amp;$@$@*#*',\n\t\t  'aglhsd':'*%#$*@%',\n\t\t  'tnkjrsg':'*(*%#@',\n\t\t  'CNBfak':'^%$@*^$*'&#125;\nmemID = input('ID 입력: ')\nmemPW = input('PW 입력: ')\n\nif memID in members:\n\tif members[memID] == memPW:\n\t\tprint('로그인 성공!')\n\telse: \n\t\tprint('비밀번호 확인!')\n\t\nelse: \n\tprint('아이디 확인!')\n51_[연습문제] 딕셔너리(03)삼각형부터 십각형까지의 내각의 합과 내각을 딕셔너리에 저장하는 프로그램을 만들어보자dic = &#123;&#125;\n\nfor n in range(3,11):\n\tintetiorAngleSum = 180 * (n-2)\n\tangle = int(intetiorAngleSum / n)\n\tdic[n] = [intetiorAngleSum, angle]\nprint(dic)\n1부터 10까지의 각각의 정수에 대한 약수를 저장하는 딕셔너리를 만들고 출력하는 프로그램을 만들어보자dic = &#123;&#125;\n\nfor n1 in range(1,11):\n\ttempList = []\n\tfor n2 in range(1,n1+1):\n\t\tif n1%n2 == 0:\n\t\t\ttempList.append(n2)\n\tdic[n1] = tempList\nprint(dic)\n52_[연습문제] 딕셔너리(04)다음 문구를 공백으로 구분하여 리스트에 저장한 후, 인덱스와 단어를 이용햐서 딕셔너리에 저장해보자&#39;파이썬은 1991년 프로그래머인 귀도 반 로섬이 발표한 고급 프로그래밍 언어이다.&#39;\n\nsplitList = aboutPython.split()\nprint(splitList)\n# ['파이썬은','1991년','프로그래머인','귀도' '반','로섬이','발표한','고급','프로그래밍','언어이다']\ndic = &#123;&#125;\nfor idx, v in enumerate(splitList):\n\tdic[idx] = v\nprint(dic)\n# &#123;0:'파이썬은',1:'1991년',2:'프로그래머인'..., 9:'언어이다'&#125;\n다음 문장에서 비속어를 찾고 비속어를 표준어로 변경하는 프로그램을 만들어보자&#39;강도들은 서로 쪼개다가, 짭새를 발견하곤 먹튀했다&#39;\n\nwords = &#123;'꺼지다':'가다',\n\t\t'짭새':'경찰관',\n\t\t'쪼개':'웃',\n\t\t'먹튀':'떼먹고 도망'\n\t\t&#125;\ntxt = '강도들은 서로 쪼개다가, 짭새를 발견하곤 먹튀했다.'\nkeys = list(words.keys())\n\nfor key in keys:\n\tif key in txt:\n\t\tprint(f'key: &#123;key&#125;')\n\t\tprint(f'words[&#123;key&#125;]: &#123;words[key]&#125;')\n\t\ttxt = txt.replace(key,words[key])\n\nprint(txt)\n딕셔너리를 이용해서 5명의 회원권을 가입받고 전체 회원 정보를 출력하는 프로그램을 만들어보자members = &#123;&#125;\nn = 1\nwhile n &lt; 6:\n\tmail = input('매일 입력: ')\n\tpw = input('비번 입력: ')\n\tif mail in members:\n\t\tprint('이미 사용중인 메일 계정입니다.')\n\t\tcontinue\n\telse: \n\t\tmembers[mail] = pw\n\t\tn += 1\nfor key in members.keys():\n\tprint(f'&#123;key&#125;: &#123;members[key]&#125;')\n\nwhile True: \n\tdelMail = input('삭제할 계정(메일) 입력: ')\n\tif delMail in members:\n\t\tdelPw = input('비번 입력: ')\n\t\tif members[delMail] == delPw:\n\t\t\tdel members[delMail]\n\t\t\tprint(f'&#123;delMail&#125; 계정 삭제 완료!')\n\t\t\tbreak\n\t\telse: \n\t\t\tprint('비번 확인 요망!')\n\telse:\n\t\tprint('계정 확인 요망!')\n\nfor key in members.keys():\n\tprint(f'&#123;key&#125;:&#123;members[key]&#125;')\n53_[연습문제] 딕셔너리(05)다음은 학생 정보 테이블이다. 파이썬에서 학생 정보를 가장 효율적으로 저장하고 관리할 수 있는 자료구조를 선택해서 컨테이너 자료형으로 만들어보자.\n\n\n학생번호\n이름\n성구분\n전공\n연락처\n메일\n취미\n\n\n\nS21-0001\n최성훈\nM\n디자인\n010-1234-5678\n&#x68;&#x75;&#x6e;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\n농구,음악\n\n\nS21-0002\n탁영우\nM\n바리스트\n010-5678-9012\n&#121;&#101;&#111;&#110;&#103;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#109;\n축구\n\n\nS21-0003\n황진영\nW\n음악\n010-9012-3456\n&#x6a;&#x69;&#x6e;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;\n수영,코딩\n\n\nstudents = &#123;'S21-0001':&#123;'이름':'최성훈',\n\t\t\t'성구분':'M',\n\t\t\t'전공':'디자인',\n\t\t\t'연락처':'010-1234-5678',\n\t\t\t'메일':'hun@gmail.com',\n\t\t\t'취미':['농구','음악']&#125;,\n\t\t\t'S21-0002':&#123;'이름':'탁영우',\n\t\t\t'성구분':'M',\n\t\t\t'전공':'바리스타',\n\t\t\t'연락처':'010-5678-9012',\n\t\t\t'메일':'yeong@gmail.com',\n\t\t\t'취미':['축구']&#125;,\n\t\t\t'S21-0003':&#123;'이름':'황진영',\n\t\t\t'성구분':'W',\n\t\t\t'전공':'음악',\n\t\t\t'연락처':'010-9012-3456',\n\t\t\t'메일':'jin@gmail.com',\n\t\t\t'취미':['수영','코딩']&#125;,\n\t\t\t&#125;\nfor k1 in students:\n\tprint('-'*40)\n\tprint(f'학생번호: &#123;k1&#125;')\n\tstudent = students[k1]\n\tfor k2 in student.keys():\n\t\tprint(f'&#123;k1&#125;:&#123;k2&#125;')\nstudentNo = input('조회할 학생 번호 입력: ')\nprint(f'&#123;studentNo&#125;:&#123;students[studentNo]&#125;')\n01_선형 검색 - 이론선형검색: 선형으로 나열된 데이터를 순차적으로 스캔하면서 검색\ndata = [3,2,5,7,9,1,0,8,6,4]\nprint(f'data: &#123;data&#125;')\nprint(f'data length: &#123;len(data)&#125;)\nsearchedDatum = int(input('찾으랴는 숫자 입력: '))\nsearchResultIdx = -1\n\nn = 0\n\nwhile True:\n\t  if n = len(data)\n\t  searchResultIdx = -1\n\t  break\n\t  elif data[n] == searchedDatum:\n\t\t  searchResultIdx = n\n\t\t  break\n\tn += 1\n\nprint(f'searchedDatum is in:&#123;searchResultIdx&#125;')\n보초법: 마지막 인덱스에 찾으려는 값을 추가해서 찾는 과정을 간략화\n\n검색 성공: 마지막 인덱스 전에 ‘9’가 검색된 경우\n검색 실패: 마지막 인덱스 ‘9’만 검색된 경우\n\n02_선형 검색 - 실습리스트에서 가장 앞에 있는 숫자 ‘7’을  검색하고 위치(인덱스)를 출력하자nums = [4,7,10,2,4,7,0,2,7,3,9]\n\nnums = [4,7,10,2,4,7,0,2,7,3,9]\n\nprint(f'nums: &#123;nums&#125;')\nprint(f'nums: &#123;len(nums)&#125;')\n\nsearchData = int(input('input search number: '))\nsearchResultIdx = -1\n\nnums.append(searchData)\n\nn = 0\nwhile True :\n\tif num[n] == searchData:\n\t\tif n != len(nums) - 1:\n\t\t\tsearchResultIdx = n\n\t\tbreak\n\tn += 1\n\nprint(f'nums: &#123;nums&#125;')\nprint(f'nums length: &#123;len(nums)&#125;')\nprint(f'searchResultIdx: &#123;searchResultIdx&#125;')\n\nif searchResultIdx &lt; 0:\n\tprint('not a search Index')\nelse: \n\tprint(f'search index: &#123;searchResultIdx&#125;')\n리스트에서 숫자’7’을 모두 검색하고 각각의 위치(인덱스)와 검색 개수를 출력하자nums = [4,7,10,2,4,7,0,2,7,3,9]\n\nnums = [4,7,10,2,4,7,0,2,7,3,9]\n\nprint(f'nums: &#123;nums&#125;')\nprint(f'nums: &#123;len(nums)&#125;')\n\n\ndef searchNum(tempNums):\n\tsearchData = int(input('input search number: '))\n\tsearchResultIdxs = []\n\ttempNums.append(searchData)\n\t\n\tn = 0\n\twhile True :\n\t\tif nums[n] == searchData:\n\t\t\tif n != len(tempNums) - 1:\n\t\t\t\tsearchResultIdxs.append(n)\n\t\t\telse:\n\t\t\t\tbreak\n\t\tn += 1\n\treturn searchResultIdxs\n\nprint(f'nums: &#123;nums&#125;')\nprint(f'nums length: &#123;len(nums)&#125;')\nprint(f'searchResultIdxs: &#123;searchResultIdxs&#125;')\nprint(f'searchResultIdxs Counts: &#123;len(searchResultIdxs)&#125;')\n\n03_이진 검색 - 이론이진검색: 정렬되어있는 자료구조에서 중앙값과의 크고 작음을 이용해서 데이터를 검색한다\ndata = [1,2,3,4,5,6,7,8,9,10,11]\nprint(f'data: &#123;data&#125;')\nprint(f'data length: &#123;len(data)&#125;')\n\nsearchData = int(input('찾으려는 숫자 입력: '))\nsearchResultIdx = -1\n\nheadIdx = 0\ntailIdx = len(data) - 1\nmedIdx = (headIdx + tailIdx) // 2\n# 짝수개 홀수개 나눠야하는데.... 짝수개일 때는 양옆의 산술평균번째 값... 으 불편...\n# 다섯숫자요약에서 분위수 공식 때렸을 때\n# i) n(정수)번째는 그대로 사용\n# ii) n.5번째는 양옆값의 산술평균번째 값\n# iii) else: 반올림번째 값 \n# 이어야 하지만 일단 그냥 넘어가겠습니다.\nmedian = data[midIdx]\n\nwhile searchData &lt;= data[len(data)-1] and searchData >= data[0]:\n\tif searchData == data[len(data)-1]:\n\t\tsearchREsultIdx = lend(data)-1\n\t\tbreak\n\tif searchData > median:\n\t\theadIdx = medIdx\n\t\tmedIdx = (headIdx+tailIdx) // 2\n\t\tmedian = data[medIdx]\n\t\tprint(f'medIdx: &#123;medIdx&#125;')\n\t\tprint(f'median: &#123;median&#125;')\n\telif searchData &lt; median:\n\t\ttailIdx = medIdx\n\t\tmedIdx = (headIdx+tailIdx)//2\n\t\tmedian = data[medIdx]\n\t\tprint(f'medIdx: &#123;medIdx&#125;')\n\t\tprint(f'median: &#123;median&#125;')\n\telif searchData == median:\n\t\tsearchResultIdx = medIdx\n\t\tbreak\n\nprint(f'searchResultIdx: &#123;searchResultIdx&#125;')\n04_이진 검색 - 실습리스트를 오름차순으로 정렬한 후, ‘7’을 검색하고 위치(인덱스)를 출력하자nums = [4,10,22,5,0,17,7,11,9,61,88]\n\nnums = [4,10,22,5,0,17,7,11,9,61,88]\nnums.sort()\n\nsearchData = int(input('찾으려는 숫자 입력: '))\nsearchResultIdx = -1\n\nheadIdx = 0\ntailIdx = len(data) - 1\nmedIdx = (headIdx + tailIdx) // 2\n# 짝수개 홀수개 나눠야하는데.... 짝수개일 때는 양옆의 산술평균번째 값... 으 불편...\n# 다섯숫자요약에서 분위수 공식 때렸을 때\n# i) n(정수)번째는 그대로 사용\n# ii) n.5번째는 양옆값의 산술평균번째 값\n# iii) else: 반올림번째 값 \n# 이어야 하지만 일단 그냥 넘어가겠습니다.\nmedian = data[midIdx]\n\nwhile searchData &lt;= data[len(data)-1] and searchData >= data[0]:\n\tif searchData == data[len(data)-1]:\n\t\tsearchResultIdx = lend(data)-1\n\t\tbreak\n\tif searchData > median:\n\t\theadIdx = medIdx\n\t\tmedIdx = (headIdx+tailIdx) // 2\n\t\tmedian = data[medIdx]\n\t\tprint(f'medIdx: &#123;medIdx&#125;')\n\t\tprint(f'median: &#123;median&#125;')\n\telif searchData &lt; median:\n\t\ttailIdx = medIdx\n\t\tmedIdx = (headIdx+tailIdx)//2\n\t\tmedian = data[medIdx]\n\t\tprint(f'medIdx: &#123;medIdx&#125;')\n\t\tprint(f'median: &#123;median&#125;')\n\telif searchData == median:\n\t\tsearchResultIdx = medIdx\n\t\tbreak\n\nprint(f'searchResultIdx: &#123;searchResultIdx&#125;')\n05_순위 - 이론순위: 수의 크고 작음을 이용해서 수의 순서를 정하는 것\nimport random as rd\n\nnums = rd.sample(range(50,101),20)\nranks = [0 for i in range(20)]\n# nums = [98,67,99,52,89,78,57,65,50,74,58,71,68,96,86,85,93,94,66,97]\n\nfor idx,num1 in enumerate(nums):\n\tfor num2 in nums:\n\t\tif num1 &lt; num2:\n\t\t\tranks[idx] += 1\n# 외워\nprint(f'nums: &#123;nums&#125;')\nprint(f'ranks: &#123;ranks&#125;')\n\nfor idx, num in enumerate(nums):\n\tprint(f'num: &#123;num&#125;\\t rank: &#123;ranks[idx]+1&#125;')\n06_순위 - 실습학급 학생(20명)들의 중간고사 성적을 이용해서 각각의 순위를 구하고, 중간고사 대비 기말고사 순위 변화(편차)를 출력하는 프로그램을 만들어보자.(시험 성적은 난수를 이용한다)RankMod.py\n\nclass RankDeviation:\n\tdef __init__(self,mss,fss):\n\t\tself.midtermStuScore = mss\n\t\tself.finalStuScore = fss\n\t\tself.midRanks = [0 for i in range(len(mss))]\n\t\tself.finRanks = [0 for i in range(len(fss))]\n\t\tself.rankDeviation = [0 for i in range(len(mss))]\n\t\n\tdef setRank(self,ss,rs):\n\t\tfor idx,score1 in enumerate(ss):\n\t\t\tfor score2 in ss:\n\t\t\t\tif score1 &lt; score2: \n\t\t\t\t\trs[idx] += 1\n\t\t\t#외웠제?\n\t\n\tdef setMidRank(self):\n\t\tself.setRank(self.midtermStuScore,self.midRanks)\n\tdef setFinRank(self):\n\t\tself.setRank(self.finalStuScore,self.finRanks)\n\t\n\tdef getMidRank(self):\n\t\tself.setRank(self.midRanks)\n\tdef getFinRank(self):\n\t\tself.setRank(self.finRanks)\n\t\n\tdef printRankDeviation(self):\n\t\tfor idx, mRank in enumerate(self.midRanks):\n\t\t\tdeviation = mRank - self.endRanks[idx]\n\t\t\tif deviation > 0:\n\t\t\t\tdeviation = '🔼'+str(abs(deviation))\n\t\t\telif deviation &lt; 0:\n\t\t\t\tdeviation = '🔽'+str(abs(deviation))\n\t\t\telse: \n\t\t\t\tdeviation = '🟰'+str(abs(deviation))\n\t\t\tprint(f'midterm rank: &#123;mRank&#125;; \\t final rank: &#123;self.endRanks[idx]&#125;; \\t deviation: &#123;deviation&#125;')\nex.py\n\nimport rankMod as rM\nimport random as rd\n\nmidStuScores = rd.sample(range(50,101),20)\nfinStuScores = rd.sample(range(50,101),20)\nsR = rM.RankDeciation(midStuScores,finStuScores)\n\nsR.setMidRank()\nsR.setFinRank()\n\nprint(f'midtermStuScore:&#123;midStuScores&#125;; \\t midterm ranks: &#123;sR.getMidRank()&#125;')\nprint(f'finalStuScore:&#123;finStuScores&#125;; \\t midterm ranks: &#123;sR.getFinRank()&#125;')\n\nsR.printRankDeviation()\n07_버블 정렬 - 이론08_버블 정렬 - 실습09_삽입 정렬 - 이론10_삽입 정렬 - 실습","slug":"zeroBase-DS-4th-02","date":"2023-03-21T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"07cf3672f04215a9dd7f4a2ff03096af","title":"zeroBase_DS 4주차 월요일 스터디노트","content":"4th WeekMonday18_리스트 나머지 기능들 (01)리스트를 곱셈연산하면 아이템이 반복된다students = ['a','b','c']\ndoubleStudents = students*2\nindex(item)으로 인덱스 알아내기students = ['a','b','c']\nprint(students.index('b')) # 1\n\nstudents1 = ['a','b','c','d','e','b','f']\nsearchIdx = students.Index('b',2,6)\nprint(searchIdx) # 6\n\n1부터 10까지의 정수가 중복되지 않고 섞여있을 때, 행운의 숫자 7의 위치 찾기import random\nsampleList = random.sample(range(1,11),10)\n\nselectIdx = int(input('숫자 7의 위치 입력: '))\nsearchIdx = sampleList.index(7)\n\nif searchIdx == selectIdx:\n\tprint('Correct number was selected.')\nelse: \n\tprint('Sorry.')\nprint(f'sampleList: &#123;sampleList&#125;')\nprint(f'searchIdx: &#123;searchIdx&#125;')\ndel 키워드로 슬라이싱삭제students = ['A','B','C','D','E','F','G']\ndel students[2:]\nprint(students) # ['A','B']\ntype &#x3D; types[random.randrange(len(types))]todayData.append(type)\n\n하루 동안 헌혈을 진행한 후 혈액형 별 개수를 파악하는 프로그램을 만들어보자import random\ntypes = ['A','B','AB','O']\ntodayData = []\ntypeCnt = []\n\nfor i in range(100):\n\ttype = types[random.randrange(len(types))]\n\ttodayData.append(type)\n\t\nprint(f'todayData: &#123;todayData&#125;')\nprint(f'todayData length: &#123;len(todayData)&#125;')\n\nfor type in type:\n\tprint(f'&#123;type&#125;형 : &#123;todayData.count(type)&#125;개')\nTuple은 아이템 변경 불가; tuple does not support item assignment19_리스트 나머지 기능들 (02)tuple도 item에 자동으로 index부여5명의 학생 이름을 튜플에 저장하고, 인덱스가 홀수인 학생과 짝수(0포함)인 학생을 구분해서 인덱스와 학생 이름을 출력해보자students = ['A','B','C','D','E','F','G']\nprint('===인덱스가 짝수인 학생===')\nfor std in len(students):\n\tif std % 2 == 0:\n\t\tprint(f'인덱스 짝수: students[&#123;std&#125;],&#123;students[std]&#125;')\n\telse: \n\t\tprint(f'인덱스 홀수: students[&#123;std&#125;],&#123;students[std]&#125;')\n\n20_튜플(Tuple)tuple은 item 추가&#x2F;변경&#x2F;삭제 불가tuple은 괄호 생략 선언 가능students = 'A','B','C','D','E'\nprint(students)\n# ('A','B','C','D','E')\nprint(type(students))\n# &lt;class 'tuple'>\n21_튜플 아이템 조회tuple을 이용한 점수표에서 최저,최고 점수를 삭제한 후, 총점과 평균을 출력해보자\n\n\n점수1\n점수2\n점수3\n점수4\n점수5\n점수6\n\n\n\n9.5\n8.9\n9.2\n9.8\n8.8\n9.0\n\n\nplayerScore = (9.5,8.9,9.2,9.8,8.8,9.0)\nplayerScoreList = list(playerScore)\nplayerScoreList.sort()\n\nplayerScoreList.pop[0]\nplayerScoreList.pop[-1]\n\nsummation = 0; average = 0\nfor score in playerScore:\n\tsummation += score\naverage = summation / len(playerScoreList)\n\nprint(f'총점: &#123;summation&#125;')\nprint(f'평균: &#123;average&#125;')\n22_in과 not in 키워드아이템 존재 유무 판단하기in, not in 키워드를 이용하면 아이템의 존재 유무를 파악할 수 있음studentsTuple = ('A','B','C','D','E')\nsearchName = input('학생 이름 입력: ')\nif searchName in studentsTuple:\n\tprint(f'&#123;searchName&#125;학생은 우리반 학생입니다.')\nelse: \n\tprint(f'&#123;searchName&#125;학생은 우리반 학생이 아닙니다.')\nin, not in 키워드는 문자열에서도 사용 가능하다pythonStr = 'Life is short, You need Python.'\nprint(f'&#123;'Python'&#125;:&#123;'Python' in pythonStr&#125;') # True\nprint(f'&#123;'python'&#125;:&#123;'python' in pythonStr&#125;') # False\n컴퓨터가 1부터 10까지 5개의 난수를 생성한 후, 사용자가 입력한 숫자가 있는지 없는지를 출력하는 프로그램을 만들어보자import random\nrandomNums = random.sample(range(1,11),5)\nuserNum = int(input('[1:10]의 아무 숫자나 입력해보세요. :'))\n\nif userNum in randomNums:\n\tprint(f'&#123;userNum&#125;is in &#123;randomNums&#125;')\nelse:\n\tprint(f'&#123;userNum&#125;is not in &#123;randomNums&#125;')\n문장에서 비속어가 있는지 알아내는 프로그램을 만들어보자wrongWord = ['오지고','지리고','렛잇고','쩔었고','울부짓었다','졸라','엇다','이겼따','새상에서','제기랄','짱이었따','꼐속']\nsentence = '\"크아아아아\" 드래곤중에서도 최강의 투명드래곤이 울부짓었다 투명드래곤은 졸라짱쎄서 드래곤중에서 최강이엇다 신이나 마족도 이겼따 다덤벼도 이겼따 투명드래곤은 새상에서 하나였다 어쨌든 걔가 울부짓었다 \"으악 제기랄 도망가자\" 발록들이 도망갔다 투명드래곤이 짱이었따 그래서 발록들은 도망간 것이다 꼐속 '\nfor word in wrongWord:\n\tif word in sentence:\n\t\tprint(f'Slang or grammatical error: &#123;word&#125;')\n23_튜플 길이len()을 이용한 tuple의 item 조회students = ['A','B','C','D','E','F','G']\nfor i in range(len(students)):\n\tprint(f'i: &#123;i&#125;')\n\tprint(f'students[&#123;i&#125;]: &#123;students[i]&#125;')\n\nn = 0\nwhile n &lt; len(students):\n\tprint(f'n:&#123;n&#125;')\n\tprint(f'students[&#123;n&#125;]: &#123;students[n]&#125;')\n\tn += 1\n24_튜플 결합리스트에서 사용할 수 있는 extend()는 튜플에서 사용 불가studentList1 = ['A','B','C']\nstudentList2 = ['D','E','F']\n\nstudentList1.extend(studentList2)\nprint(f'studentList1: &#123;studentList1&#125;')\n# studentList1: ['A','B','C', 'D','E','F']\nfavoriteNums &#x3D; favoriteNumsOfMine + (num, )튜플을 이용해서 나와 친구가 좋아하는 번호를 합치되 번호가 중복되지 않게 하는 프로그램을 만들자favoriteNumsOfMine = (1,3,5,6,7)\nfavoriteNumsOfFriends = (2,3,5,8,10)\nourFavoriteNums = ()\nprint(f'My favorite numbers: &#123;favoriteNumsOfMine&#125;')\nprint(f'My friend\\'s favorite numbers: &#123;favoriteNumsOfFriends&#125;')\n\nfor num in favoriteNumsOfFriends:\n\tif num not in favoriteNumsOfMine:\n\t\tourFavoriteNums = favoriteNumsOfMine + (num, )\n\nprint(f'Our favorite numbers: &#123;ourFavoriteNums&#125;')\n25_튜플 슬라이싱[n:m]으로 튜플슬라이싱 가능students = ('A','B','C','D','E','F')\nprint(f'students: &#123;students&#125;')\nprint(f'students: &#123;students[2:4]&#125;')\nprint(f'students: &#123;students[:4]&#125;')\nprint(f'students: &#123;students[2:-2]&#125;')\nprint(f'students: &#123;students[-5:-2]&#125;')\nprint(f'students: &#123;students[::2]&#125;')\n26_리스트와 튜플tuple은 슬라이싱을 이용해서 아이템을 변경할 수 없기에, 리스트로 작업하고 튜플 아이템으로 전환해야함students = ['A','B','C','D','E','F']\nstudents.pop()\n\ntupledStudents = tuple(students)\nprint(type(tupledStudents))\n# &lt;class 'tuple'>\n\ntupledStudents = list(tupledStudents)\nprint(type(tupledStudents))\n# &lt;class 'list'>\n\n27_튜플 아이템 정렬sorted()를 이용하면 튜플을 정렬해 list를 반환students = 'A','B','C','D','E','F'\nprint(students)\nprint(type(students))\n\nstudents.sorted()\nprint(students)\nprint(type(students))\n28_튜플과 for문 (01)for문을 이용한 튜플 조회cars = '그랜저','소나타','말리부','카니발','쏘렌토'\nfor i in range(len(cars)):\n\tprint(cars[i])\n\nfor car in cars:\n\tprint(car)\nfor문을 이용한 내부 튜플 조회studentCnts = (1,19),(2,20),(3,22),(4,18),(5,21)\nsummation = 0; average = 0\n\nfor classNo, cnt in studentCnts:\n\tprint(f'&#123;classNo&#125;학급 학생 수: &#123;cnt&#125;')\n\tsummation += cnt\n\nprint(f'전체 학생 수: &#123;summation&#125;')\nprint(f'평균 학생 수: &#123;summation/len(studentCnts)&#125;')\n29_튜플과 for문 (02)for문과 if문을 이용햐서 과락 과목 출력하기minScore = 60\nscores = (\n\t\t  ('kor':58),\n\t\t  ('eng':98),\n\t\t  ('mth':88),\n\t\t  ('sci':78),\n\t\t  ('his':78))\n# version 1\nfor item in scores:\n\tif item[1] &lt; minScore:\n\t\tprint(f'We\\'ll regret to say this, however, your &#123;item[0]&#125; score is &#123;item[1]&#125;, which means you failed &#123;item[0]&#125;.')\n# version 2\nfor subject, score in scores:\n\tif score &lt; minScore:\n\t\tprint(f'과락과목: &#123;subject&#125;,점수: &#123;score&#125;')\n# version 3: continue 이용\nfor subject, score in scores:\n\tif score >= minScore: continue\n\tprint(f'We\\'ll regret to say this, however, your &#123;subject&#125; score is &#123;score&#125;, which means you failed &#123;subject&#125;.')\n\n\n\n\n학급\n1학급\n2학급\n3학급\n4학급\n5학급\n6학급\n7학급\n\n\n\n학생수\n18\n19\n23\n21\n20\n22\n17\n\n\nstudentCnts = (1,18),(2,19),(3,23),(4,21),(5,20),(6,22),(7,17)\nminClassNo = 0; maxClassNo = 0; minCnt = 0; maxCnt = 0\n\nfor classNo,cnt in studentCnts:\n\tif minCnt == 0 or minCnt > cnt:\n\t\tminClassNo = classNo\n\t\tminCnt = cnt\n\tif maxCnt &lt; cnt:\n\t\tmaxClassNo = classNo\n\t\tmaxCnt = cnt\nprint(f'학생 수가 가장 많은 학급과 학생수: &#123;maxClassNo&#125;반,&#123;maxCnt&#125;명')\nprint(f'학생 수가 가장 많은 학급과 학생수: &#123;minClassNo&#125;반,&#123;minCnt&#125;명')\n30_튜플과 while문 (01)while문으로 다양하게 아이템 조회하기cars = '그랜저','소나타','말리부','카니발','쏘렌토'\n# version 1\nn = 0\nwhile n &lt; len(cars):\n\tprint(cars[n])\n\tn += 1\n# version 2\nn = 0\nflag = True\nwhile flag:\n\tprint(cars[n])\n\tn += 1\n\tif n == len(cars):\n\t\tflag = False\n# version 3\nn = 0\nwhile True:\n\tprint(cars[n])\n\tn += 1\n\tif n == len(cars):\n\t\tbreak\nwhile문으로 학급 인원수, 전체 학생 수 및 평균 학생 수 조회하기\n\n\n1반\n2반\n3반\n4반\n5반\n\n\n\n19\n20\n22\n18\n21\n\n\nstudentCnts = (1,19),(2,20),(3,22),(4,18),(5,21)\nn = 0; summation = 0\n\nwhile n &lt; len(studentCnts):\n\tprint(f'&#123;studentCnts[n][0]&#125;학급 학생수: &#123;studentCnts[n][1]&#125;')\n\tsummation += studentCnts[n][0]\n\tn += 1\n\nprint(f'전체 학생 수: &#123;summation&#125;명; 학급 당 평균 학생 수: &#123;summation/len(studentCnts)&#125;')\n31_튜플과 while문 (02)while문과 if문을 이용해서 과락 과목 출력하기minScore = 60\nscores = (\n\t\t  ('kor',58),\n\t\t  ('eng',98),\n\t\t  ('mth',88),\n\t\t  ('sci',88),\n\t\t  ('his',88))\n\nn = 0\nwhile n &lt; len(scores):\n\tif scores[n][1] &lt; minScore:\n\t\tprint(f'과락 과목: &#123;scores[n][0]&#125;, 점수: &#123;scores[n][1]&#125;')\n\tn += 1\nwhile문을 이용해서 학급 학생 수가 가장 작은 학급과 가장 많은 학급 출력하기\n\n\n학급\n1학급\n2학급\n3학급\n4학급\n5학급\n6학급\n7학급\n\n\n\n학생수\n18\n19\n23\n21\n20\n22\n17\n\n\nstudentCnts = (1,18),(2,19),(3,23),(4,21),(5,20),(6,22),(7,17)\nminClassNo = 0; maxClassNo = 0; minCnt = 0; maxCnt = 0\n\nn = 0\nwhile n &lt; len(studentCnts):\n\tif minCnt == 0 or minCnt > studentCnts[n][1]:\n\t\tminClassNo = studentCnts[n][0]\n\t\tminCnt = studentCnts[n][1]\n\tif maxCnt &lt; studentCnts[n][1]:\n\t\tmaxClassNo = studentCnts[n][0]\n\t\tmaxCnt = studentCnts[n][1]\n\tn += 1\nprint(f'학생수가 가장 적은 학급은 &#123;minClassNo&#125;반이며, &#123;minCnt&#125;명으로 구성됐습니다.')\nprint(f'학생수가 가장 적은 학급은 &#123;maxClassNo&#125;반이며, &#123;maxCnt&#125;명으로 구성됐습니다.')\n32_딕셔너리(dictionary)key와 value에는 숫자,문자(열),논리형 뿐만 아니라 컨테이너 자료형도 올 수 있다.단, key에 immutable값을 지정할 수 있지만, mutable 값은 지정할 수 없다students = &#123;'s1':'ㅎㄱㄷ', 's2':'ㅂㅊㅎ','s3':'ㅇㅇㄱ','s4':'ㅂㅅㅊ','s5':'ㄱㅈㅇ'&#125;\nmemInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\nprint(memInfo['이름'])\nprint(memInfo['취미'][0])\nprint(memInfo['취미'][1])\n33_딕셔너리 조회get(key)를 이용해서 value 조회하기students = &#123;'s1':'ㅎㄱㄷ','s2':'ㅂㅊㅎ','s3':'ㅇㅇㄱ'&#125;\nprint(f'the value of \\'s3\\': &#123;students.get('s3')&#125;')\n# the value of 's3': ㅇㅇㄱ\nget()은 미리 정의되지 않은 key값을 입력해도 에러를 발생시키지 않는다students = &#123;'s1':'ㅎㄱㄷ','s2':'ㅂㅊㅎ','s3':'ㅇㅇㄱ'&#125;\nprint(f'the value of \\'s6\\': &#123;students.get('s6')&#125;')\n# the value of 's6': None\n34_딕셔너리 추가학생 정보(이름,학년,메일,주소)를 입력받아 딕셔너리에 추가해보자studentInfo = &#123;&#125;\nstudentInfo['name'] = input('Please input the name of the student: ')\nstudentInfo['grade'] = input('Please input the grade of the student: ')\nstudentInfo['mail'] = input('Please input the mail of the student: ')\nstudentInfo['address'] = input('Please input the address of the student: ')\n\nprint(f'studentInfo: &#123;studentInfo&#125;')\n0부터 10까지의 각각의 정수에 대한 팩토리얼을 딕셔너리에 추가해 보자factorialDic = &#123;&#125;\nfor i in range(11):\n\tif i == 0:\n\t\tfactorialDic[i] = 1\n\telse: \n\t\tfor j in range(1,(i+1)):\n\t\t\tfactorialDic[i] = factorialDic[i-1]*j\n\nprint(f'factorialDic: &#123;factorialDic&#125;')\n35_딕셔너리 수정학생의 시험 점수가 60점 미만이면 ‘F(재시험)’으로 값을 변경해보자scores = &#123;'kor':88,'eng':55,'mth':85,'sci':57,'his':82&#125;\nprint(f'scores: &#123;scores&#125;')\n\nminScore = 60\nfStr = 'F(재수강)'\nif scores['kor'] &lt; minScore: scores['kor'] = fStr\nif scores['eng'] &lt; minScore: scores['eng'] = fStr\nif scores['mth'] &lt; minScore: scores['mth'] = fStr\nif scores['sci'] &lt; minScore: scores['sci'] = fStr\nif scores['his'] &lt; minScore: scores['his'] = fStr\n\nprint(f'scores: &#123;scores&#125;')\n하루에 몸무게(kg)와 신장(m)이 각각 -0.3kg, +0.001m씩 변한다고 할 때, 30일 후의 몸무게와 신장의 값을 저장하고 BMI 값도 출력하는 프로그램을 만들어보자. (현재 신체정보는 아래의 dictionary에 저장돼있다.)myBodyInfo = &#123;'이름': 'gildong', '몸무게': 83.0, '키(m)':1.8&#125;\nmyBMI = 0\nprint(f'myBodyInfo: &#123;myBodyInfo&#125;')\nprint(f'myBMI: &#123;round(myBMI,2)&#125;')\ndate = 0\nwhile True: \n\tdate += 1\n\tmyBodyInfo['몸무게'] = round((myBodyInfo['몸무게']-0.3),2)\n\tprint(f'몸무게: &#123;myBodyInfo['몸무게']&#125;')\n\tmyBodyInfo['키'] = round((myBodyInfo['키']+0.001),4)\n\tprint(f'키: &#123;myBodyInfo['키']&#125;')\n\tmyBMI = myBodyInfo['몸무게']/(myBodyInfo['키']**2)\n\tif date >= 30:\n\t\tbreak\nprint(f'myBodyInfo: &#123;myBodyInfo&#125;')\nprint(f'myBMI: &#123;round(myBMI,2)&#125;')\n36_keys()와 values()로 전체 key와 value 조회하기memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\nks = memInfo.keys()\nprint(f'ks: &#123;ks&#125;')\n# ks: dict_keys(['이름','메일','학년','취미'])\nprint(f'ks type: &#123;type(ks)&#125;')\n# ks type: &lt;class 'dict_keys'>\n\nvs = memInfo.values()\nprint(f'vs: &#123;vs&#125;')\n# vs: dict_values(['ㅎㄱㄷ','gd@gmail.com',3,['농구','게임']])\nprint(f'vs type: &#123;type(vs)&#125;')\n# ks type: &lt;class 'dict_values'>\n\nitems = memInfo.items()\nprint(f'items: &#123;items&#125;')\n# items : dict_items([('이름':'ㅎㄱㄷ'),('메일':'gd@gmail.com'),('학년':3),('취미':['농구','게임'])])\nprint(f'items type: &#123;type(items)&#125;')\n# items type: &lt;class 'dict_items'>\n리스트(list())로 변환하기memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\nks = memInfo.keys()\nvs = memInfo.values()\nitems = memInfo.items()\n\nks = list(ks)\nprint(f'ks: &#123;ks&#125;')\n# ks: ['이름','메일','학년','취미']\nprint(f'ks type: &#123;type(ks)&#125;')\n# ks type: &lt;class 'list'>\n\nvs = list(vs)\nprint(f'vs: &#123;vs&#125;')\n# vs: ['ㅎㄱㄷ','gd@gmail.com',3,['농구','게임']]\nprint(f'vs type: &#123;type(vs)&#125;')\n# vs type: &lt;class 'list'>\n\nitems = list(items)\nprint(f'items: &#123;items&#125;')\n# items: [('이름':'ㅎㄱㄷ'),('메일':'gd@gmail.com'),('학년':3),('취미':['농구','게임'])]\nprint(f'items type: &#123;type(items)&#125;')\n# items type: &lt;class 'list'>\nfor문으로 조회memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\nks = memInfo.keys()\nvs = memInfo.values()\nitems = memInfo.items()\n\nks = list(ks)\nvs = list(vs)\nitems = list(items)\n\nfor key in ks: \n\tprint(f'key: &#123;ks&#125;')\nfor idx, key in enumerate(ks):\n\tprint(f'idx,key: &#123;idx&#125;,&#123;key&#125;')\n# list 배울 때 enumerate 기억하죠?\n\nfor value in vs: \n\tprint(f'value: &#123;vs&#125;')\nfor idx, value in enumerate(vs):\n\tprint(f'idx,value: &#123;idx&#125;,&#123;value&#125;')\n\nfor item in items: \n\tprint(f'item: &#123;items&#125;')\nfor idx, item in enumerate(items):\n\tprint(f'idx,item: &#123;idx&#125;,&#123;item&#125;')\n또는\nmemInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\nfor key in memInfo.keys():\n\tprint(f'&#123;key&#125;: &#123;memInfo[key]&#125;')\n# 이름: ㅎㄱㄷ\n# 메일: gd@gmail.com\n# 학년: 3\n# 취미: ['농구','게임']\n학생의 시험 점수가 60점 미만이면 ‘F(재수강)’으로 값을 변경하는 코드를 keys()를 이용해서 작성하기scores = &#123;'kor':88,'eng':55,'mth':85,'sci':57,'his':82&#125;\nprint(f'scores: &#123;scores&#125;')\n\nminScore = 60\nfStr = 'F(재수강)'\nfDic = &#123;&#125;\n\nfor key in scores:\n\tif scores[key] &lt; minScore: \n\t\tscores[key] = fStr\n\t\tfDic[key] = fStr\n\nprint(f'scores: &#123;scores&#125;')\nprint(f'fDic: &#123;fDic&#125;')\n37_딕셔너리 삭제del과 key를 이용한 item 삭제memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\ndel memInfo['메일']\nprint(f'memInfo: &#123;memInfo&#125;')\n\ndel memInfo['취미']\nprint(f'memInfo: &#123;memInfo&#125;')\npop()과 key()를 이용한 item 삭제memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\n\nreturnValue = memInfo.pop('이름')\nprint(f'memInfo: &#123;memInfo&#125;')\n# memInfo: '이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']\nprint(f'returnValue: &#123;returnValue&#125;')\n# returnValue: ㅎㄱㄷ\n딕셔너리에 저장된 점수 중 최저 및 최고 점수를 삭제하는 프로그램을 만들어보자scores = &#123;'score1':8.9, 'score2':8.1, 'score3':8.5, 'score4':9.8, 'score5':8.8&#125;\n\nminScore = 10; minScoreKey = ''\nmaxScore = 10; maxScoreKey = ''\n\nfor key in scores.keys():\n\tif scores[key] &lt; minScore:\n\t\tminScore = scores[key]\n\t\tminScoreKey = key\n\tif scores[key] > maxScore:\n\t\tmaxScore = scores[key]\n\t\tmaxScoreKey = key\n\ndef scores[minScoreKey]\ndef scores[maxScoreKey]\n38_딕셔너리 유용한 기능in&#x2F;not in으로 key 존재 유무 판단memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\nprint('이름' in memInfo)\n# True\nprint('name' in memInfo)\n# False\nprint('name' not in memInfo)\n# True\nclear()로 모든 item 삭제memInfo = &#123;'이름':'ㅎㄱㄷ','메일':'gd@gmail.com','학년':3,'취미':['농구','게임']&#125;\nprint(f'memInfo: &#123;memInfo&#125;')\n\nmemInfo.clear()\nprint(f'memInfo: &#123;memInfo&#125;')\n# memInfo: &#123;&#125;\n개인정보에 ‘연락처’와 ‘주민등록번호’가 있다면 삭제하는 코드를 작성해보자.memInfo = &#123;&#39;이름&#39;:&#39;ㄱㄷㅁ&#39;,\n           &#39;메일&#39;:&#39;gdm@gmail.com&#39;,\n           &#39;학년&#39;:3,\n           &#39;취미&#39;:[&#39;웨이트트레이닝&#39;,&#39;배드민턴&#39;],\n           &#39;나이&#39;:24,\n           &#39;연락처&#39;:&#39;010-1234-5678&#39;,\n           &#39;주민등록번호&#39;:&#39;000801-3234567&#39;\n           &#125;\ndeleteItems = [&#39;연락처&#39;,&#39;주민등록번호&#39;]\n\nfor item in deleteItems:\n    if item in myInfo:\n        del myInfo[item]\n```idx\n\n","slug":"zeroBase-DS-4th-01","date":"2023-03-20T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"0f8c72e856f76f320335a77bc9b5b490","title":"zeroBase_DS 3주차 금요일 스터디노트","content":"Friday자료구조란?컨테이너 자료형?여러개의 데이터가 묶여있는 자료형\n자료구조이러한 컨테이너 자료형의 데이터 구조로, 각 컨테이너 자료형에 따라서 차이가 있으며, 파이썬의 대표적인 컨테이너 자료형으로는 List, Tuple, Dic, Set가 있다.\n# List\nstudents = ['a','b','c']\n# Tuple\njobs = ('a','b','c')\n# Dic\nscores = &#123;'kor':88,'eng':90,'mat':95&#125;\n# Set\nallScales = &#123;100,150,90,120&#125;\nListtwoDArray = [10,20,30,[40,50,60]]\n\nstudents = ['studentA','studentB','studentC','studentD','studentE',]\n\nprint(f'students: &#123;students&#125;')\n\nfor student in students:\n\tif student = len(students):\n\t\tprint(student)\n\telse: \n\t\tprint(student,end=',')\n리스트 아이템 조회students = ['studentA','studentB','studentC','studentD','studentE']\n\nprint('--Students whose index is even number--')\nprint(students[0])\nprint(students[2])\nprint(students[4])\nprint('--Students whose index is odd number--')\nprint(students[1])\nprint(students[3])\n\nfor student in range(len(students)):\n\tif student % 2 == 0:\n\t\tprint(f'The index of student no.&#123;student&#125;(&#123;students[student]&#125;) is an even number.')\n\telse:\n\t\tprint(f'The index of student no.&#123;student&#125;(&#123;students[student]&#125;) is an odd number.')\n리스트 길이students = ['studentA','studentB','studentC','studentD','studentE']\n\nfor student in range(len(students)):\n\tif student % 2 == 0:\n\t\tprint(f'The index of student no.&#123;student&#125;(&#123;students[student]&#125;) is an even number.')\n\telse:\n\t\tprint(f'The index of student no.&#123;student&#125;(&#123;students[student]&#125;) is an odd number.')\nlen()은 리스트의 개수뿐만 아니라 문자열의 길이도 알 수 있다.\n\nhello0 = 'Hello ZeroBase.'\nprint(f'length of string is: &#123;len(hello0)&#125;')\n리스트와 for문(01)cars = ['그랜저','카니발','소나타','말리부','쏘렌토']\n\nfor car in range(len(cars)):\n\tprint(cars[car])\n\nfor car in cars:\n\tprint(car)\nfor문으로 리스트 내부의 another 리스트 참조\n\n\n\n\nclass No.\n1\n2\n3\n4\n5\n\n\n\nstdCnt\n19\n20\n22\n18\n21\n\n\nstudentCnts = [[1,19],[2,20],[3,22],[4,18],[5,21]]\n\nfor i in range(len(studentCnts)):\n\tprint(f'&#123;studentCnts[i][0]&#125;학급 학생 수: &#123;studentCnts[i][1]&#125;명')\n\nfor classNo, cnt in studentCnts:\n\tprint(f'&#123;classNo&#125;학급 학생 수: &#123;cnt&#125;명')\n리스트와 for문(02)for문과 if문을 이용해서 과락 과목 출력하기\n\nminScore = 60\nscores = [\n\t['국어',90],\n\t['영어',88],\n\t['수학',89],\n\t['국사',100],\n]\nfor subject,score in scores:\n\tif score &lt; minScore:\n\t\tprint(f'과락 과목: &#123;subject&#125;, 점수: &#123;score&#125;')\n리스트와 while문(01)cars = ['그랜저','소나타','말리부','카니발','쏘렌토']\nn = 0\nwhile n &lt; len(cars):\n\tprint(cars[n])\n\tn += 1\ncars = ['그랜저','소나타','말리부','카니발','쏘렌토']\nn = 0\nflag = True\nwhile flag : \n\tprint(cars[n])\n\tn += 1\n\tif n == len(cars):\n\t\tflag = False\ncars = ['그랜저','소나타','말리부','카니발','쏘렌토']\nn = 0\nwhile True:\n\tprint(cars[n])\n\tn += 1\n\tif n == len(cars):\n\t\tbreak\n아래 표와 리스트를 이용해서 학급별 학생 수와 전체 학생 수 그리고 평균 학생수를 출력해보자\n\n\n\n\n학급\n1\n2\n3\n4\n5\n6\n7\n\n\n\n학생수\n18\n19\n23\n21\n20\n22\n17\n\n\nc = [[1,18],\n\t[2,19],\n\t[3,23],\n\t[4,21],\n\t[5,20],\n\t[6,22],\n\t[7,17]]\nsummation = 0\naverage = 0\nn = 0\n\nwhile n &lt; len(studentsCnts):\n\tclassNo = studentsCnts[n][0]\n\tcnt = studentCnts[n][1]\n\tprint(f'&#123;classNo&#125;학급 학생 수: &#123;cnt&#125;')\n\tsum += cnt\n\tn += 1\nprint(f'전체 학생 수: &#123;summation&#125;명')\nprint(f'평균 학생 수: &#123;summation/len(studentsCnts)&#125;명')\n리스트와 while문(02)minScore = 60\nscores = [['kor',90],['eng',98],['mth',88]]\nn = 0\nwhile n &lt; len(scores):\n\tif scores[n][1] >= minScore:\n\t\tn += 1\n\t\tcontinue\n\tprint(f'과락 과목: &#123;scores[n][0]&#125;, 점수: &#123;scores[n][1]&#125;')\n\tn += 1\nstudentCnts = [[1,18],\n\t\t\t  [2,19],\n\t\t\t  [3,23],\n\t\t\t  [4,21],\n\t\t\t  [5,20],\n\t\t\t  [6,22],\n\t\t\t  [7,17]]\nminClassNo = 0; maxClassNo = 0\nminCnt = 0; maxCnt = 0\nn = 0\n\nwhile n &lt; len(studentCnts):\n\tif minCnt == 0 or minCnt > studentCnts[n][1]:\n\t\tminClassNo = studentCnts[n][0]\n\t\tminCnt = studentCnts[n][1]\n\tif maxCnt &lt; studentCnts[n][1]:\n\t\tmaxClassNo = studentCnts[n][0]\n\t\tmaxCnt = studentCnts[n][1]\n\tn += 1\n\nprint(f'학생 수가 가장 적은 학급(학생수):&#123;minClassNo&#125;학급&#123;minCnt&#125;명')\nprint(f'학생 수가 가장 많은 학급(학생수):&#123;minClassNo&#125;학급&#123;maxCnt&#125;명')\nenumerate()sports = ['농구','수구','축구','마라톤','테니스']\nfor i in range(len(sports)):\n\tprint(f'&#123;i&#125; : &#123;sports[i]&#125;')\n\nfor i in enumerate(sports):\n\tprint(f'&#123;idx&#125;:&#123;value&#125;')\n\nstr = 'Hello python'\nfor idx,value in enumerate(str):\n\tprint(f'&#123;idx&#125;:&#123;value&#125;')\nsports = ['농구','수구','축구','마라톤','테니스']\nfavoriteSport = input(\"가장 좋아하는 스포츠 입력: \")\nbestSportIdx = 0\nfor idx,value in enumerate(sports):\n\tif value == favoriteSport:\n\t\tbestSportIdx += idx+1\nprint(f'&#123;favoriteSport&#125;(은)는 &#123;bestSportIdx&#125;번째에 위치합니다.')\n사용자가 입력한 문자열에서 공백의 개수 출력하기\n\nmessage = input('메세지 입력: ')\ncnt = 0\nfor idx, value in enumerate(message):\n\tif value == ' ':\n\t\tcnt += 1\nprint(f'공백 개수: &#123;cnt&#125;')\n리스트에 아이템 추가append()로 마지막 인덱스에 아이템 추가하기students = ['A','B','C','D','E']\nprint(f'students: &#123;students&#125;'')\nprint(f'the length of students[]: &#123;len(students)&#125;')\nprint(f'the last index of students[]: &#123;len(students)-1&#125;')\n\nstudents.append('F')\nprint(f'students: &#123;students&#125;'')\nprint(f'the length of students[]: &#123;len(students)&#125;')\nprint(f'the last index of students[]: &#123;len(students)-1&#125;')\nscores = [['kor',88],\n\t\t ['eng',98]]\nprint(f'scores: &#123;scores&#125;')\nprint(f'the length of scores[]: &#123;len(scores)&#125;)\nprint(f'the last index if scores[]: &#123;len(scores)-1&#125;')\n\nscores.append(['mth',90])\nprint(f'scores: &#123;scores&#125;')\nprint(f'the length of scores[]: &#123;len(scores)&#125;)\nprint(f'the last index if scores[]: &#123;len(scores)-1&#125;')\n리스트의 특정 위치에 아이템 추가insert(n,’text’)students = ['A','B','C','D','E']\nprint(f'students: &#123;students&#125;'')\nprint(f'the length of students[]: &#123;len(students)&#125;')\nprint(f'the last index of students[]: &#123;len(students)-1&#125;')\n\nstudents.insert(0,'a')\nstudents.insert(2,'b')\nstudents.insert(4,'c')\nstudents.insert(6,'d')\nstudents.insert(8,'e')\nwords = ['I','a','girl']\nwords.insert(1,'am')\nfor word in words:\n\tprint(word,end=' ')\n오름차순으로 정렬돼있는 숫자들에 사용자가 입력한 정수를 추가하는 프로그램을 만들어보자. (단, 추가 후에도 오름차순 정렬이 유지돼야 한다)\n\nnumbers = [1,3,6,11,45,54,62,74,85]\ninputNum = int(input('숫자 입력: '))\ninsertIdx = 0\n\nfor idx, num in enumerate(numbers):\n\t# print(idx,num)\n\tif insertIdx == 0 and inputNum &lt; num: \n\t\tinsertIdx = idx\nnumbers.insert(insertIdx,inputNum)\nprint(numbers)\n리스트의 아이템 삭제pop()으로 마지막 index의 아이템 삭제; pop(n)으로 nth 아이템 삭제 및 할당으로 보관하기students = ['A','B','C','D','E']\nprint(f'students: &#123;students&#125;')\nprint(f'The length of students[]: &#123;len(students)&#125;')\n\nstudents.pop()\nprint(f'students: &#123;students&#125;')\nprint(f'The length of students[]: &#123;len(students)&#125;')\n# 삭제한 item 보관하기\nrmValue = students.pop(1)\nprint(f'students: &#123;students&#125;')\nprint(f'The length of students[]: &#123;len(students)&#125;')\n다음은 어떤 체조 선수의 점수표이다. 점수표에서 최저,최고 점수를 pop()하여라.\n\n\n\n\n점수1\n점수2\n점수3\n점수4\n점수5\n점수6\n\n\n\n9.5\n8.9\n9.2\n9.8\n8.8\n9.0\n\n\nplayerScores = [9.5, 8.9, 9.2, 9.8, 8.8, 9.0]\nprint(f'playerScores: &#123;playerScores&#125;')\n\nminScore = 0; maxScore = 0\nminScoreIdx = 0; maxScoreIdx = 0\n\nfor idx,score in enumerate(playerScores):\n\tif idx == 0 or minScore > score:\n\t\tminScoreIdx = idx\n\t\tminScore = score\nprint(f'Mininum Score: &#123;minScore&#125;')\nplayerScores.pop(minScoreIdx)\n\n\nfor idx,score in enumerate(playerScores):\n\tif idx == 0 or maxScore &lt; score:\n\t\tmaxScoreIdx = idx\n\t\tmaxScore = score\nprint(f'Maximum Score: &#123;maxScore&#125;')\nplayerScores.pop(maxScoreIdx)\n리스트의 특정 아이템 삭제remove()를 이용해 특정 아이템 삭제하기students = ['A','B','C','D','E','F']\nprint(f'students: &#123;students&#125;'')\nprint(f'the length of students[]: &#123;len(students)&#125;')\nprint(f'the last index of students[]: &#123;len(students)-1&#125;')\n\nstudents.remove('B')\nprint(students)\nremove()는 한 개의 아이템만 삭제 가능하다. 만약 삭제하려는 데이터가 2개 이상이라면 while문을 이용하자students = ['a','b','c','d','e','b','b']\nstudents.remove('b')\nprint(students)\n\nwhile 'b' in students:\n\tstudents.remove('b')\nprint(students)\n리스트 연결아래의 오늘 일정표에서 사용자가 입력한 일정을 삭제하는 프로그램을 만들어보자\n\n\n마케팅 회의\n\n\n\n회의록 정리\n\n\n점심 약속\n\n\n월간 업무 보고\n\n\n치과 방문\n\n\n마트 장보기\n\n\n\n\n\nmyList = ['마케팅 회의','회의록 정리','점심 약속', '월간 업무 보고','치과 방문','마트 장보기']\nprint(f'일정: &#123;myList&#125;')\n\nremoveItem = input('삭제 대상 입력: ')\nmyList.remove(removeItem)\nprint(f'일정: &#123;myList&#125;')\n리스트 아이템 정렬extend()로 리스트에 또다른 리스트 연결(확장)하기group1 = ['A','B','C','D','E']\ngroup2 = ['a','b','c','d','e']\nprint(group1) # ['A','B','C','D','E']\nprint(group2) # ['a','b','c','d','e']\n\ngroup1.extend(group2)\nprint(group1) \n# ['A','B','C','D','E','a','b','c','d','e']\nprint(group2) # ['a','b','c','d','e']\n+연산자를 이용해서 리스트를 연결할 수도 있음나와 친구가 좋아하는 번호를 합치되, 번호가 중복되지 않게 하는 프로그램을 만들자\n\nfavoriteNumbersOfMine = [1,3,5,6,7]\nfavoriteNumbersOffriends= [2,3,5,8,10]\n\nprint(f'favoriteNumbersOfMine: &#123;favoriteNumbersOfMine&#125;')\nprint(f'favoriteNumbersOffriends: &#123;favoriteNumbersOffriends&#125;')\n\naddList = favoriteNumbersOfMine + favoriteNumbersOffriends\nprint(f'addList &#123;addList&#125;')\n\nresult = []\nfor num in addList:\n\tif num not in result:\n\t\tresult.append(num)\n\nprint(f'result:&#123;result&#125;')\n\n아래 점수표에서 최저 및 최고 점수를 삭제한 후 총점과 평균을 출력해 보자\n\n\n\n\n점수1\n점수2\n점수3\n점수4\n점수5\n점수6\n\n\n\n9.5\n8.9\n9.2\n9.8\n8.8\n9.0\n\n\nplayerScores = [9.5, 8.9, 9.2, 9.8, 8.8, 9.0]\nprint(f'playerScores: &#123;playerScores&#125;')\n\nplayerScores.sort()\nprint(f'playerScores: &#123;playerScores&#125;')\n\nplayerScores.pop(0)\nplayerScores.pop(len(playerScores)-1)\nprint(f'playerScores: &#123;playerScores&#125;')\n\nsummation=0; average=0\n\nfor score in playerScores:\n\tsummation += score\naverage = summation/len(playerScores)\n# print(f'The summation of player scores: &#123;summation&#125;')\n# print(f'The average score of player scores: &#123;average&#125;')\nprint('The summation of player scores: %.2f'% summation)\nprint('The average score of player scores: %.2f'% average)\n\n리스트 아이템 순서 뒤집기.sort()로 아이템 순서정렬; .sort(reverse&#x3D;True)로 역순정렬students = ['C','D','A','B','E','F']\nprint(f'students: &#123;students&#125;'')\nprint(f'the length of students[]: &#123;len(students)&#125;')\nprint(f'the last index of students[]: &#123;len(students)-1&#125;')\n\nprint(students.sort()) \n\t  #defalut: reverse=False\nprint(students.sort(reverse=True)\n다음은 전쟁에서 사용되는 암호이다. 암호를 해독하는 프로그램을 만들어보자.\n\n\n\n\nencoded\ndecoded\n\n\n\n27156231\n13326125157214\n\n\nencoded = '27156231'\nsecretList = []\ndecoded = ''\n\nfor char in encoded:\n\tencoded.append(int(char))\n\nencoded.reverse()\nprint(encoded)\n\nval = encoded[0]*encoded[1]\nencoded.insert(2,val)\nprint(encoded)\n\nval = encoded[3]*encoded[4]\nencoded.insert(5,val)\nprint(encoded)\n\nval = encoded[6]*encoded[7]\nencoded.insert(8,val)\nprint(encoded)\n\nval = encoded[9]*encoded[10]\nencoded.insert(11,val)\nprint(encoded)\n리스트 슬라이싱[n:m]으로 리스트에서 원하는 아이템만 뽑아낼 수 있다\n\nstudents = ['A','B','C','D','E','F']\nprint(f'students: &#123;students&#125;')\nprint(f'students: &#123;students[2:4]&#125;')\nprint(f'students: &#123;students[:4]&#125;')\nprint(f'students: &#123;students[2:-2]&#125;')\nprint(f'students: &#123;students[-5:-2]&#125;')\n[n:m]을 이용하면 문자열도 슬라이싱이 가능하다\n\ntext = 'WATIRANO,MORAKANO,GIBBALLINE'\nprint(f'text length: &#123;len(text)&#125;')\nprint(f'text: &#123;text&#125;')\nprint(f'text: &#123;text[2:4]&#125;')\nprint(f'text: &#123;text[:4]&#125;')\nprint(f'text: &#123;text[2:-2]&#125;')\nprint(f'text: &#123;text[-5:-2]&#125;')\n슬라이싱할 때 단계를 설정할 수 있다\n\nnums = [2,50,0.12,1,9,7,17,35,100,3.14]\nprint(f'nums: &#123;nums[2:-2]&#125;')\n# nums: [0.12, 1, 9, 7, 17, 35]\nprint(f'nums: &#123;nums[2:-2:2]&#125;')\n# nums: [0.12, 9, 17]\nprint(f'nums: &#123;nums[:-2:2]&#125;')\n# nums: [2, 0.12, 9, 17]\nprint(f'nums: &#123;nums[::2]&#125;')\n# nums: [2, 0.12, 9, 17, 100]\n 슬라이싱을 이용해서 아이템을 변경할 수 있다\n\nstudents = ['A','B','C','D','E','F']\nprint(f'students: &#123;students&#125;')\nstudents[1:4] = ['b','c','d','e']\nprint(f'students: &#123;students&#125;')\nslice()로 아이템 슬라이싱하기students = ['A','B','C','D','E','F']\nprint(f'students: &#123;students&#125;')\nprint(f'students: &#123;students[slice(2,4)]&#125;')\nprint(f'students: &#123;students[slice(4)]&#125;')\nprint(f'students: &#123;students[slice(2,len(students))]&#125;')\n # -1 안해도돼\nprint(f'students: &#123;students[slice(len(students)-5,len(students)-2)]&#125;)\n\n","slug":"zeroBase-DS-3rd-05","date":"2023-03-17T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"ee8298805733c3c6efabef012e8ea66f","title":"zeroBase_DS 3주차 목요일 스터디노트","content":"3rd WeekThursday약수와 소수소인수와 소인수분해최대공약수최소공배수진법등차 수열등비 수열시그마계차 수열피보나치 수열팩토리얼군 수열순열조합확률","slug":"zeroBase-DS-3rd-04","date":"2023-03-16T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"829ef4d975c86b73be4764f9fe8ce223","title":"zeroBase_DS 3주차 수요일 스터디노트","content":"3rd WeekWednesday등비 수열등비 수열(파이썬) (01)inputN1 = int(input('초항 입력: '))\ninputR = int(input('공비 입력: '))\ninputN = int(input('항 수 입력: '))\n\nvalueN = 0\n\nn = 1\nwhile n &lt;= inputN:\n\tif n == 1:\n\t\tvalueN = inputN1\n\t\tprint(f'&#123;n&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tn += 1\n\t\tcontinue\n\tvalueN = valueN * inputR\n\tprint(f'&#123;n&#125;번째 항의 값: &#123;valueN&#125;')\n\tn += 1\nprint(f'&#123;inputN&#125;번째 항의 값: &#123;valueN&#125;')\n등비 수열(파이썬) (02)inputN1 = int(input('초항 입력: '))\ninputR = int(input('공비 입력: '))\ninputN = int(input('항 수 입력: '))\n\nvalueN = 0\nsumN = 0\nn =1\nwhile n &lt;= inputN:\n\tif n == 1:\n\t\tvalueN = inputN1\n\t\tsumN += valueN\n\t\tn += 1\n\t\tcontinue\n\tvalueN *= inputR\n\tsumN += valueN\n\tn += 1\nprint(f'&#123;n&#125;번째 항까지의 항: &#123;sumN&#125;')\n시그마inputN1 = int(input('초항 입력: '))\ninputD = int(input('공차 입력: '))\ninputN = int(input('항 수 입력: '))\n\nvalueN = inputN1*(inputN - 1)*inputD\nsumN = inputN * (inputN1 * valueN) / 2\nprint(f'&#123;inputN&#125;번째 항까지의 합: &#123;int(sumN)&#125;')\n계차 수열계차 수열(파이썬)# a_n = &#123;3,7,13,21,31,43,57&#125;\n# b_n = &#123;4,6,8,10,12,14&#125;\n\ninputAn1 = int(input('a_1 입력: '))\ninputAn = int(input('a_n 입력: '))\ninputBn1 = int(input('b_1 입력: '))\ninputBd = int(input('b_n 공차 입력: '))\n\nvalueAn = 0\ninputBn = 0\n\nn = 1\nwhile n &lt;= inputAn:\n\tif n == 1:\n\t\tvalueAn = inputAn1\n\t\tvalueBn = inputBn1\n\t\tprint(f'a_n의 &#123;n&#125;번째 항의 값: &#123;valueAn&#125;')\n\t\tprint(f'b_n의 &#123;n&#125;번째 항의 값: &#123;valueBn&#125;')\n\t\tn += 1\n\t\tcontinue\n\tvalueAn = valueAn + valueBn\n\tvalueBn = valueBn + inputBd\n\tprint(f'a_n의 &#123;n&#125;번째 값: &#123;valueAn&#125;')\n\tprint(f'b_n의 &#123;n&#125;번째 값: &#123;valueBn&#125;')\n\tn += 1\nprint(f'a_n의 &#123;inputAn&#125;번째 항의 값: &#123;valueAn&#125;')\nprint(f'b_n의 &#123;inputAn&#125;번째 항의 값: &#123;valueBn&#125;')\n\n#valueAn = inputAn **2 *inputAn + 1\n#print(f'a_n의 &#123;inputAn&#125;번째 항의 값: &#123;valueAn&#125;')\n피보나치 수열inputN = int(input('n 입력: '))\n\nvalueN = 0\nsumN = 0\n\nvaluePreN2 = 0\nvaluePreN1 = 0\n\nn = 1\nwhile n &lt;= inputN:\n\tif n == 1 or n == 2:\n\t\tvalueN = 1\n\t\tvaluePre2 = valueN\n\t\tvaluePre1 = valueN\n\t\tsumN += valueN\n\t\tn += 1\n\telse :\n\t\tvalueN = valuePreN2 + valuePreN1\n\t\tvaluePreN2 = valuePreN1\n\t\tvaluePreN1 = valueN\n\t\tn += 1\nprint(f'&#123;inputN&#125;번째 항의 값: &#123;valueN&#125;')\nprint(f'&#123;inputN&#125;번째 항까지의 합: &#123;sumN&#125;')\n팩토리얼range(20, 10, -2)는 [20, 18, 16, 14, 12]endNum = int(input('Input end number of a factorial: '))\n\nfactorialResult = 1\n\nfor i in range(endNum,0,-1)\n\tfactorialResult *= i\n\nprint(f'&#123;endNum&#125;factorial is : &#123;factorialResult&#125;')\n군 수열(group sequence)다음 수열의 40번째 항의 값을 구해보자\nGroupSequenceNum = int(input('n항 입력: '))\nflag = True\nn = 1; nCnt = 1; searchN = 0; searchP = 0\nwhile Flag:\n\tfor i in range(1,(n+1)):\n\t\tif i == n: \n\t\t\tprint(f'&#123;i&#125;',end='')\n\t\telse:\n\t\t\tprint(f'&#123;i&#125;',end=',')\n\t\tnCnt += 1\n\t\tif nCnt > inputN:\n\t\t\tsearchN = i\n\t\t\tsearchP = n - i + 1\n\t\t\tflag = False\n\t\t\tbreak\n\tprint()\n\tn +=1\nprint(f'&#123;inputN&#125;항: &#123;searchN&#125;/&#123;searchP&#125;.')\n\n군 수열(파이썬)다음 수열을 보고 n 번째 항의 값을 출력하는 프로그램을 만들어보자.\n    1,1,2,1,2,3,1,2,3,4,1,2,3,4,5...\n\nGroupSequenceNum = int(input('n항 입력: '))\nflag = True\nn = 1; nCnt = 1; searchN = 0\nwhile Flag:\n\tfor i in range(1,(n+1)):\n\t\tif i == n: \n\t\t\tprint(f'&#123;i&#125;',end='')\n\t\telse:\n\t\t\tprint(f'&#123;i&#125;',end=',')\n\t\tnCnt += 1\n\t\tif nCnt > inputN:\n\t\t\tsearchN = i\n\t\t\tflag = False\n\t\t\tbreak\n\tprint()\n\tn +=1\nprint(f'&#123;inputN&#125;항: &#123;searchN&#125;.')\n순열순열(파이썬)numN = int(input('numN 입력: '))\nnumR = int(input('numR 입력: '))\nresult = 1\n\nfor n in range(numN, (numN-numR), -1):\n\tprint(f'n :&#123;n&#125;')\n\tresult *= n\n\nprint(f'result: &#123;result&#125;')\n원순열\n\nn = int(input('친구 수 입력: '))\nresult = 1\nfor i in range(1,n):\n\tresult *= i\nprint(f'result : &#123;result&#125;')\n조합조합(파이썬)파이썬을 이용해서 다음 조합들의 값을 구하는 프로그램을 만들어 보자numN = int(input('numN 입력: '))\nnumR = int(input('numR 입력: '))\nresultP = 1\nresultR = 1\nresultC = 1\n\nfor n in range(numN, (numN-numR),-1):\n\tprint(f'n: &#123;n&#125;')\n\tresultP *= n\nprint(f'resultP: &#123;resultP&#125;')\n\nfor n in range(numR,0,-1):\n\tprint(f'n:&#123;n&#125;')\n\tresultR = resultR * n\nprint(f'resultR: &#123;resultR&#125;')\n\nresultC = int(resultP/resultR)\nprint(f'resultC : &#123;resultC&#125;')\n[1:5]의 숫자가 써있는 카드 중 2장을 선택했을 때, 2와 3이 동시에 선택될 확률?\n\nnumN = int(input('numN 입력: '))\nnumR = int(input('numR 입력: '))\nresultP = 1\nresultR = 1\nresultC = 1\n\nfor n in range(numN, (numN-numR),-1):\n\tprint(f'n: &#123;n&#125;')\n\tresultP *= n\nprint(f'resultP: &#123;resultP&#125;')\n\nfor n in range(numR,0,-1):\n\tprint(f'n:&#123;n&#125;')\n\tresultR = resultR * n\nprint(f'resultR: &#123;resultR&#125;')\n\nresultC = int(resultP/resultR)\nprint(f'resultC : &#123;resultC&#125;')\n\nresult = (1/resultC) * 100\nprint(f'&#123;round(result,2)&#125;%')\n확률확률(파이썬)박스에 &#39;꽝&#39;이 적힌 종이가 4장 있고, &#39;선물&#39;이 적힌 종이가 3장이 있을 때, 파이썬을 이용해서 &#39;꽝&#39;2장과 &#39;선물&#39; 1장을 뽑는 확률(%)을 출력하자\n\n\tdef proFun():\n\tnumN = int(input('numN 입력: '))\n\tnumR = int(input('numR 입력: '))\n\t\n\tresultP = 1\n\tresultR = 1\n\tresultC = 1\n\t\n\tfor n in range(numN,(numN-numR),-1):\n\t\tresultP = resultP*n\n\tprint(f'resultP: &#123;resultP&#125;')\n\t\n\tfor n in range(numR,0,-1):\n\t\tresultR = resultR * n\n\tprint(f'resultR: &#123;resultR&#125;')\n\t\n\tresultC = int(resultP / resultR)\n\tprint(f'resultC: &#123;resultC&#125;')\n\t\n\treturn resultC\n\t\nsample = proFun()\nprint(f'sample: &#123;sample&#125;')\n\nevent1 = proFun()\nprint(f'sample: &#123;event1&#125;')\n\nevent2 = proFun()\nprint(f'sample: &#123;event2&#125;')\n\nprobability = (event1*event2)/sample\nprint(f'probability: &#123;round(probability*100,2)&#125;%')\n","slug":"zeroBase-DS-3rd-03","date":"2023-03-15T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"1cd0a7cc4fe853645190a97ba47fde31","title":"zeroBase_DS 3주차 화요일 스터디노트","content":"3rd WeekTuesday[연습문제] 텍스트 파일(02)텍스트 파일에 수입,지출을 기록하는 가계부 만들기import time\n\ndef formatedNum(n):\n\treturn format(n,',')\n\ndef getTime():\n\tlt = time.localtime()\n\tst = time.strftime('%Y-%m-%d %H:%M:%S')\n\treturn st\n\nwhile True:\n\tselectNumber = int(input('1.입금\\t2.출금\\t3.종료'))\n\tif selectNumber == 1:\n\t\tmoney = int(input('입금액 입력: '))\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','r') as f:\n\t\t\tm = f.read()\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','w') as f:\n\t\t\tf.write(str(int(m)+money))\n\t\tmemo = input('입금 내역 입력: ')\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt','a') as f:\n\t\t\tf.write('==========================================')\n\t\t\tf.write(f'&#123;getTime() \\n&#125;')\n\t\t\tf.write(f'[입금]&#123;memo&#125;: &#123;str(formatedNum(money))&#125;원\\n')\n\t\t\tf.write(f'[잔액]: &#123;str(int(n)+formatedNum(money))&#125;원\\n')\n\t\tprint('입금 완료')\n\t\tprint(f'기존 잔액: &#123;formatedNum(m)&#125;')\n\t\tprint(f'입금 후 잔액: &#123;formatedNum(int(m)+money)&#125;')\n\t\t\n\telif selectNumber == 2:\n\t\tmoney = int(input('출금액 입력: '))\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','r') as f:\n\t\t\tm = f.read()\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','w') as f:\n\t\t\tf.write(str(int(m)-money))\n\t\tmemo = input('출금 내역 입력: ')\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt','a') as f:\n\t\t\tf.write('===========================================')\n\t\t\tf.write(f'&#123;getTime() \\n&#125;')\n\t\t\tf.write(f'[출금]&#123;memo&#125;: &#123;str(formatedNum(money))&#125;원\\n')\n\t\t\tf.write(f'[잔액]: &#123;str(formatedNum(int(n)-money))&#125;원\\n')\n\t\tprint('출금 완료')\n\t\tprint(f'기존 잔액: &#123;formatedNum(m)&#125;')\n\t\tprint(f'출금 후 잔액: &#123;formatedNum(int(m)-money)&#125;')\n\telif selectNumber == 3:\n\t\tprint('Bye')\n\t\tbreak\n\telse:\n\t\tprint('Please re-enter.')\n\n\n[연습문제] 텍스트 파일(03)사용자가 입력한 숫자의 약수를 텍스트 파일에 기록해보자.ex.py\n\ninputNumber = int(input('0보다 큰 정수(자연수)를 입력해주세요: '))\n\ndivisor = []\nfor number in range(1,(inputNumber+1)):\n\tif inputNumber % number == 0:\n\t\tdivisor.append(number)\n\nif len(divisor) > 0:\n\ttry: \n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt','a') as f:\n\t\tf.write(f'&#123;inputNumber&#125;의 약수: ')\n\t\tf.write(f'&#123;divisor&#125;\\n')\n\texcept Exception as e:\n\t\tprint(e)\n\telse: \n\t\tprint('divisor was re-written.')\n\ninputNumber = int(input('0보다 큰 정수 입력: '))\nprime = []\nfor number in range(2,(inputNumber+1)):\n\tflag = True\n\tfor n in range(2,number):\n\t\tif number % n == 0:\n\t\t\tflag = False\n\t\t\tbreak\n\tif flag:\n\t\tprime.append(number)\nif len(prime) > 0:\n\ttry: \n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt','a') as f:\n\t\t\tf.write(f'(inputNumber)까지의 소수: ')\n\t\t\tf.write(f'&#123;prime&#125;\\n')\n\texcept Exception as e:\n\t\tprint(e)\n\telse: \n\t\tprint('Prime numbers have been written.')\ndivisor.txt\n\n```\n###### 사용자가 입력한 숫자까지의 소수를 텍스트 파일에 기록해보자.\n#### [연습문제] 텍스트 파일(04)\n###### 두 개의 수를 입력하면 공약수를 테스트 파일에 작성해보자\n```python\nnum1 = int(input('1보다 큰 정수 입력: '))\nnum2 = int(input('1보다 큰 정수 입력: '))\n\ncommomFactors = []\nmaxCommonNum = 0\nfor i in range(1, (num1+1)):\n\tif num1 % i == 0 and num2 % i == 0:\n\tcommon.append(i)\n\n# 최대공약수\nfor i in range(1,(num1+1)):\n\tif num1 % i == 0 and num2 % i == 0:\n\tmaxComNum = i\n\nif len(common) > 0:\n\ttry:\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt','a') as f :\n\t\tf.write(f'&#123;num1&#125;과 &#123;num2&#125;의 공약수: &#123;common&#125;\\n')\n\t\tf.write(f'&#123;num1&#125;과 &#123;num2&#125;의 최대공약수 : &#123;maxComNum&#125;\\n')\n\texcept Exception as e : \n\t\tprint(e)\n\telse: \n\t\tprint('Common factors have been written.')\n\n[연습문제] 텍스트 파일(05)from datetime import timedelta(날짜연산)섬마을에 과일,생선,야채를 판매하는 배가 다음 주기로 입항한다고 할 때, 모든 배가 입항하는 날짜를 텍스트 파일에 기록해보자. (첫 입항일은 2021년 1월 1일 오전 10시로 하되; 과일 선박 입항주기: 3일&#x2F; 생선선박 입항주기: 4일&#x2F; 야채 선박 입항주기: 5일)from datatime import datetime\nfrom datetime import timedelta\n\nship1 = 3\nship2 = 4\nship3 = 5\nmaxDay = 0\n\nfor i in range(1,(ship1+1)):\n\tif ship1 % i == 0 and ship2 % i == 0:\n\tmaxDay = i\nminDay = (ship1*ship2) // maxDay\n\nnewDay = minDay\nfor i in range(1,(newDay+1)):\n\tif newDay % i == 0 and ship3 % i == 0:\n\t\tnewDay = i\n\nminDay = (newDay * ship3) // maxDay\n\nprint(f'minDay : &#123;minDay&#125;')\nprint(f'maxDay : &#123;maxDay&#125;')\n\nn = 1\nbaseTime = datetime(2023,1,1,10,0,0)\nwith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/shiparrivals.txt','a') as f:\n\tf.write(f'2023년 모든 선박 동시입항일\\n')\n\tf.write(f'&#123;baseTime&#125;\\n')\n\nnextTime = baseTime + timedelta(days=minDay)\nwhile True:\n\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/shiparrivals.txt') as f:\n\t\tf.write(f'&#123;nextTime&#125;\\n')\n\tnextTime = baseTime + timedelta(day=minDay)\n\tif nextTime.year > 2023:\n\t\tbreak\n약수와 소수[1:30]의 구간에서 5로 나눈 몫과 나머지가 모두 소수인 숫자들을 찾아보자isPrime = False\nmidNum = 0\ntargetNums = []\n\ndef whetherPrime(num):\n\tfor i in range(2,num):\n\t\tif num % i == 0:\n\t\t\tisPrime = False\n\t\telse: \n\t\t\tisPrime = True\n\nfor i in range(1,31):\n\tif i % 5 == 0 and i // 5 == 0:\n\t\tmidNum = i\n\t\twhetherPrime(midNum)\n\t\tif isPrime == True:\n\t\t\ttargetNums.append(i)\n\t\t\tprint(f'&#123;i&#125; is a target number')\n\t\telse: \n\t\t\tcontinue\nisPrime &#x3D; False\nmidNum &#x3D; 0\ntargetNums &#x3D; []\n\ndef whetherPrime(num):\n\tfor i in range(2,num):\n\t\tif num % i &#x3D;&#x3D; 0:\n\t\t\tisPrime &#x3D; False\n\t\telse: \n\t\t\tisPrime &#x3D; True\n\nfor i in range(1,31):\n\tif i % 5 &#x3D;&#x3D; 0 and i &#x2F;&#x2F; 5 &#x3D;&#x3D; 0:\n\t\tmidNum &#x3D; i\n\t\twhetherPrime(midNum)\n\t\tif isPrime &#x3D;&#x3D; True:\n\t\t\ttargetNums.append(i)\n\t\t\tprint(f&#39;&#123;i&#125; is a target number&#39;)\n\t\telse: \n\t\t\tcontinue\n약수와 소수(파이썬)inputNum = int(input('0보다 큰 정수 입력: '))\nfor num in range(1,(unputNum+1)):\n\tif inputNum % num == 0:\n\t\tprint('&#123;&#125;의 약수: &#123;&#125;.'format(inputNum,num))\n사용자가 입력한 숫자까지의 소수를 출력해보자for num in range(2,(inputNum+1)):\n\tflag = True\n\tfor n in range(2,num):\n\t\tif num % n == 0:\n\t\t\tflag = False\n\t\t\tbreak\n\tif flag == True:\n\t\tprint(f'&#123;num&#125;: 소수!')\n\telse :\n\t\tprint(f'&#123;num&#125;: 합성수!')\n소인수와 소인수분해소인수: prime factor;质因子소인수와 소인수분해(파이썬)factorization.py\n\nimport math  \n\ninputNum = int(input('Input a natural number: '))\n  \n  \ndef get_factor_list(n):  \n  \n    \"\"\"  \n    Use trial division to identify the factors of n.  \n    1 is always a factor of any integer so is added at the start.  \n    We only need to check up to n/2, and then add n after the loop.  \n    \"\"\"  \n    factors = [1]  \n  \n    for t in range(2, (math.ceil((n / 2) + 1))):  \n        if n % t == 0:  \n            factors.append(t)  \n  \n    factors.append(n)  \n  \n    return factors  \n  \n  \ndef factors(n):  \n  \n    \"\"\"  \n    Generator function leveraging the get_factor_list function.  \n    \"\"\"  \n    return iter(get_factor_list(n))\nmain.py\n\nimport factorization  \n  \ndef main():  \n  \n    \"\"\"  \n    Test the get_factor_list function and factors generator on a few numbers.  \n    \"\"\"  \n    print(\"-----------------\\n|\")  \n    print(\"| codedrome.com |\")  \n    print(\"| Factorization |\")  \n    print(\"-----------------\\n\")  \n  \n    numbers_to_factorize = [15,19,25,50,77,99]  \n  \n    print(\"factorization.get_factor_list\\n-----------------------------\")  \n  \n    for n in numbers_to_factorize:  \n  \n        factors = factorization.get_factor_list(n)  \n  \n        print(\"Factors of &#123;&#125;: &#123;&#125;\".format(n, factors))  \n  \n    print(\"\\nfactorization.factors (generator)\\n---------------------------------\")  \n  \n    for n in numbers_to_factorize:  \n  \n        print(\"Factors of &#123;&#125;: \".format(n), end=\"\")  \n  \n        for f in factorization.factors(n):  \n            print(\"&#123;&#125; \".format(f), end=\"\")  \n  \n        print(\"\")  \n  \n  \nmain()\n\n72에 x를 곱하면 y의 제곱이 된다고 할 때, x에 해당하는 가장 작은 정수를 구하자.inputNum = int(input('Input a natural number: '))\n\nn = 2\nsearchedNums = []\n\nwhile n &lt;= inputNum:\n\tif inputNum % n ==0:\n\t\tprint(f'prime factor: &#123;n&#125;')\n\t\tif searchedNums.count(n) == 0:\n\t\t\tsearchedNums.append(n)\n\t\telif searchedNums.count(n) == 1:\n\t\tsearchedNums.remove(n)\n\t\tinputNum /= n\n\telse : \n\t\tn += 1\n최대공약수for문과 유클리드 호제법을 이용해서 최대공약수 구하기:두 개의 수를 입력하면 공약수와 최대공약수를 출력하는 코드를 작성하자num1 = int(input('Input an integer larger than 1: '))\nnum2 = int(input('Input an integer larger than 1: '))\n\nmaxNum = 0\n\nfor i in range(1,(num1+1)):\n\tif num1 % i == 0 and num2 % i == 0:\n\t\tprint(f'common factor: &#123;i&#125;')\n\t\tmaxNum = i\nprint('Max common factor : &#123;maxNum&#125;')\n유클리드 호제법에 의해 x,y의 최대공약수는 y,r(&#x3D;x%y)의 최대공약수와 같으므로, 다음 회차엔 y를 x에 대입하고 y에 r을 대입하는 식으로 나머지(r)가 0이 될때까지 반복한다.\nnum1 = int(input('Input an integer larger than 1: '))\nnum2 = int(input('Input an integer larger than 1: '))\n\ntemp1 = num1; temp2 = num2\n\nwhile temp2 > 0:\n\ttemp = temp2\n\ttemp2 = temp1 % temp2\n\ttemp1 = temp\n\nprint(f'&#123;num1&#125;,&#123;num2&#125;의 최대공약수: &#123;temp1&#125;')\n\nfor n in range(1,(temp1+1)):\n\tif temp1 % n == 0 :\n\t\tprint('&#123;&#125;,&#123;&#125;의 공약수: &#123;&#125;'.format(num1,num2,n))\n최대공약수(파이썬)최소공배수최소공배수(파이썬)for문과 유클리드 호제법을 이용해서 최소공배수를 구하자!두 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자.num1 = int(input('Input an Integer larger than 1: '))\nnum2 = int(input('Input an Integer larger than 1: '))\n\nmaxNum = 0\n\nfor i in range(1,(num1+1)):\n\tif num1 % i == 0 and num2 % i == 0:\n\t\tprint(f'common factor: &#123;i&#125;')\n\t\tmaxNum = i\n\nprint('Maxinum common factor: &#123;maxNum&#125;')\n\nminNum = (num1*num2) // maxNum\nprint(f'Least common multiple : &#123;minNum&#125;')\n세 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자num1 = int(input('Input an integer larger than 1: '))\nnum2 = int(input('Input an integer larger than 1: '))\nnum3 = int(input('Input an integer larger than 1: '))\n\nmaxNum = 0\n\nfor i in range(1,(num+1)):\n\tif num1 % i == 0 and num2 % i == 0:\n\t\tmaxNum = i\n\nprint(f'Maximum common factor: &#123;maxNum&#125;')\n\nleastNum = (num1+num2) // maxNum\nprint(f'&#123;num1&#125;,&#123;num2&#125;의 최소공배수: &#123;leastNum&#125;')\n\nnewNum = leastNum\n\nfor i in range(1,(newNum+1)):\n\tif newNum % i == 0 and num3 % i == 0:\n\t\tmaxNum = i\n\nprint(f'Maximum common factor: &#123;maxNum&#125;')\n\nleastNum = (newNum*num3)// maxNum\n\n\tprint(f'&#123;num1&#125;,&#123;num2&#125;,&#123;num3&#125;의 최소공배수: &#123;leastNum&#125;')\n진법10진수 -&gt; x진수\n\n계산기 기능 활용\n\nx진수 -&gt; 10진수 변환\n2진수 -&gt; 8진수 변환\n2진수 -&gt; 16진수 변환\n진법(파이썬)type(bin()); type(oct()); type(hex()).format(decimalNum,’#b’); .format(decimalNum,’#o’); .format(decimalNum,’#x’)dNum = 30\n\nprint(f'From decimal number &#123;dNum&#125; to binary number: &#123;type(bin(dNum))&#125;')\nprint(f'From decimal number &#123;dNum&#125; to octal number: &#123;type(bin(dNum))&#125;')\nprint(f'From decimal number &#123;dNum&#125; to hexadecimal number: &#123;type(bin(dNum))&#125;')\n\ndecimalNum = 40\nprint('binary number: &#123;&#125;'.format(decimalNum,'#b'))\nprint('octal number: &#123;&#125;'.format(decimalNum,'#o'))\nprint('hexadecimal number: &#123;&#125;'.format(decimalNum,'#x'))\n\nx진수 -&gt; 10진수\n\nprint('binary (0b11110) -> 10진수(&#123;&#125;)'.format(int('0b11110',2)))\nprint('octal (0o36) -> 10진수(&#123;&#125;)'.format(int('0o36',8)))\nprint('binary (0x1e) -> 10진수(&#123;&#125;)'.format(int('0x1e',16)))\n수열등차 수열등차 수열(파이썬) (01)inputN1 = int(input('n1 입력: '))\ninputN1 = int(input('공차 입력: '))\ninputN1 = int(input('항수 입력: '))\n\nvalueN = 0\nn = 1\nwhile n &lt;= inputN : \n\tif n == 1:\n\t\tvalueN += inputD\n\t\tprint(f'&#123;n&#125;번째항의 값: &#123;valueN&#125;')\n\t\tn += 1\n\t\tcontinue\n\tvalueN += input()\n\tprint('&#123;&#125;번째 항의 값: &#123;&#125;'.format(n,valueN))\n\t\tn += 1\n\nprint('&#123;&#125;번째 항의 값: &#123;&#125;'.format(inputN,valueN))\ninputN1 = int(input('n1 입력: '))\ninputN1 = int(input('공차 입력: '))\ninputN1 = int(input('항수 입력: '))\n\nvalueN = 0\n\nvalueN = inputN1 + (inputN -1)*inputD\nprint('&#123;&#125;번째 항의 값: &#123;&#125;'.format(inputN, valueN))\n\n등차 수열(파이썬) (02)inputN1 = int(input('초항 입력: '))\ninputD = int(input('공차 입력: '))\ninputN = int(input('n번째 항 입력: '))\n\nvalueN = 0\nsumN = 0\nn = 1\nwhile n &lt;= inputN:\n\tif n ==1 :\n\t\tvalueN = inputN1\n\t\tprint(f'&#123;n&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tn += 1\n\t\tcontinue\n\tvalueN += inputD\n\tsumN += valueN\n\tprint(f'&#123;n&#125;번째 항의 값: &#123;sumN&#125;')\n\tn += 1\nprint(f'&#123;inputN&#125;번째 항의 값: &#123;sumN&#125;')\ninputN1 &#x3D; int(input(&#39;초항 입력: &#39;))\ninputD &#x3D; int(input(&#39;공차 입력: &#39;))\ninputN &#x3D; int(input(&#39;항 개수 입력: &#39;))\n\nvalueN &#x3D; inputN1 + (inputN - 1)*inputD\nsumN &#x3D; inputN *(inputN1 + valueN) &#x2F; 2\nprint(f&#39;&#123;inputN&#125;번째 항까지의 합: &#123;int(sumN)&#125;&#39;)\n","slug":"zeroBase-DS-3rd-02","date":"2023-03-14T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"9621e8ae63ed17a106a58fdedd5a4127","title":"Week 1.채용공고 살펴보기","content":"Week.1_채용공고 살펴보기1) 데이터 취업 스쿨에 참여하는 여러분들의 다짐과 입과 계기를 작성해 주세요평소 데이터 분석에 관심 많은 편이었어서 올해 초에 준비하던 시험에 합격한 후 AWS와 AD(s)P를 준비를 계획중이었습니다. 그 전에 넓은 영역을 체계적으로 리마인드하고, 학교 수업에 ‘비정형 회계빅데이터 분석’수업이나 ‘경영통계’, ‘통계학원론’ 등과 같은 수업을 듣고 있는데, 교내 유명 학회에 들어가려면 스펙을 쌓아야 하는 것도 있고, 관련 내용을 미리 더 깊게 접해보고자 입과하게 되었습니다. 잘부탁드립니다!\n2) 여러분들이 관심있는 산업군 세 가지와 희망하는 기업을 작성해 주세요산업군:\n클라우드 컴퓨팅 산업(데이터 인프라 서비스업)\n데이터 구축 및 컨설팅 서비스업\n데이터 처리 및 관리 솔루션 개발⋅공급업출처: 한국데이터산업진흥원\n\n희망기업:\nAWS\n삼성에스디에스(주)\n삼성SDI(주)\n삼성전자 dx부문 빅데이터센터 인턴전환형\t\n기아자동차 데이터분석가 선배 합격후기 현실적으로 시도 가능한 사항: 수상 3회 시도, 영어자격증, ADsP,SQLD,빅데이터분석기사, 교내 인공지능 학회, 부트캠프 3개, 개인 머신러닝 프로젝트 3개\n선배 SKhynix DS 직무 합격 후기 현실적으로 시도할 수 있는 사항: ADSP,경진대회 수상 시도, 학석 연계과정 수업 3개 이수,동대 연구실 학부 인턴, 학점 \n선배 현대자동차 인턴정규직전환형 합격 후기 현실적으로 시도할 수 있는 사항: 학부생연구프로그램,통계분석학회,데이터분석공모전 3회 등\n\n3) 원티드 &#x2F; 잡코리아 에 접속하여 데이터 직군 채용공고를 스크랩 해주세요→ 스크랩을 한 공고에서 요구하는 역량은 무엇인지? 작성1. AWS Solutions  Architect, Elastic:자격요건\n새로운 것에 도전하는 것을 좋아하고 능동적으로 일을 대하는 분이어야 합니다.  \n끊임없이 학습하고 동료와 함께 성장하며, 개인의 성장으로 회사와 성장을 이끌고 싶은 분이어야 합니다.  \t\t- 스스로 가치를 만들고 그 가치를 널리 전파하는 것을 좋아하는 분이어야 합니다.  \n상대의 입장에서 생각하고 공감하며, 배려할 수 있는 분이어야 합니다.  \n문제 해결 중심의 사고를 할 수 있는 분이어야 합니다.  \n데이터 시각화의 중요성에 대해 공감하고 필요성에 대해 논리적으로 설명 가능해야 합니다.  \nElasticsearch 구축 및 운영 경험이 있어야 합니다.  \nSQL 작성능력이 필요합니다.우대사항- 개발경력 3년 이상이면 좋습니다.  \nBash shell 작성 능력이 중급 이상이면 좋습니다.  \n빅데이터 에코 시스템 구축, 운영 경험  (Hadoop, Hive, Kafka)이 있으면 좋습니다. - BI 솔루션 관련 경험이 있으면 좋습니다.  \nAWS, Azure, GCP 등 Public Cloud 경험이 있으면 좋습니다.\n\n→ 주요업무를 보았을때 실제 하는 업무가 대략적으로 무엇인지? 작성1. AWS Solutions  Architect, Elastic:Solutions Architect(이하, SA)는 문제를 발견하고 문제를 분석하고, 더 나은 해결 방법을 찾는 해결사 입니다. 문제를 발견하는 과정에서 이해당사자와 밀접한 커뮤니케이션으로 목표를 향해 함께 협업합니다. SA는 도메인 지식, 클라우드 기술을 다양하게 조합하여 성능과 비용을 모두 만족하는 효율적인 해법을 찾습니다. SA는 클라우드를 기반으로 더 나은 가치를 만들 수 있는 방법을 찾기 위해서 끊임없이 학습하고 성장합니다. SA는 지식과 경험을 문서화하고 내부의 동료와 외부의 고객을 교육하는 역할을 합니다.    - SA(Elastic)는 정형&#x2F;비정형 데이터 파이프라인(배치&#x2F;실시간)의 컨설팅, 아키텍처 설계 및 구축합니다.    - SA(Elastic)는 Elasticsearch의 기능을 활용한 보안&#x2F;모니터링 시스템을 구축합니다.    - SA(Elastic)는 Elasticsearch 클러스터를 운영합니다.    - SA(Elastic)는 데이터 시각화와 대시보드를 작성합니다.    - SA(Elastic)는 프로젝트의 성격과 고객의 요청, 업무적인 판단에 따라 상주, 부분상주 근무를 진행합니다.\n4) 개강 후 1주차에 수강하신 학습 내용을 정리하여 어려운 점이 무엇이였는지 강의를 듣고 이해가 잘 된 부분은 무엇인지 작성해 주세요아직은 초입이라 괜찮았습니다. 다만 순열 permutation 排列 한국어를 잠깐 까먹어서 문제를 틀린게 기억이 납니다. \n5) 스터디룸 내에 To-Do-List 체크를 반드시 해주세요!네에\n\n","slug":"Week.1_채용공고살펴보기","date":"2023-03-13T14:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"c0245df8bec4a527a2a0d794d73e7040","title":"zeroBase_DS 3주차 월요일 스터디노트","content":"3rd WeekMonday[연습문제] 모듈(04)logPrint&#x3D;True; 작아지는 range()순열 계산 모듈을 만들고 다음 순열 결과를 출력해 보자 permutation.py\n\ndef getPermutation(n,r,logPrint=True):\n\tresult = 1\n\tfor n in range(n,(n-r),-1):\n\t\tif logPrint: print('n:&#123;&#125;'.format(n))\n\t\tresult *= n\n\treturn result\n\n# 사실 기성모듈이 있음...\nfrom itertools import permutations\n\ndef getPermutations(ns,r):\n\tpList = list(permutations(ns, r))\n\tprint(f'&#123;len(ns)&#125;P&#123;r&#125;개수: &#123;len(pList)&#125;')\n\tfor n in permutations(ns,r):\n\t\tprint(n, end='')\n\n\n\n\n\n\n\n\n\nex.py\nimport permupation as pt\nnumN = int(input('input n of nPr: '))\nnumR = int(input('input r of nPr: '))\n\nprint(f'&#123;numN&#125;P&#123;numR&#125;: &#123;pt.getPermutation(numN,numR,logPrint=False)&#125;')\n\nlistVar = [1,2,3,4,5,6,7,8]\nrVar = 3\npt.getPermutations(listVar,rVar)\n# (1,2,3)(1,2,4)(1,2,5)(1,2,6)(1,2,7)... 336가지 다 나열해줌\n[연습문제] 모듈(05)조합 계산 모듈을 만들고 다음 조합 계산 결과를 출력해보자\n\n\n\n\n\n\n\n\ncombination.py\ndef getCombination(n,r):\n\tresultP = 1\n\tresultR = 1\n\tresultC = 1\n\t\n\tfor n in range(n,(n-r),-1):\n\t\tresultP *= n\n\tfor n in range(r,0,-1):\n\t\tresultR *= n\n\t\n\tresultC = int(resultP / resultR)\n\t\n\treturn resultC\n# 역시 또 기성모듈이 있습니다\nfrom itertools import combinations\n\ndef getCombinations(ns,r):\n\tcList = list(combinations(ns,r))\n\tprint(f'&#123;len(ns)&#125;C&#123;r&#125; = &#123;len(cList)&#125;')\n\n\n\n\n\n\n\n\n\nex.py\nimport combination as ct\n\nnumN = int(input('Input n of nCr: '))\nnumR = int(input('Input r of nCr: '))\ncResult = ct.getCombination(numN,numR)\nprint(f'&#123;numN&#125;C&#123;numR&#125; = &#123;cResult&#125;')\n\nlistVar = [1,2,3,4,5,6,7,8]\nrVar = 3\nct.getCombinations(listVar,rVar)\n[연습문제] 모듈(06)수입과 공과금을 입력하면 공과금 총액과 수입 대비 공과금 비율을 계산하는 모듈을 만들어보자.\n\n\n구분\n수도요금\n전기요금\n가스요금\n\n\n\n요금\n15,000\n17,500\n125,000\n\n\nutilitybillscalculator.py\n\nincome = 0\nwaterPrice = 0; electricPrice = 0; gasPrice = 0\ndef setIncome(ic):\n\tglobal income\n\tincome = ic\ndef getIncome():\n\treturn income\n\ndef setWaterPrice(wp):\n\tglobal waterPrice\n\twaterPrice = wp\ndef getWaterPrice():\n\treturn waterPrice\n\ndef setElectricPrice(ep):\n\tglobal electricPrice\n\telectricPrice = ep\ndef getElectricPrice():\n\treturn electricPrice\n\ndef setGasPrice(gp):\n\tglobal gasPrice\n\tgasPrice = gp\ndef getGasPrice():\n\treturn gasPrice\n\ndef getUtilitybill():\n\tresult = waterPrice+electricPrice+gasPrice\n\treturn result\ndef getUtilityBillRate():\n\tresult = getUtilitybill()/getincome()*100\n\treturn result\n\ndef formatedNum(n):\n\treturn format(n,',')\nex.py\n\nimport utilityBill as ub\n\ninputIncome = int(input('수입 입력: '))\nub.setIncome(inputIncome)\n\ninputWaterPrice = int(input('수도요금 입력: '))\nub.setWaterPrice(inputWaterPrice)\n\ninputElectricPrice = int(input('전기요금 입력: '))\nub.setElectricPrice(inputElectricPrice)\n\ninputGasPrice = int(input('가스요금 입력: '))\nub.setGasPrice(inputGasPrice)\n\nprint(f'공과금: &#123;ub.formatedNum(ub.getUtilitybill())&#125;원')\nprint(f'수입 대비 공과금 비율: &#123;getUtilityBillRate()&#125;)\n[연습문제] 모듈(06)수입과 공과금을 입력하면 공과금 총액과 수입 대비 공과금 비율을 계산하는 모듈을 만들어보자.\n\n\n구분\n수도요금\n전기요금\n가스요금\n\n\n\n요금\n15,000\n17,500\n125,000\n\n\nutilitybillscalculator.py\n\nincome = 0\nwaterPrice = 0; electricPrice = 0; gasPrice = 0\ndef setIncome(ic):\n\tglobal income\n\tincome = ic\ndef getIncome():\n\treturn income\n\ndef setWaterPrice(wp):\n\tglobal waterPrice\n\twaterPrice = wp\ndef getWaterPrice():\n\treturn waterPrice\n\ndef setElectricPrice(ep):\n\tglobal electricPrice\n\telectricPrice = ep\ndef getElectricPrice():\n\treturn electricPrice\n\ndef setGasPrice(gp):\n\tglobal gasPrice\n\tgasPrice = gp\ndef getGasPrice():\n\treturn gasPrice\n\ndef getUtilitybill():\n\tresult = waterPrice+electricPrice+gasPrice\n\treturn result\ndef getUtilityBillRate():\n\tresult = getUtilitybill()/getincome()*100\n\treturn result\n\ndef formatedNum(n):\n\treturn format(n,',')\nex.py\n\nimport utilityBill as ub\n\ninputIncome = int(input('수입 입력: '))\nub.setIncome(inputIncome)\n\ninputWaterPrice = int(input('수도요금 입력: '))\nub.setWaterPrice(inputWaterPrice)\n\ninputElectricPrice = int(input('전기요금 입력: '))\nub.setElectricPrice(inputElectricPrice)\n\ninputGasPrice = int(input('가스요금 입력: '))\nub.setGasPrice(inputGasPrice)\n\nprint(f'공과금: &#123;ub.formatedNum(ub.getUtilitybill())&#125;원')\nprint(f'수입 대비 공과금 비율: &#123;getUtilityBillRate()&#125;)\n[연습문제] 모듈(07)다음과 같이 패키지와 모듈을 만들고 연산 결과를 출력해 보자arithmetic\n└── basic_operator.py  \n    └── developer_operator.py\nshape\n└── circle_area.py\n    └── triangle_square_area.py\nbasic_operator.py\n\ndef add(n1,n2):\n\treturn n1+n2\ndef sub(n1,n2):\n\treturn n1-n2\ndef mul(n1,n2):\n\treturn n1*n2\ndef div(n1,n2):\n\treturn n1/n2\ndeveloper_operator.py\n\ndef mod(n1,n2):\n\treturn n1%n2\ndef flr(n1,n2):\n\treturn n1//n2\ndef exp(n1,n2):\n\treturn n1**n2\ncircle_area.py\n\nimport math\n\ndef getCircleArea(r):\n\treturn math.pi*r*r\ntriangle_square_area.py\n\ndef getSqureArea(w,h):\n\treturn w*h\ndef getTriangleArea(w,h):\n\treturn w*h*0.5\nex.py\n\nfrom arithmetic import basic_operator as bo\nfrom arithmetic import developer_operator as do\n\nfrom shape import circle_area as ca\nfrom shape import triangle_square_area as tsa\n\nnum1 = int(input('Input 1st number: '))\nnum2 = int(input('Input 2nd number: '))\n\nprint(f'&#123;num1&#125;+&#123;num2&#125;=&#123;bo.add(num1,num2)&#125;')\nprint(f'&#123;num1&#125;-&#123;num2&#125;=&#123;bo.sub(num1,num2)&#125;')\nprint(f'&#123;num1&#125;*&#123;num2&#125;=&#123;bo.mul(num1,num2)&#125;')\nprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;bo.div(num1,num2)&#125;')\n\nprint(f'&#123;num1&#125;%&#123;num2&#125;=&#123;do.mod(num1,num2)&#125;')\nprint(f'&#123;num1&#125;//&#123;num2&#125;=&#123;do.flr(num1,num2)&#125;')\nprint(f'&#123;num1&#125;**&#123;num2&#125;=&#123;do.exp(num1,num2)&#125;')\n\nprint(f'The circle area made of &#123;num1&#125; =&#123;ca.getCircleArea(num1)&#125;')\nprint(f'The square area made of &#123;num1&#125; and &#123;num2&#125;=&#123;tsa.getSqureArea(num1,num2)&#125;')\nprint(f'The triange area made of &#123;num1&#125; and &#123;num2&#125;, the later will be its height. =&#123;tsa.getTriangleArea(num1,num2)&#125;')\n[연습문제] 클래스(01)회원가입 클래스와 회원정보를 관리하는 클래스를 만들고 회원가입 로그인 기능을 구현해 보자member.py\n\nclass Member:\n\tdef __init__(self,i,p):\n\t\tself.id = i\n\t\tself.pw = p\n\nclass MemberRepository:\n\tdef __init__(self):\n\t\tself.members = &#123;&#125;\n\tdef addMenber(self,m):\n\t\tself.members[m.id] = .pw\n\tdef loginMember(self,i,p):\n\t\tisMember = i in self.members\n\t\tif isMember and self.member[1]==p:\n\t\t\tprint(f'&#123;i&#125;: successfully logged in.')\n\t\telse:\n\t\t\tprint('&#123;i&#125;: login unsuccessful.')\n\tdef removeMember(self,i,p):\n\t\tdel self.members[i]\n\tdef printMembers(self):\n\t\tfor mk in self.members.keys():\n\t\t\tprint(f'ID: &#123;mk&#125;')\n\t\t\tprint(f'PW: &#123;self.members[mk]&#125;')\nex.py\n\nimport member as mb\n\nmbrs = mb.MemberRepository()\n\nfor i in range(3):\n\tmID = input('Input user ID: ')\n\tmPW = input('Input user PW: ')\n\tmem = mb.Member(mID,mPW)\n\tmbrs.addMember(mem)\n\nmbrs.printMembers()\nmbrs.loginMember('abc@gmail.com','1234')\nmbrs.loginMember('def@gmail.com','5678')\nmbrs.loginMember('ghi@gmail.com','9810')\nmbrs.printMembers()\n[연습문제] 클래스(02)TV클래스를 다음과 같은 상속 구조로 만들고 객체를 생성해 보자NormalTv\n\t속성: inch,color,resolution,smartTv,alTv\n\t기능: turnOn(),turnOff(),printTvInfo()\n└── Tv4K\n\t기능: setSmartTv\n└── Tv8K\n\t기능: setSmartTv,serAiTv\nclass NormalTv:\n\tdef __init__(self,i=32,c='black',r='full-HD'):\n\t\tself.inch = i\n\t\tself.color = c\n\t\tself.resolution = r\n\t\tself.smartTv = 'off'\n\t\tself.aiTv = 'off'\n\tdef turnOn(self):\n\t\tprint('TV power on!!')\n\tdef turnOff(self):\n\t\tprint('TV power off!!')\n\tdef printTvInfo(self):\n\t\tprint(f'inch: &#123;self.inch&#125;inch')\n\t\tprint(f'color: &#123;self.color&#125;')\n\t\tprint(f'resolution: &#123;self.resolution&#125;')\n\t\tprint(f'smartTV: &#123;self.smartTv&#125;')\n\t\tprint(f'aiTv: &#123;self.aiTv&#125;')\n\nclass Tv4k(NormalTv):\n\tdef __init__(self,i,c,r='4k')\n\t\tsuper().__init__(i,c,r)\n\tdef setSmartTv(self, s):\n\t\tself.smartTv = s\n\nclass Tv8k(NormalTv):\n\tdef __init__(self,i,c,r='8k')\n\t\tsuper().__init__(i,c,r)\n\tdef setSmartTv(self, s):\n\t\tself.smartTv = s\n\tdef setAiTv(self, s):\n\t\tself.smartTv = s\nex.py\n\nimport smartTv as st\n\nmy4KTv = st.Tv4k('65','silver','4k')\nmy4kTv.setSmartTv('on')\nmy4kTv.turnOn()\nmy4kTv.printInfo()\nmy4kTv.turnOff()\n\nmy8KTv = st.Tv8k('75','black','8k')\nmy8kTv.setSmartTv('on')\nmy8kTv.setAiTv('on')\nmy8kTv.turnOn()\nmy8kTv.printInfo()\nmy8kTv.turnOff()\n[연습문제] 클래스(03)다음 명세서를 참고해서 도서 관리 프로그램을 만들어보자.- 도서 정보(도서명,가격,isbn)\n    - Book\n        - 속성: name, price, isbn\n- 도서저장소(도시 컨테이너, 도서 등록, 도서 삭제, 전체 도서 정보 출력, 도서 정보 출력)\n    - BookRepository\n        - 속성: bDic\n        - 기능: registBook(),removeBook(),printBooksInfo(),printBookInfo()\n\nbook.py\n\nclass Book:\n\n\tdef __init__(self,name,price,isbn):\n\t\tself.bName = name\n\t\tself.bPrice = price\n\t\tself.bIsbn = isbn\n\nclass BookRepository:\n\tdef __init__(self):\n\t\tself.bDic = &#123;&#125;\n\t\n\tdef registBook(self,b):\n\t\tself.bDic[b.bIsbn] = b\n\t\n\tdef removebook(self, isbn):\n\t\tdel self.bDic[bIsbn]\n\t\n\tdef printBooksInfo(self):\n\t\tfor isbn in self.bDic.keys():\n\t\t\tb = self.bDic[isbn]\n\t\t\tprint(f'&#123;b.bName&#125;,&#123;b.bPrice&#125;,&#123;b,bIsbn&#125;')\n\t\n\tdef printBookInfo(self, isbn):\n\t\tif isbn in self.bDic:\n\t\t\tb = self.bDic[isbn]\n\t\t\tprint(f'&#123;b.bName&#125;,&#123;b.bPrice&#125;,&#123;b,bIsbn&#125;')\n\t\telse: \n\t\t\tprint('Lookup result does not exist')\nex.py\n\nimport book as bk\n\nmyBRepository = bk.BookRepository()\n\nmyBRepository.registBook(bk.Book('python',20000,'1234567890'))\nmyBRepository.registBook(bk.Book('java',25000,'0987654321'))\nmyBRepository.registBook(bk.Book('c/c++',27000,'1029384756'))\n\nmyBRepository.printBooksInfo()\nmyBRepository.printBooksInfo('0987654321')\nmyBRepository.printBooksInfo('1029384756')\nmyBRepository.removeBook('1234567890')\n\nmyBRepository.printBooksInfo()\n[연습문제] 클래스(04)추상 클래스를 이용해서 한&#x2F;영,한&#x2F;일 사전 클래스를 만들어보자ADictionary.py\n\nfrom abc import ABCMeta\nfrom abc import abstractmethod\n\nclass AbsDictionary(metaclass=ABCMeta):\n\tdef __init__(self):\n\t\tself.wordDic = &#123;&#125;\n\t@abstractmethod\n\tdef registWord(Self,w1,w2):\n\t\tpass\n\t@abstractmethod\n\tdef removeWord(self,w1):\n\t\tpass\n\t@abstractmethod\n\tdef updateWord(self,w1,w2):\n\t\tpass\n\t@abstractmethod\n\tdef searchWord(self,w1):\n\t\tpass\n\nclass Kor2Eng(AbsDictionary):\n\tdef __init__(self):\n\t\tsuper().__init__()\n\t\n\tdef registWord(self,w1,w2):\n\t\tprint(f'[Kor2Eng]registWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2 #superior to Kor2Eng() \n\tdef removeWord(self,w1):\n\t\tprint(f'[Kor2Eng] removeWord(): &#123;w1&#125;')\n\t\tdel self.wordDic[w1]\n\t\n\tdef updateWord(self,w1,w2):\n\t\tprint(f'[Kor2Eng] updateWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2\n\t\n\tdef searchWord(self,w1):\n\t\tprint(f'[Kor2Eng] searchWord() : &#123;w1&#125;')\n\t\treturn self.wordDic[w1]\n\t\n\tdef printWords(self):\n\t\tfor k in self.wordDic.keys():\n\t\t\tprint(f'&#123;k&#125;: &#123;self.wordDic[k]&#125;')\n\nclass Kor2Jpn(AbsDictionary):\n\tdef __init__(self):\n\t\tsuper().__init__()\n\t\n\tdef registWord(self,w1,w2):\n\t\tprint(f'[Kor2Jpn]registWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2 #superior to Kor2Jpn() \n\tdef removeWord(self,w1):\n\t\tprint(f'[Kor2Jpn] removeWord(): &#123;w1&#125;')\n\t\tdel self.wordDic[w1]\n\t\n\tdef updateWord(self,w1,w2):\n\t\tprint(f'[Kor2Jpn] updateWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2\n\t\n\tdef searchWord(self,w1):\n\t\tprint(f'[Kor2Jpn] searchWord() : &#123;w1&#125;')\n\t\treturn self.wordDic[w1]\n\t\n\tdef printWords(self):\n\t\tfor k in self.wordDic.keys():\n\t\t\tprint(f'&#123;k&#125;: &#123;self.wordDic[k]&#125;')\nex.py\n\nimport ADictionary as dic\nkTe = dic.Kor2Eng()\nkTe.registerWord('책','book')\nkTe.registerWord('나비','butterfly')\nkTe.registerWord('연필','pencil')\nkTe.registerWord('학생','student')\nkTe.registerWord('선생님','teacher')\n\nkTe.printWords()\n\nkTe.updateWord('교수님','professor')\n[연습문제] 클래스(05)주사위 게임 클래스를 만들고 컴퓨터와 사용자의 게임 결과를 출력해 보자impert random as rd\n\nclass Dice:\n\tdef __init__(self):\n\t\tself.cNum = 0\n\t\tself.uNum = 0\n\t\n\tdef setCnum(self):\n\t\tprint('[Dice] setCnum()')\n\t\tself.cNum = rd.randint(1,6)\n\t\n\tdef setUnum(self):\n\t\tprint('[Dice] setUnum()')\n\t\tself.uNum = rd.randint(1,6)\n\t\n\tdef startGame(self):\n\t\tprint('[Dice] startgame()')\n\t\tself.setCnum()\n\t\tself.setUnum()\n\t@abstractmethod\n\tdef printResult(self):\n\t\tprint('[Dice] printResult()')\n\t\tif self.cNum == 0 or self.uNum == 0:\n\t\t\tprint('Dice scale has not been set yet.')\n\t\telse: \n\t\t\tif self.cNum &lt; self.uNum :\n\t\t\t\tprint('Computer won!')\n\t\t\telif self.cNum > self.uNum :\n\t\t\t\tprint('Player won!')\n\t\t\telif elf.cNum == self.uNum:\n\t\t\t\tprint('Draw!')\nex.py\n\nimport dice\n\ndc = dice.Dice()\ndc.startGame()\ndc.printResult()\n[연습문제] 클래스(06)from time import sleep자동차 경주 게임 클라스 만들기:자동차는 랜덤하게 이동; 편의상 10초 동안만 주행하며, 가장 멀리 이동한 자동차가 우승\n\ncar.py\n\nclass Car:\n\tdef __init__(self,n='fore car',c='red',s=200):\n\t\tself.name = n\n\t\tself.color = c\n\t\tself.max_speed = s\n\t\tself.distance = d\n\t\n\tdef printCarInfo(self):\n\t\tprint(f'name: &#123;self.name&#125;)\n\t\tprint(f'color: &#123;self.color&#125;)\n\t\tprint(f'maximum speed: &#123;self.max_speed&#125;)\n\t\n\tdef controlSpeed(self):\n\t\treturn random.randint(0,self.max_speed)\n\t\n\tdef getDistanceForHour(self):\n\t\treturn self.controlSpeed()\nracing.py\n\nfrom time import sleep\n\nclass CarRacing:\n\tdef __init__(self):\n\t\tself.cars = []\n\t\tself.rankings = []\n\tdef startRacing(self):\n\t\tfor i in range(10):\n\t\t\tprint(f'Racing: &#123;i+1&#125;바퀴')\n\t\t\tfor car in self.cars:\n\t\t\t\tcar.distance += car.getDistanceForHour()*1\n\t\t\t\tsleep(1)\n\t\t\t\tself.printCurrentCarDistance()\n\tdef printCurrentCarDistance(self):\n\t\tfor car in self.cars:\n\t\t\tprint(f'&#123;car.name&#125;: &#123;car.distance&#125;\\t\\t', end='')\n\t\t\tprint()\n\t\n\tdef addCar(self,c):\n\t\tself.cars.append(c)\nex.py\n\nfrom car_game import racing as rc\nfrom car_game import car\n\nmyCarGame = rc.CarRacing()\ncar.Car('Car01','White',250)\ncar.Car('Car02','Black',200)\ncar.Car('Car03','Red',220)\ncar.Car('Car04','Blue',280)\ncar.Car('Car05','Yellow',170)\n\nmyCarGame.addCar(car01)\nmyCarGame.addCar(car02)\nmyCarGame.addCar(car03)\nmyCarGame.addCar(car04)\nmyCarGame.addCar(car05)\n\nmyCarGame.startRacing()\n[연습문제] 클래스(07)mp3 Player 클래스를 만들고 노래를 등록한 후 재생해보자mp3player.py\n\nfrom time import sleep\n\nclass Song:\n\tdef __init__(self,t,s,pt):\n\t\tself.title = t\n\t\tself.singer = s\n\t\tself.playtime = pt\n\tdef printSongInfo(self):\n\t\tprint(f'Title: &#123;self.title&#125;')\n\t\tprint(f'Singer: &#123;self.singer&#125;')\n\t\tprint(f'Playtime: &#123;self.playtime&#125;')\n\nclass Player:\n\tdef __init__(self):\n\t\tself.songList = []\n\t\tself.isLoop = False\n\t\n\tdef addSong(self,s):\n\t\tdelf.songList.append(s)\n\t\n\tdef play(self):\n\t\tif self.isLoop:\n\t\t\twhile self.isLoop:\n\t\t\t\tfor s in self.songList:\n\t\t\t\tprint(f'Title: &#123;s.title&#125;')\n\t\t\t\tprint(f'Singer: &#123;s.singer&#125;')\n\t\t\t\tprint(f'Playtime: &#123;s.playtime&#125;sec')\n\t\t\t\tsleep(s.playtime)\n\t\n\tdef shuffle(self):\n\t\trandom.shuffle(self.songList)\n\t\n\tdef setIsLoop(self,flag):\n\t\tself.isLoop = flag\nex.py\n\nimport mp3player as mp3\n\ns1 = mp3.Song('Light Switch','CP',3)\ns2 = mp3.Song('That\\'s Hilarious','CP',2)\ns3 = mp3.Song('Dangerously','CP',3)\ns4 = mp3.Song('There\\'s A First Time For Everything,'CP',3)\ns5 = mp3.Song('Smells Like Me','CP',3)\n\nplayer = mp3.Player()\nplayer.addSong(s1)\nplayer.addSong(s2)\nplayer.addSong(s3)\nplayer.addSong(s4)\nplayer.addSong(s5)\n\nplayer.setIsLoop(False)\nplayer.shuffle()\nplayer.play()\n[연습문제] 예외처리(01)사용자가 입력한 숫자를 입력해서 산술연산 결과를 출력하는 모듈을 만들되, 예상하는 예외에 대한 예외처리 코드를 작성해 보자calculator.py\n\ndef add(n1,n2):\n\tprint('덧셈 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tprint(f'&#123;n1&#125; + &#123;n2&#125; = &#123;n1+n2&#125;')\n\ndef sub(n1,n2):\n\tprint('뺄셈 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tprint(f'&#123;n1&#125; - &#123;n2&#125; = &#123;n1-n2&#125;')\n\ndef mul(n1,n2):\n\tprint('곱셈 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tprint(f'&#123;n1&#125; * &#123;n2&#125; = &#123;n1*n2&#125;')\n\ndef div(n1,n2):\n\tprint('나눗셈 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tif n2 == 0:\n\t\tprint('0으로 나눌 수 없습니다.')\n\t\treturn\n\ttry:\n\t\tprint(f'&#123;n1&#125; / &#123;n2&#125; = &#123;n1/n2&#125;')\n\texcept ZeroDivisionError as e:\n\t\tprint(e)\n\t\tprint('0으로 나눌 수 없습니다.')\n\ndef mod(n1,n2):\n\tprint('몫 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tif n2 == 0:\n\t\tprint('0으로 나눌 수 없습니다.')\n\t\treturn\n\ttry:\n\t\tprint(f'&#123;n1&#125; % &#123;n2&#125; = &#123;n1%n2&#125;')\n\texcept ZeroDivisionError as e:\n\t\tprint(e)\n\t\tprint('0으로 나눌 수 없습니다.')\n\ndef flr(n1,n2):\n\tprint('나머지 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tif n2 == 0:\n\t\tprint('0으로 나눌 수 없습니다.')\n\t\treturn\n\ttry:\n\t\tprint(f'&#123;n1&#125; // &#123;n2&#125; = &#123;n1//n2&#125;')\n\texcept ZeroDivisionError as e:\n\t\tprint(e)\n\t\tprint('0으로 나눌 수 없습니다.')\n\ndef exp(n1,n2):\n\tprint('나머지 연산')\n\ttry:\n\t\tn1 = float(n1)\n\texcept:\n\t\tprint('첫번째 피연자가 숫자가 아닙니다.')\n\t\treturn\n\ttry:\n\t\tn2 = float(n2)\n\texcept: \n\t\tprint('두번째 피연산자는 숫자가 아닙니다.')\n\t\treturn\n\tprint(f'&#123;n1&#125; ** &#123;n2&#125; = &#123;n1**n2&#125;')\nex.py\n\nimport calculator as cc\n\nnum1 = input('첫번째 피연산자 입력: ')\nnum2 = input('두번째 피연산자 입력: ')\n\ncc.add(num1,num2)\ncc.sub(num1,num2)\ncc.mul(num1,num2)\ncc.div(num1,num2)\ncc.mod(num1,num2)\ncc.flr(num1,num2)\ncc.exp(num1,num2)\n[연습문제] 예외처리(02)class에서 error exception정의하고 모듈로 사용하는 법1부터 1000까지의 소수인 난수 10개를 생성하되, 소수가 아니면 사용자 예외가 발생하도록 프로그램을 만들어보자prime_module.py\n\nclass NotPrimeException(Exception):\n\tdef __init__(self,n):\n\t\tsuper().__init__(f'&#123;n&#125; is not a prime number.')\n\nclass PrimeException(Exception):\n\tdef __init__(self,n):\n\t\tsuper().__init__(f'&#123;n&#125; is a prime number.')\n\ndef isPrime(number):\n\tflag = True\n\tfor n in range(2,number):\n\t\tif number % n == 0:\n\t\t\tflag == False\n\t\t\tbreak\n\tif flag == False:\n\t\traise NotPrimeExcpetion(number)\n\telse: \n\t\traise PrimeException(number)\n\t\nimport random\nimport prime_module as pm\n\nprimeNumbers = []\n\nn = 0\nwhile n &lt; 10:\n\trn = random.randint(2,1000)\n\tif rn not in primeNumbers:\n\t\ttry: \n\t\t\tpm.isPrime(rn)\n\t\texcept pm.NotPrimeException as e:\n\t\t\tprint(e)\n\t\t\tcontinue\n\t\texcept pm.PrimeException as e:\n\t\t\tprint(e)\n\t\t\tprimeNumbers.append(rn)\n\t\t\n\telse: \n\t\tprint(f'&#123;rn&#125; is an overlap number.')\n\t\tcontinue\n\tn += 1\n\nprint(f'Prime numbers: &#123;primeNumbers&#125;')\n[연습문제] 예외처리(03)global variables: g1Price,g2Price,…를 참조하는 법: globals()[f’{g}Price’]상품 구매에 따른 ‘총 구매 금액’을 출력하되, 다음과 같이 개수가 잘못 입력된 경우 별도로 출력하도록 프로그램을 만들어보자.purchasementCalculator.py\n\ng1Price = 1200; g2Price = 1000; g3Price = 800\ng4Price = 2000; g5Price = 900\n\ndef formatedNumber(n):\n\treturn format(n,',')\n\ndef calculator(*gcs):\n\tgcDic = &#123;&#125;\n\tagainInput = &#123;&#125;\n\tfor idx,gc in enumerate(gcs):\n\t\ttry:\n\t\t\tgcsDic[f'g&#123;idx+1&#125;'] = int(gc)\n\t\texcept Exception as e:\n\t\t\tinputCntAgain[f'g&#123;idx+1&#125;'] = gc\n\t\t\tprint(e)\n\ttotalPrice = 0\n\tfor g in gcsDic.keys():\n\t\ttotalPrice += globals()[f'&#123;g&#125;Price']*gcsDic[g]\n\t\t\n\tprint(f'------------------------')\n\tprint(f'총 구매 금액: &#123;formatedNumber(totalPrice)&#125;원')\n\tprint(f'--------미결제 항목--------')\n\tfor g in inputCntAgain.keys():\n\t\tprint(f'상품:&#123;g&#125;,\\t 구매개수: &#123;inputCntAgain&#123;g&#125;&#125;')\nex.py\n\nimport purchasementCalculator as pc\ng1Cnt = input('Goods no.1 purchase amount: ')\ng2Cnt = input('Goods no.2 purchase amount: ')\ng3Cnt = input('Goods no.3 purchase amount: ')\ng4Cnt = input('Goods no.4 purchase amount: ')\ng5Cnt = input('Goods no.5 purchase amount: ')\n\npc.calculator(g1Cnt,g2Cnt,g3Cnt,g4Cnt,g5Cnt)\n[연습문제] 예외처리(04)유효성체크모듈회원가입 프로그램을 만들되 입력하지 않은 항목이 있는 경우 에러 메세지를 출력하는 프로그램을 만들어보자mem.py\n\nclass EmptyDataException(Exception):\n\tdef __init__(self,i):\n\t\tsuper().__init__(f'&#123;i&#125; is empty.')\n\ndef checkInputData(n,m,p,a,ph):\n\tif n == '':\n\t\traise EmptyDataException('name')\n\telif m == '':\n\t\traise EmptyDataException('mail')\n\telif p == '':\n\t\traise EmptyDataException('password')\n\telif a == '':\n\t\traise EmptyDataException('address')\n\telif ph == '':\n\t\traise EmptyDataException('phone')\n\nclass RegisterMember():\n\tdef __init__(self,n,m,p,a,ph):\n\t\tself.m_name = n\n\t\tself.m_mail = m\n\t\tself.m_password = p\n\t\tself.m_address = a\n\t\tself.m_phone = ph\n\t\tprint('Member-registering has been completed.')\n\tdef printMemberInfo(self):\n\t\tprint(f'm_name: &#123;m_name&#125;')\n\t\tprint(f'm_mail: &#123;m_mail&#125;')\n\t\tprint(f'm_password: &#123;m_password&#125;')\n\t\tprint(f'm_address: &#123;m_address&#125;')\n\t\tprint(f'm_phone: &#123;m_phone&#125;')\nex.py\n\nimport mem\n\nm_name = input('이름 입력: ')\nm_mail = input('메일 주소 입력: ')\nm_pw = input('비밀번호 입력: ')\nm_addr = input('주소 입력: ')\nm_phone = input('연락처 입력: ')\n\ntry: \n\tmem.checkInputData(m_name,m_mail,m_pw,m_addr,m_phone)\n\tnewMember = mem.RegisterMember(m_name,m_mail,m_pw,m_addr,m_phone)\n\tnewMember.printMemberInfo()\nexcept mem.EmptyDataException as e:\n\tprint(e)\n[연습문제] 예외처리(05)은행 계좌 개설 및 입출금 프로그램을 만들어보자bank.py\n\nclass PrivateBank:\n\tdef __init__(self, bank, account_name):\n\t\tself.bank = bank\n\t\tself.account_name = account_name\n\t\tself.account_no = 0\n\t\tself.totalMoney = 0\n\t\t\n\t\twhile True:\n\t\t\tnewAccountNo = random.randint(10000,999999)\n\t\t\tif bank.isAccount(newAccountNo):\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tself.account_no = newAccountNo\n\t\t\t\tbreak\n\t\tself.totallMoney = 0\n\t\tbank.addAccount(self)\n\n\tdef printBankInfo(self):\n\t\tprint('='*40)\n\t\tprint(f'account_name : &#123;self.account_name&#125;')\n\t\tprint(f'account_no : &#123;self.account_no&#125;')\n\t\tprint(f'totalMoney: &#123;self.totalMoney&#125;')\n\t\tprint('='*40)\n\nclass Bank:\n\tdef __init__(self):\n\t\tself.accoounts = &#123;&#125;\n\tdef addAcount(self,privateBank):\n\t\tself.accounts[privateBank.account_no] = privateBank\n\tdef isAccount(self,ano):\n\t\treturn ano in self.accounts\n\tdef deposit(self,ano,m): # deposit n;vt.\n\t\tpb = self.accounts[ano]\n\t\tpb.totalmoney += m\n\tdef withdraw(self,ano,m):\n\t\tpb = self.accounts[ano]\n\t\tif pb.totalMoney - m &lt; 0:\n\t\t\tpass\n\nclass LackException(Exception):\n\tdef __init__(self,m1,m2):\n\t\tsuper.__init__(f'잔금 부족! 잔액:&#123;m1&#125;,출금액: &#123;m2&#125;')\n\t\t\nex.py\n\nimport Bank\n\nkoreaBank = bank.Bank()\nnew_account_name = input('통장 개설을 위한 예금주 입력: ')\nmyAccount = bank.PrivateBank(koreaBank, new_account_name)\nmyAccount.printBankInfo()\n\nwhile True:\n\tselectNum = int(input('1.입금\\t2.출금\\t3.종료'))\n\tif selectNum == 1:\n\t\tm = int(input('입금액 입력: '))\n\t\tkoreaBank.deposit(myAccount.account_no,m)\n\telif selectNum == 2:\n\t\tm = int(input('출금액 입력: '))\n\t\t\n\t\ttry:\n\t\t\tkoreaBank.withdraw(myAccount.account_no,m)\n\t\texcept bank.lackException as e:\n\t\t\tprint(e)\n\t\tfinally: \n\t\t\tmyAccount.printBankInfo()\n\telif selectNum == 3:\n\t\tprint('Bye')\n\t\tbreak\n\telse: \n\t\tprint('잘못 입력하셨습니다. 다시 선택하세요.')\n[연습문제] 텍스트 파일(01)fileName &#x3D; ‘myDiary_’+mid+’.txt’한줄일기장 작성 diary.py\n\nimport time\n\ndef writeDiary(u,f,d):\n\tlt = time.localtime()\n\ttimeStr = time.strftime('%Y-%m-%d %I:%M:%S %p',lt)\n\tfilePath = u+f\n\twith open(filePath,'a') as f:\n\t\tf.write(f'&#123;(timeStr)&#125; &#123;d&#125;\\n')\ndef readDiary(u,f):\n\tfilePath = u+f\n\tdataArray = []\n\twith open(filePath,'r') as f:\n\t\tdatas = f.readlines()\n\treturn datas\nex.py\n\nimport diary\n\nmembers = &#123;&#125;\nurl = '/usr/local/lib/python3.9/'\n\ndef printMembers():\n\tfor m in members.keys():\n\t\tprint(f'ID: &#123;m&#125; \\t PW: &#123;members[m]&#125;')\n\nwhile True:\n\tselectNum = int(input('1.sign in\\t2.write single-line diary \\t3.see my diary \\t4.quit'))\n\tif selectNum == 1:\n\t\tmId = input('Input ID: ')\n\t\tmPw = input('Input PW: ')\n\t\tmembers[mId] = mPw\n\t\tprintMembers()\n\telif selectNum == 2:\n\t\tmId = input('input ID: ')\n\t\tmPw = input('Input PW: ')\n\t\tif mId in members and members[mId] == mPw:\n\t\t\tprint('Successfully logged in.')\n\t\t\tfileName = 'myDiary_'+mid+'.txt'\n\t\t\tdata = input('오늘 하루 중 인상깊었던 일을 기록하세요.')\n\t\t\tdiary.writeDiary(uri,fileName,data)\n\t\telse:\n\t\t\tprint('Log-in unsuccessful.')\n\t\t\tprintMembers()\n\telif selectNum == 3:\n\t\tmId = input('Input ID: ')\n\t\tmPw = input('Input PW: ')\n\t\tif mId in members and members[mId] == mPw:\n\t\t\tprint('Successfully logged in.')\n\t\t\tfileName = 'myDiary_'+mId+'.txt'\n\t\t\tdataArray = diary.readDiary(uri,filename)\n\t\t\tfor d in dates:\n\t\t\t\tprint(d,end='')\n\t\telse:\n\t\t\tprint('Log-in unsuccessful.')\nelif selectNum == 4:\n\tprint('Bye')\n\tbreak\n[연습문제] 텍스트 파일(02)텍스트 파일에 수입,지출을 기록하는 가계부 만들기import time\n\ndef formatedNum(n):\n\treturn format(n,',')\n\ndef getTime():\n\tlt = time.localtime()\n\tst = time.strftime('%Y-%m-%d %H:%M:%S')\n\treturn st\n\nwhile True:\n\tselectNumber = int(input('1.입금\\t2.출금\\t3.종료'))\n\tif selectNumber == 1:\n\t\tmoney = int(input('입금액 입력: '))\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','r') as f:\n\t\t\tm = f.read()\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','w') as f:\n\t\t\tf.write(str(int(m)+money))\n\t\tmemo = input('입금 내역 입력: ')\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt','a') as f:\n\t\t\tf.write('==========================================')\n\t\t\tf.write(f'&#123;getTime() \\n&#125;')\n\t\t\tf.write(f'[입금]&#123;memo&#125;: &#123;str(formatedNum(money))&#125;원\\n')\n\t\t\tf.write(f'[잔액]: &#123;str(int(n)+formatedNum(money))&#125;원\\n')\n\t\tprint('입금 완료')\n\t\tprint(f'기존 잔액: &#123;formatedNum(m)&#125;')\n\t\tprint(f'입금 후 잔액: &#123;formatedNum(int(m)+money)&#125;')\n\t\t\n\telif selectNumber == 2:\n\t\tmoney = int(input('출금액 입력: '))\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','r') as f:\n\t\t\tm = f.read()\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt','w') as f:\n\t\t\tf.write(str(int(m)-money))\n\t\tmemo = input('출금 내역 입력: ')\n\t\twith open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt','a') as f:\n\t\t\tf.write('===========================================')\n\t\t\tf.write(f'&#123;getTime() \\n&#125;')\n\t\t\tf.write(f'[출금]&#123;memo&#125;: &#123;str(formatedNum(money))&#125;원\\n')\n\t\t\tf.write(f'[잔액]: &#123;str(formatedNum(int(n)-money))&#125;원\\n')\n\t\tprint('출금 완료')\n\t\tprint(f'기존 잔액: &#123;formatedNum(m)&#125;')\n\t\tprint(f'출금 후 잔액: &#123;formatedNum(int(m)-money)&#125;')\n\telif selectNumber == 3:\n\t\tprint('Bye')\n\t\tbreak\n\telse:\n\t\tprint('Please re-enter.')\n\n\n","slug":"zeroBase-DS-3rd-01","date":"2023-03-13T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2be23b8612c2e5659a5176de7fad3d20","title":"zeroBase_DS 2주차 금요일 스터디노트","content":"2nd WeekFridaytext file 작성open(),read(),write(),close()를 이용한 텍스트 파일 다루기\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w') # 없으면 생성\nstrCnt = file.wrote('Hello world!')\nprint(f'strCnt: &#123;strCnt&#125;')\n\nfile.close()\n다음과 같이 시스템 시간과 일정을 텍스트 파일에 작성해보자.import time\nlt = time.localtime()\ndateStr = '[' + str(lt.tm_year)+ '년'+\\str(lt.tm_mon) + '월' +\\str(lt.tm_mday)+'일]'\n\ntodaySchedule = input('오늘 일정: ')\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w')\nfile.write(dateStr+todaySchedule)\nfile.close()\nimport time\nlt = time.localtime()\n\ndateStr = '[' + str(lt.tm_year)+'년'+str(lt.tm_mon)+'월'+str(lt.tm_day)+'일]'\n\ntodaySchedule = input('오늘 일정: ')\n\nopen('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt'','w')\ntext file 리딩import time\nlt = time.localtime()\ndateStr = time.strtime('%Y-%m-%d %H:%M:%S %p') #p = a.m or p.m\n\ntodaySchedule = input('오늘 일정: ')\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w')\nfile.write(dateStr+todaySchedule)\nfile.close()\n다음 텍스트 파일에서 ‘Python’을 ‘파이썬’으로 변경해서 파일에 다시 저장해보자.텍스트 파일 내용:\n\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/test.txt','r',encoding='UTF8')\n\nstr = file.read()\nprint(f'str: &#123;str&#125;')\n\nfile.close()\n\nstr = str.replace('Python','파이썬',2)\nprint(f'str: &#123;str&#125;')\n\ntext file 오픈file mode는 파일을 어떤 목적으로 open할지 정한다.- &#39;w&#39;: 쓰기 전용(파일이 있으면 덮어씌움,존재하지 않으면 새로운 파일 생성)\n- &#39;a&#39;: 쓰기 전용(파일이 있으면 덧붙임_append)\n- &#39;x&#39;: 쓰기 전용(파일이 있으면 에러 발생)\n- &#39;r&#39;: 읽기 전용(파일이 없으면 에러 발생)\n\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n# file mode 'w'\nfile = open(uri+'hello.txt'.'w')\nfile.write('Hello Python!')\nfile.close()\n# file mode 'a'\nfile = open(uri+'hello.txt','a')\nfile.write('\\n Nice to meet you!')\nfile.close()\n# file mode 'r'\nfile = open(uri+'hello.txt','a')\nstr = file.read()\nprint(f'str: &#123;str&#125;')\nfile.close()\n사용자가 입력한 숫자까지의 모든 소수를 구하고 이를 파일에 작성해보자uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\ndef appendPrimeNum(n)\n\tfile = open(uri + 'primeNumbers.txt','a')\n\tfile.write(str(n))\n\tfile.write('\\n')\n\tfile.close()\n\ninputNumber = int(input(\"0보다 큰 정수 입력: \"))\n\nfor number in range(2,(inputNmber+1)):\n\tflag = True\n\tfor n in range(2,(inputNumber+1)):\n\t\tflag = True\n\t\tfor n in range(2,number):\n\t\t\tif number % n == 0:\n\t\t\t\tflag = False \n\t\t\t\tbreak\n\t\tif (flag):\n\t\t\tappendPrimeNum(number)\nwith ~ as문 추천with~as 문을 이용하면 file.close()를 생략할 수 있다.uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nfile = open(uri+'balabala.txt','a')\nfile.write('YOU NEED PYTHON')\nfile.close()\n를\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'balabala.txt','a') as f:\n\tf.write('YOU NEED PYTHON')\n로\n로또 번호 생성 프로그램을 만들고 파일에 번호를 출력해 보자.import random\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\ndef writeNumbers(nums):\n\tfor idx,num in enumerate(nums):\n\t\twith open(uri+'lotto.txt','a') as f:\n\t\tif idx &lt; len(nums)-2:\n\t\t\tf.write(str(num)+', ')\n\t\telif idx = len(nums):\n\t\t\tf.write(str(num))\n\t\telif idx = len(nums)-1:\n\t\t\tf.write('\\n')\n\t\t\tf.write('Bonus number: '+str(num))\n\t\t\tf.write('\\n')\nrNums = random.sample(range(1,46),7)\nprint(f'rNums:&#123;rNums&#125;')\nwritelines()writelines()는 List 또는 Tuple 데이터를 파일에 쓰기 위한 함수이다.languages = ['c/c++','java','c#','python','javascript']\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\nfor i in languages:\n\twith open(uri+'languages.txt','a') as f:\n\t\tf.write(i)\n\t\tf.write('\\n')\n를\nlanguages = ['c/c++','java','c#','python','javascript']\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\nwith open(uri+'languages.txt','a') as f:\n\tf.writelines(languages)\n로\n딕셔너리에 저장된 과목별 점수를 파일에 저장하는 코드를 작성하자.scoreDic = &#123;'kor':85,'eng':90,'mth':92,'sci':79,'his':82&#125; #keys&amp;values\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nfor key in scoreDic.keys(): \n\twith open(uri+'scoreDic.txt','a') as f:\n\t\tf.write(key+'\\t: '+str(scoreDic[key])+'\\n')\nscoreDic = &#123;'kor':85,'eng':90,'mth':92,'sci':79,'his':82&#125; #keys&amp;values\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n# 통으로 다 출력\nwith open(uri+'scores.txt'+'a') as f:\n\tprint(scoreDic,file=f)\nreadlines(), readline()readlines(): 파일의 모든 데이터를 읽어서 리스트 형태로 반환uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'lans.txt','r') as f:\n\tlanList = f.readlines()\n# &lt;lans.txt>\n# hello python\n# hello c/c++\n# hello java\n# hello javascript\nprint(f'lanList: &#123;LanList&#125;')\nprint(f'lanList Type: &#123;type&#123;LanList&#125;&#125;')\n# lanList: ['hello python\\n', 'hello c/c++\\n', 'hello java\\n', 'hello javascript\\n']\n# lanList type: &lt;class 'list'>\nreadline()uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'lans.txt','r') as f:\n\tlanList = f.readline()\n\twhile line != '':\n\t\tprint(f'line: &#123;Line&#125;',end='')\n\t\tline = f.readline()\n파일에 저장된 과목별 점수를 파이썬에서 읽어, 딕셔너리에 저장하는 코드를 만들어보자.# &lt;scores.txt>\n# kor:85\n# eng:90\n# mth:92\n# sic:79\n# his:82\nscoreDic = &#123;&#125;\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri + 'scores.txt','r') as f:\n\tline = f.readline()\n\twhile line != '':\n\t\ttempList = line.split(':')\n\t\t# tempList : ['kor','85\\n']\n\t\t# ...\n\t\tscoreDic[tempList[0]=int(tempList[1].strip('\\n'))]\n\t\t# tempList : ['kor','85']\n\t\t# ...\n\t\t\n\t\tline = f.readline()\n\t\t# scoreDic : &#123;'kor':85, ..., 'his': 82&#125;\nprint(f'scoreDic: &#123;scoreDic&#125;')\n[연습문제]함수01계산기 만들기def add(n1,n2)\n\treturn n1+n2\ndef sub(n1,n2)\n\treturn n1-n2\ndef mul(n1,n2)\n\treturn(n1*n2)\ndef div(n1,n2)\n\treturn(n1/n2)\ndef mod(n1,n2)\n\treturn (n1%n2)\ndef flr(m1,n2)\n\treturn (n1//n2)\ndef exp(n1,n2)\n\treturn (n1**n2)\n\nwhile True: \n\tprint('-'*60)\n\ttry: \n\t\tselectNum = int(input('1.+(덧셈) 2.-(뺄셈) 3.*(곱셈) 4./(나눗셈) 5.%(몫) 6.//(나머지) 7.^(제곱) 8.종료'))\n\t\tif selectNum == 8:\n\t\t\tprint('Okay bye...')\n\t\t\tbreak\n\texcept: \n\t\tprint('숫자를 입력해 주세요.')\n\telse:\n\t\tnum1 = int(input('첫번째 숫자 입력: '))\n\t\tnum2 = int(input('두번째 숫자 입력: '))\n\t\tif selsctNum == 1:\n\t\t\tprint(f'&#123;num1&#125;+&#123;num2&#125;=&#123;add(num1,num2)&#125;')\n\t\tif selsctNum == 2:\n\t\t\tprint(f'&#123;num1&#125;-&#123;num2&#125;=&#123;sub(num1,num2)&#125;')\n\t\tif selsctNum == 3:\n\t\t\tprint(f'&#123;num1&#125;*&#123;num2&#125;=&#123;mul(num1,num2)&#125;')\n\t\tif selsctNum == 4:\n\t\t\tprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;div(num1,num2)&#125;')\n\t\tif selsctNum == 5:\n\t\t\tprint(f'&#123;num1&#125;%&#123;num2&#125;=&#123;mod(num1,num2)&#125;')\n\t\tif selsctNum == 6:\n\t\t\tprint(f'&#123;num1&#125;//&#123;num2&#125;=&#123;flr(num1,num2)&#125;')\n\t\tif selsctNum == 7:\n\t\t\tprint(f'&#123;num1&#125;^&#123;num2&#125;=&#123;exp(num1,num2)&#125;')\n[연습문제]함수02다음과 같이 출력될 수 있도록 이동거리와 이동시간을 반환하는 함수를 만들어 보자.\n------------------------------------\n속도(km/h) 입력: 90\n시간(h) 입력: 2\n시간(m) 입력: 45\n90.0(km/h)속도로 2.0(h)시간 45.0(m)분 동안 이동한 거리: 247.5(km)\n------------------------------------\n\ndef getDistance(speed, hour, minute):\n\tdistance = speed *(hour+minute/60)\n\treturn distance\nprint('-'*60)\ns = float(input('속도(km/h)입력: ')\nh = float(input('시간(h)입력: ')\nm = float(input('시간(m)입력: ')\nd = getDistance(s,h,m)\nprint(f'&#123;s&#125;(km/h)속도로 &#123;h&#125;(h)시간 &#123;m&#125;(m)분 동안 이동한 거리: &#123;d&#125;(km)')\nprint('-'*60)\n[연습문제]함수03다음과 같이 출력될 수 있도록 비행기 티켓 영수증 출력 함수를 만들어보자.====================================\n유아 1명 요금: 18,000원\n유아 할인 대상 1명 요금: 9,000원\n소아 2명 요금: 50,000원\n소아 할인 대상 1명 요금: 100,000원\n성인 할인 대상 0명 요금: 0원\n====================================\nTotal: 7명\nTotalPrice: 189,500원\n====================================\n\ndef formatedNum(n):\n\treturn format(n,',')\n\nchildPrice = 10000\nadolescentPrice = 25000\nadultPrice = 50000\nspecialDC = 50\n\ndef printAirplaneReceipt(c1,c2,i1,i2,a1,a2):\n\tcp = c1 + childPrice\n\tcp_dc = int(c2 * childPrice*0.5)\n\tprint(f'유아&#123;c1&#125;명 요금: &#123;cp&#125;원')\n\tprint(f'유아 할인 대상 &#123;c2&#125;명 요금: &#123;cp_dc&#125;원')\n\tip = i1+adolescentPrice\n\tip_dc = int(i2 *  adolescentPrice*0.5)\n\tprint(f'청소년&#123;i1&#125;명 요금: &#123;ip&#125;원')\n\tprint(f'청소년 할인 대상 &#123;i2&#125;명 요금: &#123;ip_dc&#125;원')\n\tap = a1 + adultPrice\n\tap_dc = int(a2 * adultPrice*0.5)\n\tprint(f'성인&#123;a1&#125;명 요금: &#123;ap&#125;원')\n\tprint(f'성인 할인 대상 &#123;a2&#125;명 요금: &#123;ap_dc&#125;원')\n\t\n\tchildCnt = int(input('유아 명수 입력: '))\n\tcountSpecialDcChild = int(input('할인 대상 유아 명수 입력: '))\n\tadolescentCnt = int(input('청소년 명수 입력: '))\n\tcountSpecialDcadolescent = int(input('할인 대상 청소년 명수 입력: '))\n\tadultCnt = int(input('성인 명수 입력: '))\n\tcountSpecialDcadult = int(input('할인 대상 성인 명수 입력: '))\n\t\n\tprint(f'Total: &#123;c1+c2+i1+i2+a1+a2&#125;명')\n\tprint(f'TotalPrice: &#123;cp+cp_dc+ip+ip_dc+ap+ap_dc&#125;)\n\n\nprintAirplaneReceipt(childCnt,countSpecialDcChild,adolescentCnt,countSpecialDcadolescent,adultCnt,countSpecialDcadult)\n[연습문제]함수04단리&#x2F;월복리 계산기 함수 만들기def formatedNum(n):\n\treturn format(n,',')\n# 단리\ndef simpleInterestCalculator(n,t,r):\n\ttotalMoney = 0\n\ttotalMoneyRate = 0\n\tfor i in range(t):\n\t\ttotalMoney += n *(r*0.01)\n\ttotalMoney = n + totalMoneyRate\n\treturn int(totalMoney)\n# 월복리\ndef compoundInterestCalculator(n,t,r):\n\tt *= 12\n\trpn = (r/12)*0.01\n\ttotalMoney = 0\n\tfor i in range(t):\n\t\ttotalMoney += totalMoney * rpm\n\treturn int(totalMoney)\nmoney = int(input('예치금(원): '))\nterm = int(input('기간(년): '))\nrate = int(input('연이율(%): '))\nprint('='*30)\nprint('[단리 계산기]')\nprint(f'&#123;term&#125;년 후 총 수령액: &#123;simpleInterestCalculator(money,term,rate)&#125;)\nprint('-'*30)\nprint('[복리 계산기]')\nprint(f'&#123;term&#125;년 후 총 수령액: &#123;compoundInterestCalculator(money,term,rate)&#125;)\n[연습문제]함수05등차수열의 n번째 값과 합을 출력하는 함수를 만들어보자def arithmeticSequence(n1,d,n):\n\tvalueN = 0; sumN = 0;\n\ti = 1\n\twhile i &lt;= n:\n\t\tif i == 1:\n\t\tvalueN = n1\n\t\tsumN += valueN\n\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tprint(f'&#123;i&#125;번째 항까지의 값: &#123;sumN&#125;')\n\t\ti += 1\n\t\tcontinue\n\tvalue += d\n\tsumN += valueN\n\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\tprint(f'&#123;i&#125;번째 항까지의 값: &#123;sumN&#125;')\n\ti +=1\n\ninputN1 = int(input('a1 입력: '))\ninputD = int(input('공차 입력: '))\ninputN = int(input('n 입력: '))\narithmeticSequence(inputN1,inputD,inputN)\n[연습문제]함수06등비수열의 n번째 값과 합을 출력하는 함수를 만들어보자def geometricSequence(n1,r,n):\n\tvalueN = 0; sumN = 0;\n\ti = 1\n\twhile i &lt;= n:\n\t\tif i == 1:\n\t\t\tvalueN = n1\n\t\t\tsumN = valueN\n\t\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\t\tprint(f'&#123;i&#125;번째 항까지의 합: &#123;sumN&#125;')\n\t\t\ti += 1\n\t\t\tcontinue\n\t\tvalueN *= r\n\t\tsumN += valueN\n\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tprint(f'&#123;i&#125;번째 항까지의 합: &#123;sumN&#125;')\n\t\ti += i\n\ninputN1 = int(input('a1 입력: '))\ninputR = int(input('공비 입력: '))\ninputN = int(input('n 입력: '))\ngeometricSequence(inputN1,inputR,inputN)\n[연습문제] 모듈01과목별 점수를 입력하면 합격 여부를 출력하는 모듈을 만들어보자.def examResults(s1,s2,s3,s4,s5):\n\tpassScore = 60; failScore = 46\n\tdef getTotal:\n\t\ttotalScore = (s1+s2+s3+s4+s5)\n\t\tprint('Total score: &#123;&#125;'.foramt(totalScore))\n\t\treturn getTotal\n\tdef getAvg():\n\t\tavgScore = getTotal() / 5\n\t\tprint(f'평균: &#123;avgScore&#125;')\n\t\treturn avgScore\n\tdef printPassOrFail():\n\t\tprint(f'&#123;s1&#125;: Passed') if s1>=passScore else print(f'&#123;s1&#125;: Failed')\n\t\tprint(f'&#123;s2&#125;: Passed') if s1>=passScore else print(f'&#123;s2&#125;: Failed')\n\t\tprint(f'&#123;s3&#125;: Passed') if s1>=passScore else print(f'&#123;s3&#125;: Failed')\n\t\tprint(f'&#123;s4&#125;: Passed') if s1>=passScore else print(f'&#123;s4&#125;: Failed')\n\t\tprint(f'&#123;s5&#125;: Passed') if s1>=passScore else print(f'&#123;s5&#125;: Failed')\n\tdef printWhetherPassedFinal():\n\t\tif getAverage()>=passScore:\n\t\t\tif s1>=passScore and s2>=passScore and s3>=passScore and s4>=passScore and s5>=passScore:\n\t\t\t\tprint('You passed final exams.')\n\t\t\telse:\n\t\t\t\tprint('You failed some  final exams.')\n\t\telif getAverage()&lt;49 and getAverage()>failScore: \n\t\t\tprint('You have failed some final exams, however, your assessment was considered marginally acceptable.')\n\t\telif getAverage()&lt; failScore:\n\t\t\tprint('We hope see you again!')\n\n[연습문제] 모듈02상품 구매 개수에 따라 할인율이 결정되는 모듈을 만들고, 다음과 같이 계산 결과가 출력되는 프로그램을 만들어보자\n\n\n구매개수\n1개\n2개\n3개\n4개\n5개 이상\n\n\n\n할인율(%)\n5\n10\n15\n20\n25\n\n\n\n\n\n\n\n\n\n\n\ndiscount.py\ndef TotalPriceCalculator(gs):\n\tif len(gs) &lt;= 0:\n\t\tprint('구매 상품이 없습니다.')\n\t\treturn\n\t\n\trate = 25\n\ttotalPrice = 0\n\trates = &#123;1:5,2:10,3:15,4:20&#125;\n\tif len(gs) in rates:\n\t\trate = rates[(len(gs))]\n\tfor g in gs:\n\t\ttotalPrice += g *(1-rate*0.01)\n\treturn[rate,int(totalPrice)]\n\ndef formatedNum(n):\n\treturn format(n,',')\n\n\n\n\n\n\n\n\n\nex.py\nimport discount as dc\nif __name__ == 'main':\n\tflag = True\n\tgs = []\n\twhile flag:\n\t\tselectNum = int(input('1.구매 2.종료'))\n\t\tif selectNum == 1:\n\t\t\tgoodsPrice = int(input('상품 가격 입력: '))\n\t\t\tgs.append(goodsPrice)\n\t\telif selectNum ==2:\n\t\t\tresult = dc.TotalPriceCalculator(gs)\n\t\t\tflag = False\n\tprint(f'할인율: &#123;result[0]&#125;%')\n\tprint(f'합계: &#123;dc.formatedNum(result[1])&#125;원')\n[연습문제] 모듈03로또 모듈을 만들어보자lotto.py\n\nimport random as rd\nuserNums = []; randNums = []; cllctNums = []\nrandBnsNum = 0\n\ndef setUserNums(ns):\n\tglobal userNums\n\tuserNums = ns\n\ndef getUserNums():\n\treturn userNums\n\ndef setRandNums():\n\tglobal randNums\n\trandNums = rd.sample(range(1,46),6)\n\ndef getRandNums():\n\treturn randNums\n\ndef setBnsNums():\n\tglobal randBnsNum\n\twhile True:\n\t\trandBnsNum = rd.randint(1,45)\n\t\tif randBnsNum not in randBnsNum:\n\t\t\tbreak\n\ndef getBonusNum():\n\treturn randBnsNum\n\ndef lottoResult():\n\tglobal userNums\n\tglobal randNums\n\tglobal cllctNums\n\tcllctNums = []\n\t\n\tfor un in userNums:\n\t\tif un in randNums:\n\t\t\tcllctNums.append(un)\n\t\n\tif len(cllctNums) == 6:\n\t\tprint('축하합니다, 1등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif (len(cllctNums)==5) and (randBnsNum in userNums):\n\t\tprint('축하합니다, 2등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\t\tprint(f'보너스번호: &#123;randBnsNums&#125;')\n\telif len(cllctNums) == 5:\n\t\tprint('축하합니다, 3등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif len(cllctNums) == 4:\n\t\tprint('축하합니다, 4등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif len(cllctNums) == 3:\n\t\tprint('축하합니다, 5등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telse: \n\t\tprint('아쉽지만 다음기회를 노려보세요.')\n\t\tprint(f'기계 번호: &#123;randNums&#125;')\n\t\tprint(f'보너스 번호: &#123;randBnsNum&#125;')\n\t\tprint(f'선택 번호:&#123;userNums&#125;')\n\t\tprint(f'일치 번호: &#123;cllctNums&#125;')\n\ndef startLotto():\n\tn1 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn2 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn3 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn4 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn5 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn6 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tselectNums = [n1,n2,n3,n4,n5,n6]\n\tsetUserNums(selectNums)\n\tsetRandNums()\n\tsetBnsNums()\nex.py\n\nimport lotto as lt\nlt.startLotto()\n\n","slug":"zeroBase-DS-2nd-05","date":"2023-03-10T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"62e5d5ac162c18c07ba1d1ebd3f01fe8","title":"zeroBase_DS 2주차 목요일 스터디노트","content":"2nd WeekThursday객체와 메모리(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다.\n국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸을 경우에 평균을 출력해 보자.scores = [int(input('국어 점수 입력: ')), int(input('영어 점수 입력: ')), int(input('수학 점수 입력: '))]\n\nprint(scores)\n\ncopyScores = scores.copy()\nfor idx, score in enumerate(copyScores):\n\tresult = score * 1.1\n\tcopyScores[idx] = 100 if result > 100 else result\n\nprint(f'이전 평균: &#123;sum(scores) / len(scores)&#125;')\nprint(f'이후 평균: &#123;sum(copyScores) / len(copyScores)&#125;')\n얕은복사와 깊은복사얕은복사는 객체 주소를 복사하는 것이므로 객체 자체가 복사되지 않는다.깊은복사는 객체 자체를 복사하는 것으로 또하나의 객체가 만들어진다.class TenCls:\n\n\tdef __init__(self, n, s):\n\t\tself.number = n\n\t\tself.str = s\n\tdef printClsInfo(self):\n\t\tprint(f'self.number: &#123;self.number&#125;')\n\t\tprint(f'self.str: &#123;self.str&#125;')\n# 얕은 복사\ntc1 = TenCls(10,\"Hello\")\ntc2 = tc1\n\ntc1.printClsInfo()\ntc2.printClsInfo()\n# 깊은 복사\nimport copy\n\nscores = [9,8,7,6,5,4]\nscoresCopy = []\n# scoresCopy = scores\n# print(f'id(scores): &#123;scores&#125;')\n# print(f'id(scoresCopy): &#123;scoresCopy&#125;')\nfor i in scores: #깊은복사\n\tscoresCopy.append(i)\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy.extend(scores) #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy= scores.copy() #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy = scores[:] #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n클래스 상속클래스는 또 다른 클래스를 상속해서 내 것처럼 사용할 수 있다.class NormalCar():\n\tdef drive(self):\n\t\tprint('[NormalCar] drive() called!')\n\tdef back(self):\n\t\tprint('[NormalCar] back() called!')\n\nclass TurboCar(NormalCar): # 상속!\n\tdef turbo(self):\n\t\tprint('[TurboCar] turbo() called!')\n\nmyTurboCar = TurboCar()\n\nmyTurboCar.drive()\nmyTurboCar.back()\nmyTurboCar.turbo()\n생성자01객체가 생성될 때 생성자를 호출하면 __init__()가 자동 호출된다.class Calculator: #2 Calculator 생성자 호출\n  #3 Calculator __init__ 호출\n\tdef __init__(self): \n\t\tprint('[Calculator] __init__() called!')\n\ncal = Calculator() #1\nParentClassclass ParentClass:\n\tdef __init__(self,pNum1,pNum2):\n\t\tprint('[ParentClass] __init() called!')\n\tself.pNum1 = pNum1\n\tself.pNum2 = pNum2\n\nclass ChildClass(ParentClass):\n\tdef __init__(self,cNum1,cNum2)\n\t\tprint('[ChildClass] __init__() called!')\n\tself.cNum1 = cNum1\n\tself.cNum2 = cNum2\n\n# result : [ChildClass] __init__() called! \n# 앞서 불려진 __init__(self,pNum1,pNum2)가\n# 뒤에서 __init__(self,cNum1,cNum2)가 호출되면서\n# 初始化됐기 때문. 따라서 pNum1같은 속성값 사용 불가\n# 해결 방법: \n#class ChildClass(ParentClass):\n#\tdef __init__(self,cNum1,cNum2)\n#\t\tprint('[ChildClass] __init__() called!')\n#   # 여기에 강제로 호출해서 초기화를 다시 시켜주기 \n#   ParentClass.__init__(self,cNum1,cNum2)\n# # 또는 이거 \n#   super().__init__(self,cNum,cNum2)\n#\tself.cNum1 = cNum1\n#\tself.cNum2 = cNum2\n생성자02중간고사 클래스와 기말고사 클래스를 상속관계로 만들고 각각의 점수를 초기화하자. 또한 총점 및 평균을 반환하는 기능도 만들어보자.class Midterm:\n\tdef __init__(self,s1,s2,s3):\n\t\tprint('[Midterm] __init__()')\n\t\tself.midKorScore = s1\n\t\tself.midEngScore = s2\n\t\tself.midMthScaore = s3\n\tdef printScores(self):\n\t\tprint(f'midKorScore: &#123;self.midKorScore&#125;')\n\t\tprint(f'midEngScore: &#123;self.midEngScore&#125;')\n\t\tprint(f'midMthScore: &#123;self.midMthScore&#125;')\n\nclass Finals(Midterm):\n\tdef __init__(self,s1,s2,s3,s4,s5,s6):\n\t\tprint('[Finals] __init__()')\n\t\t\n\t\tsuper().__init__(s1,s2,s3)\n\t\t\n\t\tself.finalKorScore = s4\n\t\tself.finalEngScore = s5\n\t\tself.finalMthScore = s6\n\t\n\tdef printScores(self):\n\t\tsuper().printScores()\n\t\tprint(f'midKorScore: &#123;self.midKorScore&#125;')\n\t\tprint(f'midEngScore: &#123;self.midEngScore&#125;')\n\t\tprint(f'midMthScore: &#123;self.midMthScore&#125;')\n\t\n\tdef getTotalScore(self):\n\t\ttotal = self.midKorScore + self.midEngScore + self.midMthScore\n\t\ttotal += self.finalKorScore + self.finalEngScore + self.finalMthScore\n\t\t\n\t\treturn total \n\t\n\tdef getAvgScore(self):\n\t\treturn self.getTotalScore() / 6\n\nexam = Finals(85,90,98,96,90,97) #객체생성\n다중 상속class Car01:\n\tdef drive(self):\n\t\tprint('drive() method is called!')\n\nclass Car02:\n\tdef turbo(self):\n\t\tprint('turbo() method is called!')\n\nclass Car03:\n\tdef drift(self):\n\t\tprint('drift() method is called!')\n\nclass Car(Car01,Car02,Car03)\n\tdef __init__(self):\n\t\tpass\n\nmyCar = Car()\nmyCar.drive()\nmyCar.turbo()\nmyCar.drift()\n\nclass BasicCalculator:\n\tdef add(self,n1,n2):\n\t\treturn n1+n2\n\n\tdef sub(self,n1,n2):\n\t\treturn n1-n2\n\n\tdef mul(self,n1,n2):\n\t\treturn n1*n2\n\n\tdef div(self,n1,n2):\n\t\treturn n1 / n2\n\nclass DeveloperCalculator:\n\tdef mod(self,n1,n2):\n\t\treturn n1 % n2\n\n\tdef flo(self,n1,n2):\n\t\treturn n1 // n2\n\n\tdef div(self,n1,n2):\n\t\treturn n1 ** n2\n\nclass NewCalculator(BasicCalculator,DeveloperCalculator):\n\tdef __init__(self):\n\t\tpass\n\ncal = NewCalculator()\n\n오버라이딩하위클래스에서 상위클래스의 메서드를 재정의(override)한다.class Robot:\n\tdef __init__(self,c,h,w):\n\t\tself.color = c\n\t\tself.height = h\n\t\tself.weight = w\n\tdef fire(self):\n\t\tprint('총알 발사!')\n\nclass NewRobot(Robot):\n\tdef __init__(self,c,h,w):\n\t\tsuper().__init__(c,h,w)\n\tdef fire(self):\n\t\tsuper().fire()\n\t\tprint('레이저 발사!!!')\nmyRobot = NewRobot('red',200,200)\nmyRobot.fire()\n삼각형 넓이를 계산하는 클래스를 만들고 이를 상속하는 클래스에서 getArea()를 override해서 출력 결과가 다음과 같을 수 있도록 클래스를 만들어보자.class TriangleArea:\n\tdef __init__(self,w,h):\n\t\tself.width = w\n\t\tself.height = h\n\tdef printTriangleAreaInfo(self):\n\t\tprint(f'self.width: &#123;self.width&#125;')\n\t\tprint(f'self.height: &#123;self.height&#125;')\n\tdef getArea(self):\n\t\treturn self.width * self.height / 2\n\nclass NewTriangleArea(TriangleArea):\n\tdef __init__(self,w,h):\n\t\tsuper().__init__(w,h)\n\tdef getArea(self):\n\t\treturn str(super().getArea())+'㎠'\ntA = NewTriangleArea(7,4)\ntA.printTriangleAreaInfo()\ntriangleArea = tA.getArea()\nprint(f'triangleArea: &#123;triangleArea&#125;')\n추상클래스상위 클래스에서 하위 클래스에 메서드 구현을 강요한다.from abc import ABCMeta\nfrom abc import abstractmethod\n\nclass AirPlane(metaclass=ABCMeta):\n\t@abstractmethod\n\tdef fly(self):\n\t\tpass\n\tdef forward(self):\n\t\tprint('전진')\n\tdef backward(self):\n\t\tprint('후진')\n\nclass Airliner(AirPlane):\n\tdef __init__(self,c):\n\t\tself.color = c\n\tdef fly(self):\n\t\tprint('시속 400km/h 비행!')\n\nclass fighterPlane(AirPlane):\n\tdef __init__(self,c):\n\t\tself.color = c\n\tdef fly(self):\n\t\tprint('시속 700km/h 비행!')\n\naL = Airliner('white')\n\n계산기 추상 클래스를 만들고 이를 이용해서 새로운 계산기 클래스를 만들어 보자. 추상 클래스에는 덧셈,뺄셈,곱셈,나눗셈 기능이 선언되어 있어야 한다.class Calculator(metaclass=ABCMeta):\n\t@abstractmethod\n\tdef add(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef sub(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef mul(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef div(self,n1,n2):\n\t\tpass\nclass DeveloperCalculator(Calculator):\n\tdef add(self,n1,n2)\n\t\tprint(n1+n2)\n\tdef sub(self,n1,n2)\n\t\tprint(n1-n2)\n\tdef mul(self,n1,n2)\n\t\tprint(n1*n2)\n\tdef div(self,n1,n2)\n\t\tprint(n1/n2)\n\tdef mod(self,n1,n2)\n\t\tprint(n1%n2)\n\tdef flo(self,n1,n2)\n\t\tprint(n1//n2)\n예외란?문법적인 문제는 없으나 실행 중 발생하는 예상하지 못한 문제- ZeroDivisionError: division by zero\n\n예외 관련 클래스는 Exception 클래스를 상속한다.Exception\n    - Arithmetic Error\n        - ZeroDivisionError\n    - Environment Error\n        - IOError\n    - Lookup Error\n        - IndexError\n    - Syntax Error\n        - IndentationError\n\n예외처리예상하지 못한 예외가 프로그램 전체 실행에 영향이 없도록 처리함예외 발생 예상 구문을 try ~ except로 감싼다.\n\n\n사용자로부터 숫자 5개를 입력받을 때, 숫자가 아닌 자료형이 입력되면 예외 처리하는 프로그램을 만들어보자.nums = []\nn = 1\nwhile n &lt; 6:\n\ttry:\n\tnum = int(input('input number: '))\n\texcept:\n\t\tprint('예외 발생!')\n\t\tcontinue\n\t\n\tnums.append(num)\n\tn += 1\nprint(f'nums: &#123;nums&#125;')\n\ntry~except~else에서 else 는 예외가 발생하지 않은 경우 실행nums = []\nn = 1\n\nwhile n &lt; 6:\n\ttry:\n\tnum = int(input('Input an even number: '))\n\texcept:\n\t\tprint('Exception has occured!')\n\t\tcontinue\n\telse: \n\t\tif num % 2 == 0:\n\t\t\tnums.append(num)\n\t\t\tn += 1\n\t\telse: \n\t\tprint('You\\'ve entered an odd number.',end=\"\")\n\t\tprint('Please re-enter.')\n\t\tcontinue\n\nprint(f'nums: &#123;nums&#125;')\n사용자로부터 숫자 5개를 입력받아 짝수,홀수,실수로 구분해서 각각을 리스트에 저장하는 프로그램을 만들어보자.evenList=[];oddList=[];floatList=[]\nn=1\nwhile n &lt; 6:\n\ttry:\n\tnum = float(input('Input a number: '))\n\texcept:\n\t\tprint('Exception has occured!')\n\t\tprint('Please re-enter a number.')\n\t\tcontinue\n\tif num - int(num) != 0:\n\t\tprint('A float number has been input(ted).')\n\t\tfloatList.append(num)\n\t\tn += 1\n\telse: \n\t\tif num % 2 == 0:\n\t\t\tprint('An even number has been input(ted).')\n\t\t\tevenList.append(int(num))\n\t\t\tn += 1\n\t\telse: \n\t\t\tprint('A odd number has been input(ted).',end=\"\")\n\t\t\toddList.append(int(num))\n\t\t\tn += 1\n\n\n\n\nfinally예외 발생과 상관없이 항상 실행한다.주로 외부자원을 이용해서 작업할 때 사용(외부자원이므로 예외가 발생하던 않던 연결을 끊어줘야 함)\ne.외부 서버라던가.. AWS라던가... \n\ntry: \n\tinputData = input('input number: ')\n\tnumInt = int(inputData)\nexcept: \n\tprint('An exception has occured!')\n\tprint('Input(ted) datum is not a number.')\n\tnumInt = 0\nelse: \n\tif numInt % 2 == 0:\n\t\tprint('input(ted) datum is an even number!')\n\telse: \n\t\tprint('input(ted) datum is a odd number!')\nfinally:\n\tprint(f'input(ted) data: &#123;inputData&#125;')\nQ. 사용자로부터 숫자 5개를 입력받아 짝수,홀수, 실수와 입력한 모든 데이터를 각각 출력하는 프로그램을 만들어 보자.evenList=[]; oddList=[]; floatList=[]\nnumList=[]; \nn = 1\nwhile n &lt; 6:\n\ttry: \n\t\tdatum = float(input('Please input a number: '))\n\texcept:\n\t\tprint('An exception has occured.')\n\t\tprint('Please reenter a number.')\n\t\tcontinue\n\telse:\n\t\tif datum - int(datum) != 0:\n\t\t\tprint('A float number was input(ted).')\n\t\t\tfloatList.append(datum)\n\t\telse: \n\t\t\tif datum % 2 == 0:\n\t\t\t\tprint('An even integer was input(ted).')\n\t\t\t\tevenList.append(int(datum))\n\t\t\telse: \n\t\t\t\tprint('An odd integer was input(ted).')\n\t\t\t\toddList.append(int(datum))\n\t\tn += 1\n\tfinally:\n\t\tnumList.append(datum)\nException classtry: ~ except Exception as e:num1 = int(input('input number1: '))\nnum2 = int(input('input number2: '))\n\ntry: \n\tprint(f'num1 / num2 = &#123;num1 / num2&#125;')\nexcept Exception as e:\n\tprint('ZeroDivision Error would occur.')\n\tprint(f'exception: &#123;e&#125;')\nraise 키워드를 이용하면 예외를 발생시킬 수 있다.def divCalculator(n1,n2):\n\tif n2 != 0:\n\t\tprint(f'&#123;n1&#125;/&#123;n2&#125; = &#123;n1 / n2&#125;')\n\telse:\n\t\traise Exception('It can\\'t be divided by 0.')\n\nnum1 = int(input('Please input a number: '))\nnum2 = int(input('Please input another number: '))\n\ntry:\n\tdivCalculator(num1,num2)\nexcept Exception as e:\n\tprint(f'Exception: &#123;e&#125;')\n사용자가 문자메세지를 보낼 때 10글자 이하면 sms로 발송; 10글자 초과시 mms로 발송하는 프로그램을 예외처리를 이용해서 만들어보자.def sendSMS(msg):\n\tif len(msg) > 10:\n\t\traise Exception('It is overlengthed. It will be sent after being regenerated as MMS.',1) # args[1] == 1\n\telse:\n\t\tprint('An SMS successfully has been sent!')\n\ndef sendMMS(msg):\n\tif len(msg) &lt;= 10:\n\t\traise Exception('It is underlengthed. It will be sent after being regenerated as SMS.',2) # args[1] == 2\n\telse:\n\t\tprint('An MMS successfully has been sent!')\n\nmsg = input('Please input Messages: ')\n\ntry: \n\tsendSMS(msg)\nexcept Exception as e:\n\tprint(f'e: &#123;e.args[0]&#125;')\n\tprint(f'e: &#123;e.args[1]&#125;')\n\tif e.args[1] == 1:\n\t\tsendMMS(msg)\n\telif e.args[1] == 2:\n\tsendSMS(msg)\n사용자 Exception classException 클래스를 직접 상속해서 사용자 예외클래스 직접 만들기class DoNotUseZeroDivisionException(Exception):\n\tdef __init__(self,n):\n\t\tsuper().__init__(f'&#123;n&#125; is an unavailable number.')\n\ndef divCalculator(num1,num2):\n\tif num1 == 0:\n\t\traise DoNotUseZeroDivisionException(num2)\n\telse: \n\t\tprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;num1/num2&#125;')\n\nnum1 = int(input('input number1: '))\nnum2 = int(input('input number2: '))\n\ntry: \n\tdivCalculator(num1,num2)\nexcept DoNotUseZeroDivisionException as e:\n\tprint(e)\n관리자 암호를 입력하고 다음 상태에 따라 예외 처리하는 예외 클래스를 만들어보자.암호 길이가 5 미만인 경우: UnderlengthedPasswordException\n암호 길이가 10 초과인 경우: OverlengthedPasswordException\n암호가 틀린 경우: WrongPasswordException\n\nclass UnderlengthedPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsupper().__init__(f'&#123;str&#125;: 비밀번로 자릿수가 너무 적습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.')\nclass OverlengthedPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsuper().__init__(f'&#123;str&#125;: 비밀번로 자릿수가 너무 많습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.')\nclass WrongPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsuper().__init__(f'&#123;str&#125;: 잘못된 비밀번호 입니다.)\n\npassWord = input('패스워드를 입력하세요: ')\ntry:\n\tif len(adminPw) &lt; 5:\n\t\traise UnderlengthedPasswordException(passWord)\n\telif len(adminPw) > 10:\n\t\traise OverlengthedPasswordException(passWord)\n\telif passWord != 'admin1234'\n\t\traise WrongPasswordException(passWord)\nexcept UnderlengthedPasswordException as e1:\n\tprint e1\nexcept OverlengthedPasswordException as e2:\n\tprint e2\nexcept WrongPasswordException as e3:\n\tprint e3\n\n","slug":"zeroBase-DS-2nd-04","date":"2023-03-09T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"b493b07a83682f778196e53afcd3ee9a","title":"zeroBase_DS 2주차 수요일 스터디노트","content":"2nd WeekWednesday함수란?def addFunc(x,y):\n\treturn x+y\n\nprint(addFunc(100,2))\n내장함수&amp;사용자함수특정 기능을 재사용하기 위해 사용함수 선언과 호출def키워드, 함수명,(),:,def addCal():\n\tn1 = int(input('n1 입력: '))\n\tn2 = int(input('n2 입력: '))\n\tprint(f'n1 + n2 = &#123;n1 + n2&#125;')\n\naddCal()\n함수 내에서 또 다른 함수 호출함수 내에서 또다른 함수 호출 가능def fun1():\n\tprint('fun1 호출됨')\n\tfun2()\n\ndef fun2():\n\tprint('fun2 호출됨')\n\tfun2()\n\ndef fun3():\n\tprint('fun3 호출됨')\n\nfun1()\n# result :fun1 호출됨\n#         fun2 호출됨\n#         fun3 호출됨\n인수와 매개변수함수 호출 시 함수에 데이터를 전달할 수 있다def greet(customer1,customer2): # 매개변수\n\tprint(f'&#123;customer1&#125;,&#123;customer2&#125; 고객님 안녕하세요.')\n\ngreet('Nerdee','NERDY') # 인수\n인수와 매개변수 개수는 일치해야 한다If not, that would be a Type Error\n\n인수가 정해지지 않은 경우는 ‘*‘를 이용한다.def printNumber(*numbers)\n\tfor number in numbers:\n\t\tprint(number, end=\"\")\n\tprint()\n데이터 반환return 키워드를 이용하면 함수 실행 결과를 호출부로 반환할 수 있다.def addCal(n1, n2):\n\tresult = n1 + n2\n\treturn result\n\nreturnValue = addCal(10,20)\nprint(f'returned value: &#123;returnValue&#125;')\n함수가 return을 만나면 실행을 종료한다.def evenORodd(n)\n\tif n == 0:\n\t\treturn '0'\n\telif n % 2 == 0:\n\t\treturn '짝수'\n\telse:\n\t\treturn '홀수'\n\nreturnValue = evenORodd(5)\nprint(f'returned value: &#123;returnValue&#125;')\n지역변수와 전역변수global variable은 함수 안에서 수정 불가 단, global 키워드를 사용하면 가능num_out = 10\ndef printNumbers():\n\tprint('num_out = &#123;&#125;'.format(num_out))\n\tglobal num_out\n\tnum_out = 20\n\tprint(f'num_out: &#123;num_out&#125;')\n\nprintNumbers()\nprint(f'num_out: &#123;num_out&#125;')\n\n# result: num_out = 10\n#         num_out = 20\n#.        num_out = 20\nlocal variable은 함수 안에서만 사용 가능중첩함수내부함수를 함수 밖에서 호출할 수 없다.lambda함수lambda 키워드를 이용하면 함수 선언을 보다 간단하게 할 수 있다.def calculator(n1,n2):\n\treturn n1+n2\n\nreturnValue = calculator(10,20)\nprint(f'returnValue: &#123;returnValue&#125;')\n를\ncalculator = lambda n1,n2: n1 + n2\nreturnValue = calculator(10,20)\nprint(f'returnValue: &#123;returnValue&#125;')\n로 표현 가능\n모듈이미 제작된 기능으로 사용자는 쉽게 사용할 수 있다. 1. 내부 모듈\n    파이썬 설치 시 기본적으로 사용 가능한 모듈\n2. 외부 모듈\n    별도 설치 후 사용할 수 있는 모듈\n3. 사용자 모듈\n    사용자가 직접 만든 모듈\n\nimport pandas as pd\nimport random\n모듈 제작module은 특정 기능을 갖고 있는 .py 파일이다\n모듈 파일def reverseStr(str):\n reversedString = ''\n for c in str:\n\t reversedString = c + reversedString\nreturn reversedString\n실행 파일import reverseStr\n\nuserInputStr = input('문자열 입력: ')\nreversedString = reverseStr.reverseStr(userInputStr)\nprint(f'reversedString: &#123;reversedString&#125;')\n모듈 사용as 키워드를 사용해 모듈을 사용할 때 이름을 단축시킬 수 있다import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\nfrom ~ as 키워드를 사용해 모듈의 특정 기능만 사용할 수 있다from moduleA import * # import all \n\n\n실행(메인)파일01전역변수__name__을 이용한 실행파일 지정__name__에는 모듈 이름이 저장되거나 &#39;__main__&#39;이 저장된다.\n\n    python의 __name__변수에 자기 파일 이름이 아닌 __main__가 저장된 파일은 실행파일(시작점)임.\n실행(메인)파일02전역변수 __name__을 이용한 실행파일 지정단위환산 모듈을 만들고 cm를 mm, inch, m, ft로 변환해보자.# module file\ndef cm2mm(n):\n\treturn round(n*10,3)\ndef cm2inch(n):\n\treturn round(n*0.393,3)\ndef cm2m(n):\n\treturn round(n*0.01,3)\ndef cm2ft(n):\n\treturn round(n*0.032,3)\n\nif __name__ == '__main__':\n\tprint(f'10cm: &#123;cm2mm(10)&#125;)mm')\n\tprint(f'10cm: &#123;cm2inch(10)&#125;)inch')\n\tprint(f'10cm: &#123;cm2m(10)&#125;)m')\n\tprint(f'10cm: &#123;cm2ft(10)&#125;)ft')\n# execution file\nimport unitConversion as uc\n\nif __name__ == '__main__':\n\tinputNumber = int(input('길이(cm) 입력: '))\n\treturnValue = uc.cm2mm(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;mm')\n\treturnValue = uc.cm2inch(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;inch')\n\treturnValue = uc.cm2m(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;m')\n\treturnValue = uc.cm2ft(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;ft')\n\n패키지패키지를 이용하면 관련있는 모듈을 그룹으로 관리할 수 있다.\nsite-packagessite-packages에 있는 모듈은 어디서나 사용할 수 있다.import sys\n\nfor path in sys.path:\n\tprint(path)\n로 \\lib\\site-packages 경로 확인, 이 위치에 모듈이 있으면 어디서나 접근 가능\n\n자주 사용하는 외부 모듈math, random, datetime, …객체지향 프로그래밍객체를 이용한 프로그램으로, 객체는 속성과 기능으로 구성된다. Object &#x3D; Attribute+Function객체는 클래스에서 생성된다.\n코드 재사용, 모듈화에 좋다.class와 객체 생성클래스는 class 키워드와 속성(변수) 그리고 기능(함수)를 이용해서 만든다class Car: # 클래스 선언시 첫문자 big letter\n\tdef __init__(self, color, length): \n\t\tself.color = color # 생성자,속성\n\t\tself.length = length\n\tdef doStop(self): # 기능\n\t\tprint('STOP!!')\n\tdef doStart(self): # 기능\n\t\tprint('START!!')\n\tdef printCarInfo(self):\n\t\tprint(f'self.color: &#123;self.color&#125;')\n\t\tprint(f'self.length: &#123;self.length&#125;')\n\ncar1 = Car('red', 200)\ncar2 = Car('blue', 300)\n객체 속성 변경객체 속성은 변경 가능class NewGenPC:\n\tdef __int__(self,name,cpu,memory,ssd):\n\t\tself.name = name\n\t\tself.cpu = cpu\n\t\tself.memory = memory\n\t\tsself.ssd = ssd\n\t\n\tdef doExcel(self):\n\t\tprint('RUNNING EXCEL!')\n\t\n\tdef doPhotoshop(self):\n\t\tprint('RUN PHOTOSHOP!')\n\t\n\tdef printPCInfo(self):\n\t\tprint(f'self.name: &#123;self.name&#125;')\n\t\tprint(f'self.cpu: &#123;self.cpu&#125;')\n\t\tprint(f'self.memory: &#123;self.memory&#125;')\n\t\tprint(f'self.ssd: &#123;self.ssd&#125;')\n\nmyPC = NewGenPC('myPC','m1','160','2560')\nmyPC.printPCInfo()\n\nmyPC.cpu = 'm2' # fungible\n\n\n","slug":"zeroBase-DS-2nd-03","date":"2023-03-08T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"d77e8212d722abfc13ee54d137599f20","title":"zeroBase_DS 2주차 화요일 스터디노트","content":"2nd WeekTuesday[연습문제] python 개요 및 기본 사용법Q. 설치 순서Install now &amp; Add python to PATH \n\n[연습문제] PyCharm 설치 및 기본 사용법설치[연습문제] 데이터와 변수01Q. 주문확인서 템플릿 만들기name = '홍길동'\nproduct = '야구글러브'\norderNo = 2568956\npaymentMethod = '신용카드'\nproductPrice = '110000'\npaidPrice = '100000'\npoints = '10000'\npaidDate = '2021-08-03 21:50:12'\ninstallment = 6\ninstallmentType = 'interest free'\ncsNum = '02-1234-5678'\n\nprint(name, '고객님의 주문이 접수되었습니다.')\nprint('이하는 해당 주문건에 대한 상세 내역입니다: ')\nprint('-'*50)\nprint('상품명: ',product)\nprint('주문번호: ', orderNo)\nprint('결제방법: ', paymentMethod)\nprint('상품금액: ', productPrice)\nprint('결제금액: ', paidPrice)\nprint('잔여 포인트: ',points,'P')\nprint('결제일시: ',paidDate)\nprint('할부: ', installment,'개월')\nprint('할부유형: ', installmentType)\nprint('문의: ', csNum)\nprint('-'*50)\nprint('저희 사이트를 이용해 주셔서 감사합니다.')\n[연습문제] 데이터와 변수02len()\n\n\n\n\n\n\n\n\n문자 길이를 반환함\nfind()특정 문자열의 위치를 찾아 반환함\n\n[연습문제] 데이터와 변수03Q. 원의 반지름을 입력하면 원의 넓이와 원주를 출력하되, 정수형식, 소숫점1자리 그리고 소숫점 3자리의 형식을 모두 출력하라.pi = 3.14159\nradius = int(input('반지름(cm)을 입력하세요: '))\n\ncircleArea = (radius*radius*pi)\ncircumference = (2*pi*radius)\n\nprint('원의 넓이: %d cm', % circleArea)\nprint('원주: %d cm', % circumference)\nprint('원의 넓이: %.1f cm', % circleArea)\nprint('원주: %.1f cm', % circumference)\nprint('원의 넓이: %.3f cm', % circleArea)\nprint('원주: %.3f cm', % circumference)\n\nQ. 사용자로부터 입력받은 개인정보 포맷문자열로 출력하기(비밀번호, 주민번호 뒷자리는 별표로 처리usrName = input('이름 입력: ')\nusrMail = input('메일 입력: ')\nusrID = input('아이디 입력: ')\nusrPW = input('비밀번호 입력: ')\nfstHalfusrRRNum = input('주민번호 앞자리 입력: ')\nSndHalfusrRRNum =input('주민번호 뒷자리 입력: ')\nusrAddress = input('주소 입력: ')\n\nprint('-'*30*)\nprint(f'이름: &#123;usrName&#125;')\nprint(f'메일: &#123;usrMail&#125;')\nprint(f'아이디: &#123;usrID&#125;')\nprint(f'비밀번호: &#123;('*'*len(usrPW))&#125;',)\nprint(f'주민번호: &#123;fstHalfusrRRNum&#125; - &#123;SndHalfusrRRNum[0]&#125;&#123;('*'*(len(usrPW)-1))&#125;')\nprint(f'주소: &#123;usrAddress&#125;')\nprint('-'*30*)\n[연습문제] 데이터와 변수04isdigit()숫자인지 확인(맞으면 True, 아니면 False)\n\n체중(g)과 신장(cm)을 입력하면 BMI 지수가 출력되는 프로그램을 만들어 보자.bodyWeight = int(input(\"체중(g)을 입력하세요: \"))\nbodyHeight = int(input(\"신장(cm)을 입력하세요: \"))\n\nif bodyWeight.isdigit():\n\tbodyWeight = int(bodyWeight)*0.001\nif bodyHeight.isdigit():\n\tbodyHeight = int(bodyHeight)*0.01\n\nBMI = bodyWeight/ (bodyHeight*bodyHeight)\n\nprint(\"체중: &#123;&#125;\".format(bodyWeight*0.001))\nprint(\"신장: &#123;&#125;\".format(bodyHeight*0.01))\nprint(\"BMI: &#123;&#125;\".format(BMI))\n[연습문제] 데이터와 변수05Q. 키오스크에서 사용하는 언어 선택 프로그램을 만들어보자.selectLanguage = int(input(\"언어를 선택하세요(Choose your language): 1.한국어\\t2.English\"))\nif selectLanguage == '1': # ''해야함\n\tselectMenu = int(input(1.샌드위치\\t2.햄버거\\t3.쥬스\\t4.커피\\t5.아이스크림))\nelif selectLanguage == '2':\n\tselectMenu = int(input(1.Sandwich\\t2.Hamburger\\t3.Juice\\t4.Coffee\\t5.Ice cream))\ndatetime moduleQ. 나의 나이가 100살 되는 해의 연도를 구하는 프로그램을 만들어보자.import datetime\nfrom datetime import date\n\ntoday = date.today()\nthisYear = today.year\n\ncurentAge = int(input(\"당신은 현재 몇 살입니까?: \"))\nyour100thYear = thisYear+(100-currentAge)\nprint(\"당신이 100세가 되는 해는 &#123;&#125;년 입니다.\".format(your100thYear))\n\n\n[연습문제] 연산자01Q. 상품 가격과 지불 금액을 입력하면 거스름 돈을 계산하는 프로그램을 만들어보자. 단, 거스름돈은 지폐와 동전의 개수를 최소로 하고, 1원 단위 절사한다.지폐: 50000원, 10000원, 5000원, 1000원\n동전: 500원, 100원, 10원\n\nproductPrice = int(input(\"상품 가격 입력: \"))\npaidAmount = int(input(\"지불 금액: \"))\nchangeMoney = 0\ndifference = paidAmount - productPrice\n\nreturn50000 = 0\nreturn10000 = 0\nreturn5000 = 0\nreturn1000 = 0\nreturn500 = 0\nreturn100 = 0\nreturn10 = 0\n\nstopLoop = 0\n\nwhile stopLoop == 0 :\n\tif difference > 0 :\n\t\tif difference // 50000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn50000 = (difference // 50000)\n\t\t\tdifference -= 50000*return50000\n\t\tif difference // 10000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10000 = (difference // 10000)\n\t\t\tdifference -= 10000*return10000\n\t\tif difference // 5000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn5000 = (difference // 5000)\n\t\t\tdifference -= 5000*return5000\n\t\tif difference // 1000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn1000 = (difference // 1000)\n\t\t\tdifference -= 1000*return1000\n\t\tif difference // 500 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn500 = (difference // 500)\n\t\t\tdifference -= 500*return500\n\t\tif difference // 100 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn100 = (difference // 100)\n\t\t\tdifference -= 100*return100\n\t\tif difference // 10 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10 = (difference // 10)\n\t\t\tdifference -= 10*return10\n\t\tprint(\"-\"*30)\n\t\tprint(\"changes: \")\n\t\tprint(\"50,000원 &#123;&#125;장\".format(return50000))\n\t\tprint(\"10,000원 &#123;&#125;장\".format(return10000))\n\t\tprint(\"5,000원 &#123;&#125;장\".format(return5000))\n\t\tprint(\"1,000원 &#123;&#125;장\".format(return1000))\n\t\tprint(\"500원 &#123;&#125;개\".format(return500))\n\t\tprint(\"100원 &#123;&#125;개\".format(return100))\n\t\tprint(\"10원 &#123;&#125;개\".format(return10))\n\t\tprint(\"-\"*30)\n\t\tstopLoop += 1\n\telif difference == 0 :\n\t\tprint(\"There is no change money.\")\n\t\tstopLoop += 1\n\telif difference &lt; 0 :\n\t\textraMoney = int(input(\"You've paid less. Please pay sufficient money: \"))\n\t\tpaidAmount += extraMoney\n\n\n![[Pasted image 20230307231137.png]]\n[연습문제] 연산자02Q. 국영수 점수 입력 후 총점,평균,최고점수 과목, 최저점수 과목, 그리고 최고 점수와 최저 점수의 차이를 각각 출력해보자max(),min()korScore = int(input('국어 점수 입력: '))\nengScore = int(input('영어 점수 입력: '))\nmthScore = int(input('수학 점수 입력: '))\n\ntotalScre = korScore + engScore + mthScore\navgScre = totalScre / 3\n\nmaxScore = max(korScore,engScore,mthScore)\nminScore = min(korScore,engScore,mthScore)\ngap = maxScore - minScore\n\nprint(\"-\"*30*)\n\nif maxScore == korScore:\n\tif minScore == engScore:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,engScore,gap))\n\telse:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,mthScore,gap))\nelif maxScore == engScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,korScore,gap))\n\telse: \n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,mthScore,gap))\nelif maxScore == mthScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,korScore,gap))\n\telse :\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,engScore,gap))\n\nprint(\"-\"*30*)\n[연습문제] 연산자03시,분,초를 입력하면 초로 환산하는 프로그램을 만들어보자.hour = int(input('시간 입력: '))\nminute = int(input('분 입력: '))\nsecond = int(input('초 입력: '))\n\nprint('&#123;&#125;초'.format(format(hour *60 *60 +min *60+second,',')))\n\nformat(money,’,’)금액, 이율, 거치기간을 입력하면 복리계산하는 복리계산기 프로그램을 만들어보자amount = int(input('금액 입력: '))\ninterestRate = int(input('이율 입력: '))\nperiod = int(input('기간 입력: '))\n\ntargetMoney = money\n\nfor i in range(term):\n\ttargetMoney += (targetMoney * rate * 0.01)\n\nformatedTargetMoney = format(int(targetMonet,','))\n\nprint('-'*30)\nprint('이율: &#123;&#125;'.format(rate))\nprint('원금: &#123;&#125;'.format(format(money,',')))\nprint('&#123;&#125;년 후 금액: &#123;&#125;원'.format(term,formatedTargetMoney))\nprint('-'*30)\n[연습문제] 연산자04groundTemp = 29\ngap = 60\ndecreasedTemp = 0.8\n\naltitude = int(input('고도 입력: '))\n\ntargetTemp = groundTemp - (altitude // gap*0.8)\n\nif altitude % gap != 0:\n\ttargetTemp -= decreasedTemp\n\nprint('지면 온도: &#123;&#125;'.format(baseTemp))\nprint('고도 &#123;&#125;m의 기온: &#123;&#125;'.format(altitude,targetTemp))\n[연습문제] 연산자05Q. 백신접종대상자 판별 프로그램 만들기19세 이하 또는 65세 이상이면 출생연도 끝자리에 따라 접종, 그렇지 않다면 하반기 일정 확인\n\ninputAge = int(input('나이 입력: '))\n\nif inputAge &lt;= 19 or inputAge >= 65: \n\t\tendNum = int(input('출생 연도 끝자리 입력: '))\n\tif endNum == 1 or endNum == 6:\n\t\tprint('월요일 접종 가능')\n\tif endNum == 2 or endNum == 7:\n\t\tprint('화요일 접종 가능')\n\tif endNum == 3 or endNum == 8:\n\t\tprint('수요일 접종 가능')\n\tif endNum == 4 or endNum == 9:\n\t\tprint('목요일 접종 가능')\n\tif endNum == 5 or endNum == 0:\n\t\tprint('금요일 접종 가능')\nelse : \n\tprint('하반기 일정을 확인하세요.')\nQ. 길이(mm)를 입력하면 inch로 환산하는 프로그램을 만들어보자. (1mm &#x3D; 0.039inch)byInch = 0.039\nlengthMM = int(input('길이(mm) 입력: '))\nlength2Inch = lengthMM * byInch\n\nprint('&#123;&#125;mm -> &#123;&#125;inch'.format(lengthMM,lengthInch))\n[연습문제] 조건문01과속위반 경고 프로그램시속 50km 이하 -&gt; 안전속도 준수!!\n시속 50km 초과 -&gt; 안전속도 위반!! 과태료 50,000원 부과 대상입니다.\n\ncarSpeed = int(input('속도 입력: '))\nlimitSpeed = 50\n\nif carSpeed > 50:\n\tprint('안전속도 위반!! 과태료 50,000원 부과 대상입니다.')\nelse:\n\tprint('안전속도 준수!!')\n[연습문제] 조건문02국영수,과학,한국사 점수를 입력하면 총점을 비롯한 각종 데이터가 출력되는 프로그램을 만들어보자.- 과목별 점수를 입력하면 총점, 평균, 편차를 출력\n- 과목별 평균 : \n    국어:85, 영어:82, 수학:89, 과학:75, 한국사:94\n- 각종 편차 데이터는 막대그래프로 시각화한다.\n\nkorAvg = 85; EngAvg = 82; mthAvg = 89\nsciAvg = 75; kHstAvg = 94\ntotalAvg = int(0.2 * (korAvg+EngAvg+mthAvg+sciAvg+kHstAvg))\n\nkorScore = int(input('국어 성적 입력: '))\nengScore = int(input('영어 성적 입력: '))\nmthScore = int(input('수학 성적 입력: '))\nsciScore = int(input('과학 성적 입력: '))\nkHstScore = int(input('한국사 성적 입력: '))\ntotalScore = korScore+engScore+mthScore+sciScore+kHstScore\ninputAvg = int(0.2 * totalScore)\n\nkorGap = korScore - korAvg\nengGap = engScore - engAvg\nmthGap = mthScore - mthAvg\nsciGap = sciScore - sciAvg\nkHstGap = kHstcore - kHstAvg\ntotalGap = (korScore+engScore+mthScore+sciScore+kHstScore)-(korAvg+EngAvg+mthAvg+sciAvg+kHstAvg)\navgGap = inputAvg - totalAvg\n\nprint('-'*30) \nprint('총점: &#123;&#125;(&#123;&#125;),평균: &#123;&#125;(&#123;&#125;)'.format(totalScore,totalGap,avgScore,avgGap))\nprint('국어: &#123;&#125;(&#123;&#125;),영어: &#123;&#125;(&#123;&#125;),수학: &#123;&#125;(&#123;&#125;),과학: &#123;&#125;(&#123;&#125;),국사: &#123;&#125;(&#123;&#125;)'.format(korScore,korGap,engScore,engGap,mthScore,mthGap,sciScore,SciGap,kHstScore,kHstGap))\nprint('-'*30) \nstr = '+' if korGap > 0 else '-'\nprint('국어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(korGap),korGap))\nprint('영어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(engGap),engGap))\nprint('수학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(mthGap),mthGap))\nprint('과학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(sciGap),sciGap))\nprint('한국사 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(kHstGap),kHstGap))\nprint('총 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(totalGap),totalGap))\nprint('평균 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(avgGap),avgGap))\n\n\n[연습문제] 조건문03난수를 이용해 가위,바위,보 게임을 만들어보자import random\n\ncomputerNum = random(1,3)\nuserNum = int(input(\"1.가위, 2.바위, 3.보 중에서 하나의 숫자를 골라 입력하세요: \"))\n\nif (computerNum == 1 and userNum == 2) or (computerNum == 2 and userNum == 3) or (computerNum == 3 and userNum == 1):\n\tprint(\"computer: lose, user: win\")\nelif computerNum == userNum: \n\tprint(\"A dead heat.\")\nelse: \n\tprint(\"computer: win, user: lose\")\n[연습문제] 조건문04아래 요금표를 참고해서 상수도 요금 계산기를 만들어보자.\n\n\n업종별\n사용량\n단가(원)\n\n\n\n가정용\n-\n540\n\n\n대중탕용\n50이하\n820\n\n\n대중탕용\n50초과 300이하\n1,920\n\n\n대중탕용\n300 초과\n2,400\n\n\n공업용\n500이하\n240\n\n\n공업용\n500초과\n470\n\n\npurposeClassification = int(input(\"업종 선택: 1.가정용  2.대중탕용  3.공업용\"))\nusedWater = int(input('사용량 입력: '))\nunitPrice = 0\n\nif part == 1:\n\tunitPrice = 540\nelif part == 2:\n\tif usedWater &lt;= 50 :\n\t\tunitPrice = 820\n\telif usedWater > 50 or usedWater &lt;= 300 :\n\t\tunitPrice = 1920\n\telif usedWater > 300:\n\t\tunitPrice = 2400\nelif part ==3:\n\tif usedWater &lt;= 500 :\n\t\tunitPrice = 240\n\telse: \n\t\tunitPrice = 470\n\nprint('='*30)\nprint(\"상수도 요금표\")\nprint('-'*30)\nprint('사용량   :  요금   ')\nprint('&#123;&#125;    :  &#123;&#125;원'.format(usedWater,(unitPrice*usedWater)))\nprint('='*30)\n\n[연습문제] 조건문05Q.미세먼지 비상저감조치로 차량 운행제한 프로그램을 다음 내용에 맞게 만들어 보자.- 미세먼지 측정 수치가 150 이하면 차량5부제 실시\n- 미세먼지 측정 수치가 150을 초과하면 차량2부제 실시\n- 차량2부제를 실시하더라도 영업용차량은 5부제 실시\n- 미세먼지 수치, 차량 종류, 차량 번호를 입력하면 운행 가능 여부 출력\n\nimport datetime\n\ntoday = datetime.datetime.today()\ntheDay = today.weekday()\naDay = today.day\n# weekday(): 요일반환 (0:월,1:화,2:수,...,6:일)\n\nfineDust = int(input(\"현재 미세먼지 수치를 입력하세요: \"))\ncarCartegoty = int(input(\"당신의 차량은 어느 차량 인가요? 1.영업용 차량 2.개인용 차량\"))\ncarNum = int(input(\"차량 번호를 입력해주세요: \"))\n\nif fineDust &lt;= 150: \n\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\nelse: \n\tif carCartegoty == 1:\n\t\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telse: \n\t\tprint(\"차량 번호 &#123;&#125;, 차량 2부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] % 2 == 0:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\telse:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\n[연습문제] 조건문06PC에서 난수가 발생하면 사용자가 난수를 맞추는 게임1. PC가 난수[1,1000]을 발생시키면 사용자가 해당 범위에서 발생된 난수로 추측되는 정수를 입력한다.\n2. 사용자가 난수를 맞추면 게임은 종료된다.\n3. 못맞출시 생성된 난수와 사용자의 추측값의 크기를 비교해 알려주고, 사용자에게 기회를 다시 준다. \n4. 마지막 회차에 사용자의 시도횟수를 출력해준다.\n\nimport random\n\ntheAnswer = int(random(1,1000))\nanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\ntrialCount = 1\n\nwhile theAnswer != anAnswer:\n\tprint(\"아쉬워요, 다시 한 번 해보세요.\")\n\tanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\n\ttrialCount += 1\n\tif theAnswer > anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 작아요.\")\n\telif theAnswer &lt; anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 커요.\")\n\telif theAnswer == anAnswer:\n\t\tbreak\n\nprint(\"네, 정답은 &#123;&#125;었습니다. 총 시도 횟수는 &#123;&#125;회 입니다.\".format(theAnswer),trialCount)\n실내온도를 입력하면 스마트에어컨 상태가 자동으로 설정되는 프로그램을 만들어 보자.\n\n\n실내온도\n18도 이하\n18도 초과 22도 이하\n22도 초과 24도 이하\n24도 초과 26도 이하\n26도 초과 28도 이하\n28도 초과\n\n\n\n에어컨 상태\noff\n매우 약하게\n약하게\n중간\n강하게\n매우 강하게\n\n\nindoorTemp = int(input(\"실내온도 입력: \"))\nairConditioner = \"\"\n\nif indoorTemp &lt;= 18:\n\tairConditioner = \"나중에\"\nelif indoorTemp > 18 or indoorTemp &lt;= 22 :\n\tairConditioner = \"매우 약하게\"\nelif indoorTemp > 22 or indoorTemp &lt;= 24 :\n\tairConditioner = \"약하게\"\nelif indoorTemp > 24 or indoorTemp &lt;= 26 :\n\tairConditioner = \"중간\"\nelif indoorTemp > 26 or indoorTemp &lt;= 28 :\n\tairConditioner = \"강하게\"\nelif indoorTemp > 28 :\n\tairConditioner = \"매우 강하게\"\n\nprint(\"에어컨을 &#123;&#125; 작동합니다. \".format(airConditioner))\n[연습문제] 반복문01[1,100]구간 내의 정수 중 십의 자리의 일의 자리에 대해 각각 홀&#x2F;짝수를 구분하는 프로그램을 만들어보자.for i in range(1,101):\n\ttens = i // 10\n\tunits = i % 10\n\t\n\tif tens % 2 == 0:\n\t\tif tens == 0:\n\t\t\tpass\n\t\telse:\n\t\t\ttens = '짝수'\n\telse:\n\t\ttens = '홀수'\n\t\n\tif units % 2 == 0:\n\t\tif units == 0:\n\t\t\tpass\n\t\telse:\n\t\t\tunits = '짝수'\n\telse:\n\t\tunits = '홀수'\n\tprint(\"&#123;&#125;의 십의 자리:&#123;&#125;, 일의 자리:&#123;&#125;\".format(i,tens,units))\n[연습문제] 반복문02Q. 1부터 사용자가 입력한 정수까지의 합, 홀수의 합, 짝수의 합 그리고 팩토리얼을 출력하는 프로그램을 만들어보자.inputNum = int(input(\"정수 입력: \"))\nrememberInputNum = inputNum\nbuffer = 0\nsummation = 0\noddSummation = 0\nevenSummation = 0\nfactorial = 1\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tsummation += buffer\nprint(\"합 결과: &#123;&#125;\".format(summation))\ninputNum = rememberInputNum\n\nif inputNum % 2 == 0:\n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\nelse: \n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tfactorial *= buffer\nprint(\"팩토리얼 결과: &#123;&#125;\".format(format(factorial,',')))\n\n[연습문제] 반복문03Q. 별을 찍으시오.\nblankNum = 0\nstarNum = 0\nrowNum = int(input(\"행의 개수 입력 :\"))\n# columnNum = int(input(\"행의 개수 입력 :\"))\n\n# *\n# **\n# ***\n# ****\n# *****\nfor i in rowNum:\n\tfor j in rowNum:\n\t\tprint('*',end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\n\n# 2번 \n#      *\n#     **\n#    ***\n#   ****\n#  *****\nfor i in rowNum:\n\tprint(' '*(rowNum-i+1),end='')\n\tprint(\"*\",end=\"\"*i)\n\tprint()\n\ti += 1\n# for i in rowNum:\n#\tfor j in i:\n#\t\tfor k in columnNum:\n#\t\t\tprint(\" \",end=\"\")\n#\t\t\tk += 1\n#\t\tprint(\"*\",end=\"\")\n#\t\tj += 1\n#\tprint(\"\")\n#\ti += 1\n# 도 가능\n\n# *****\n# ****\n# ***\n# **\n# *\nfor i in rowNum:\n\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\n#  *****\n#   ****\n#    ***\n#     **\n#      *\nfor i in rowNum:\n\tprint(\" \"*i,end=\"\")\n\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\n# *\n# **\n# ***\n# ****\n# *****\n# ****\n# ***\n# **\n# *\nfor i in rowNum:\n\tprint('*'*i,end='')\n\tprint()\n\ti += 1\nfor i in rowNum:\n\tprint('*'*(rowNum-i),end='')\n\tprint()\n\ti += 1\n\n#  *\n#   *\n#    *\n#     *\n#      *\nfor i in rowNum:\n\tprint(' '*i,end='')\n\tprint(\"*\")\n\ti += 1\n\n#      *\n#     *\n#    *\n#   *\n#  *\n#for i in rowNum:\n#\tfor j in columnNum:\n#\t\tprint(\" \"*(columnNum+1-i))\n#\tprint(\"\")\n#\ti += 1 \nfor i in rowNum:\n\tprint(' '*(rowNum-i+1),end='')\n\tprint('*',end='')\n\ti += 1\n\tprint()\n\n#     *\n#    ***\n#   *****\n#  *******\n# *********\n#  *******\n#   ***** \n#    ***  \n#     *\n#for i in rowNum:\n#\tfor j in columnNum: \n#\t\tif columnNum % 2 == 0:\n#\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n#\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n#\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n#\t\telse:\n#\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n#\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n#\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n#\t\tj += 1\n#\tprint(\"\")\n#\ti += 1\nfor i in rowNum:\n\tprint(' '*(rowNum-i),end='')\n\tprint('*'*(2i-1))\nsNum = rowNum-1\nfor i in sNum:\n\tprint(' '*i,end='')\n\tprint('*'*(2*sNum-(2*i-1)),end='')\n\tprint()\n\ti += 1\n[연습문제] 반복문04집 앞 버스 정류장에서 학교까지 가는 버스 A,B,C의 운행정보가 다음과 같을 때, 2대 이상의 버스가 정차하는 시간대를 출력해보자.- 버스 A,B 운행 정보\n    - 06시 첫 차, 23시 운행 종료\n    - 버스A : 15분 간격 운행\n    - 버스B : 13분 간격 운행\n- 버스 C 운행 정보\n    - 06시 20분 첫 차, 22시 운행 종료\n    - 버스C : 8분 간격 운행\n\nbusAinterterm = 15\nbusBinterterm = 13\nbusCinterterm = 8\noperatingMinutes = 60*17 \n# operating term= 06:00 - 23:00\nfor i in range(operatingMinutes+1):\n\tif i &lt; 20 or i > (operatingMinutes - 60):\n\t\tif i % busA == 0 and i % busB == 0:\n\t\tprint('Bus A and bus B have co-arrived.',end='')\n\t\thour = 6 + i // 60\n\t\tmin = i % 60\n\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\telse: \n\t\tif i % busA == 0 and i % busB == 0:\n\t\t\tprint('Bus A and bus B have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\t\telif i % busA == 0 and i % busC == 0:\n\t\t\tprint('Bus A and bus C have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\t\telif i % busB == 0 and i % busC == 0:\n\t\t\tprint('Bus B and bus C have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\n[연습문제] 반복문05톱니가 각각 n1개와 n2개의 톱니바퀴가 서로 맞물려 회전할 때, 회전을 시작한 후 처음 맞물린 톱니가 최초로 만나게 될 때까지의 톱니의 수와 각각의 바퀴 회전 수를 출력해보자. (단,n2&gt;n1)try: \n\tsawtoothNum1 = int(input('톱니A 톱니수 입력: '))\n\tsawtoothNum2 = int(input('톱니B 톱니수 입력: '))\nexcept: \n\tprint('0 이상의 숫자를 입력해 주세요.')\n\tcontinue\nelse: \n\tfor leastCommonMultiple in range(max(sawtoothNum1,sawtoothNum2),(sawtoothNum1*sawtoothNum2)+1):\n\t\tif i % sawtoothNum1 == 0 and i % sawtoothNum2 == 0:\n\t\tprint('회전을 시작한 후 처음 맞물린 톱니가 최초로 만나게 될 때까지의 톱니의 수'.format(leastCommonMultiple))\n\t\n\tprint('처음 만날 때의 톱니A 회전 수: &#123;&#125;'.format(leastCommonMultiple/sawtoothNum1))\n\tprint('처음 만날 때의 톱니B 회전 수: &#123;&#125;'.format(leastCommonMultiple/sawtoothNum2))\n[연습문제] 반복문06윤년계산기윤년 조건\n- 연도가 4로 나누어떨어지고 100으로 나누어떨어지지 않으면 윤년이다.\n- 또는 연도가 400으로 나누어떨어지면 윤년이다.\n\ntry: \n\tinputYear = int(input(\"연도 입력: \"))\nexcept: \n\tprint('숫자만 입력해 주세요.')\nelse: \n\tif (inputYear % 4 == 0 and inputYear % 100 != 0) or (inputYear % 400 == 0):\n\t\tprint('&#123;&#125;년: 윤년'.format(inputYear))\n\telse: \n\t\tprint('&#123;&#125;년: 평년'.format(inputYear))\n\n","slug":"zeroBase-DS-2nd-02","date":"2023-03-07T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"571bcce27e1df48af81c49c97f66bfd9","title":"zeroBase_DS 2주차 월요일 스터디노트","content":"2nd WeekMonday조건식num1 = 10\nnum2 = 30\n\nnumResult = True if num1 > num2 else False\nprint('num1 > num2 : &#123;&#125;'.format(numResult))\n\nsnowfallLimit = 30\nsnowfall = int(input('강설량 입력(mm): '))\n\nprint('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 발령')) if snowfall >= snowfallLimit else \\print('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 미발령'))\nif문if 10 > 5\n\tprint('10 is greater than 5.')\n\tprint('another command?')\nprint(Conditional statement just ended.)\t\n양자택일 조건문(if~else문)passScore = 60\n\nmyScore = int(input(\"점수 입력: \"))\nif myScore >= passScore:\n\tprint('You\\'re passed.')\nelse:\n\tprint('You have to listen to this class again.')\n\n# keyword 'pass'\nlength = int(input('input bed length(cm): '))\n\nif length > 200:\n\tpass\nelse: \n\tprint('You must have bought single-sized bed!')\n\nif~else 문과 조건식조건식 결과에 따른 실행만 하는 경우# 조건식 결과에 따른 실행만 하는 경우\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('points available') if userPoints >= minAblePoints else print('points unavailable.')\n조건식 결과를 변수에 할당하는 경우# 조건식 결과를 변수에 할당하는 경우\nresult = '가능' if userPoints >= minAblePoints else '불가능'\nprint('포인트 사용 가능 여부: &#123;&#125;'.format(result))\n\n모든 조건식(삼항연산자)은 if~else문으로 변경할 수 있다minAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('Your points available') if userPoints >= minAblePoints else print('Your points unavailable.')\n&#x3D;\nminAblePoints = 1000\nresult = 'available' if userPoints >= minAblePoints else 'unavilable'\nprint('Your points are &#123;&#125; now.'.format(result))\n&#x3D;\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nif userPoints >= minAblePoints:\n\tprint('Your points available')\nelse: \n\tprint('Your points unavailable.')\n단, 모든 if~else문을 조건식(삼항연산자)으로 변경할 수 있는 것은 아니다.minAblePoints = 1000\n\nif userPoints >= minAblePoints:\n\tresult = 'usable'\nelse:\n\tresult = 'unusable'\n\tlackedPoint = minAblePoints - userPoints\n\tprint('It lacks &#123;&#125; points now.'.format(lackedPoints))\nprint('Your points are &#123;&#125; now.'.format(result))\n다자택일 조건문(if~elif문)examScore = int(input('Enter test score: '))\ngrade = ''\nif examScore >= 90:\n\tgrade = 'A'\nelif examScore >= 80:\n\tgrade = 'B'\nelif examScore >= 70:\n\tgrade = 'C'\nelif examScore >= 60:\n\tgrade = 'D'\nelse: \n\tgrade = 'F'\nprint('Your input(ted)test score is &#123;&#125; and corresponding grade is &#123;&#125;.'.format(examScore, grade))\n다자택일 조건문 사용 시 주의할 점조건식 순서가 중요하다Q. 자동차 배기량에 따라 세금을 부과할 때, 다음 표에 따라 세금을 출력하는 프로그램을 만들어 보자.\n\n\n배기량\n세금(원)\n\n\n\n5000cc 이상\n600,000\n\n\n5000cc미만 4000cc 이상\n500,000\n\n\n4000cc미만 3000cc 이상\n400,000\n\n\n3000cc미만 2000cc 이상\n300,000\n\n\n2000cc미만 1000cc 이상\n200,000\n\n\n1000cc 미만\n100,000\n\n\ndisplacement = int(input('Please input your car displacement: '))\n\nif displacement &lt; 1000:\n\tprint('세금: 100,000원')\nelif displacement &lt; 2000 and displacement >= 1000:\n\tprint('세금: 200,000원')\nelif displacement &lt; 3000 and displacement >= 2000:\n\tprint('세금: 300,000원')\nelif displacement &lt; 4000 and displacement >= 3000:\n\tprint('세금: 400,000원')\nelif displacement &lt; 5000 and displacement >= 4000:\n\tprint('세금: 500,000원')\nelif displacement >= 5000:\n\tprint('세금: 600,000원')\n중첩 조건문Q. 출퇴근 시 이용하는 교통수단에 따라 세금을 감면해 주는 정책을 만드려 한다. 다음내용에 맞게 프로그램을 만들어 보자:\n\n\n\n\n\n\n\n\n\n출퇴근 대상 여부 확인\n출퇴근 대상이면\n도보,자전거 -&gt; 세금 감면 5%\n버스,지하철 -&gt; 세금 감면 3%\n자가용 -&gt; 세금 추가 1%\n\n\n출퇴근 대상이 아니면 세금 변동 없음\n\nifCommute = chr(input('If you commute, please enter \\'Y\\', if not, then please enter \\'N\\'.'))\n\nif ifCommute == Y:\n\tprint('Please select your transportaion: ')\n\ttrans = int(input('1. by walk, by bike; 2. by bus, by subway; 3. by own automobile'))\n\tif trans == 1:\n\t\tprint('5% tax reduction')\n\telif trans == 2:\n\t\tprint('3% tax reduction')\n\telif trans == 3:\n\t\tprint('1% additional tax')\n\t\nelif ifCommute == N:\n\tprint('taxation unchanged')\nelse:\n\tprint('You\\'ve entered wrong character. Please enter again.')\n반복문players = ['박찬호','박세리','박지성','김연경','손흥민']\nfor player in players:\n\tprint('&#123;&#125;선수에게 메일 발송!'.format(player))\n횟수에 의한 반복for i in range(100):\n\tprint('i -> &#123;&#125;'.format(i))\n조건에 의한 반복num = 0\nwhile (num &lt; 10)\n\tprint('num -> &#123;&#125;'.format(num))\n\tnum += 1\n횟수에 의한 반복(for문)print(‘BalaBala ‘,end&#x3D;’’)for i in range(5):\n\tprint(i)\n# result : 0,1,2,3,4\nfor i in range(10):\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(7,i,(7*i)))\nfor h in range(10):\n\tprint('Hi',end='')\n\tprint(' loop statement')\n# result : Hi loop statement\n반복 범위 설정(range())for i in range(1, 11, 1)\nfor j in range(0, 10, 2)\nfor k in range(5, 10, 1)\n\nstartNum = int(input('시작 숫자 입력: '))\nendNum = int(input('마지막 숫자 입력: '))\nfor i in range(startNum,(endNum+1))\n조건에 의한 반복(while문)endNum = 10\nn = 0\n\nwhile n &lt;= endNum:\n\tprint(n)\n\tn+=1\n\ngugudanNum = int(input('희망 구구단 입력: '))\nwhile n &lt; 10:\n\tresult = gugudanNum * n\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(gugudanNum, n, result))\n\tn += 1\nfor문 !&#x3D; while 문횟수에 의한 반복은 for문이 while문보다 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{10}n$$\nsum = 0\nfor i in range(11)\n\tsum += i\nprint('sum: &#123;&#125;'.format(sum))\nsum = 0\ni = 1\nwhile i &lt; 11:\n\tsum += i\n\ti += 1\nprint('sum: &#123;&#125;'.format(sum))\n조건에 의한 반복은 while문이 더 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{k}7\\times n&gt;50,\\min k&#x3D;?$$\nsum = 0\nmaxInt = 0\nfor i in range(1,101):\n\tif i % 7 == 0 and sum &lt;= 50:\n\t\tsum += i\n\t\tmaxInt = i\n\tprint('i: &#123;&#125;'.format(i))\nprint('7의 배수의 합이 50 이상인 최초의 정수: &#123;&#125;.format(maxInt)')\nsum = 0\nmaxInt = 0\nn = 1\nwhile n &lt;= 100 and sum &lt;= 50\n\tn += 1\n\tif n 7 == 0:\n\t\tsum += n\n\t\tmaxInt = n\n\tprint('n : &#123;&#125;'.format(n))\nprint('7의 배수의 합이 50 이상인 최초의 정수: &#123;&#125;.format(maxInt)')\nQ. 자동차 바퀴가 한 번 구를 때마다 0.15mm씩 마모된다고 한다. 현재 바퀴 두께가 30mm이고, 최소 운행 가능 바퀴 두께가 20mm라고 할 때, 앞으로 구를 수 있는 횟수는?rotationCount = 0\ncurrentWheelThickness = 30\nminWheelThickness = 20\n\nwhile currentWheelThickness > minWheelThickness:\n\tcurrentWheelThickness -= 0.15\n\trotationCount += 1\nprint(\"Runable counts: &#123;&#125;\".format(rotationCount))\n무한 루프flag = True\nnum = 0\nsum = 0\n\nwhile flag:\n\tnum += 1\n\tsum += num\n\tprint('&#123;&#125;까지의 합: &#123;&#125;'.format(num,sum))\n\tif sum >= 1000:\n\t\tflag = False\nQ. 하루 병원 내방 환자가 50-100명일 때, 누적환자수가 처음으로 10000명이 넘는 날은 몇 번째 날인가?import random\n\nsum = 0\ndate = 1\nflag = True\n\nwhile flag :\n\tpatientCount = random.randint(50, 100)\n\tsum += patientCount\n\tdate += 1\nif sum >= 10000:\n\tflag = False\n\tprint('Date : &#123;&#125;th, today\\'s patient number : &#123;&#125;, accumulated patients number : &#123;&#125;'.format(date, patientCount, sum))\n반복문 제어 (continue)continuefor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\nelse반복문이 종료된 후 실행\n\ncount = 0\nfor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\n\tcount += 1\nelse : \n\tprint('99까지의 정수 중 7의 배수는 &#123;&#125;개입니다.'.format(count))\nQ. 100이하 3과 7의 최소공배수와 공배수들을 출력하라.minLeastCommonMultiple = 0\n\nfor i in range(1,101):\n\tif i % 3 != 0 or i % 7 != 0\n\t\tcontinue\n\tprint('공배수: &#123;&#125;'.format(i))\n\tif minLeastCommonMultiple == 0:\n\t\tminLeastCommonMultiple = i\nelse: \n\tprint('최소 공배수: &#123;&#125;'.format(minLeastCommonMultiple))\n반복문 제어 (break)breakQ. [1,100]의 정수를 더할 때, 합계가 100이 넘는 최초의 정수 찾기sum = 0\nsearchNum = 0\nfor i in range(100):\n\tsum += i\n\tif sum > 100:\n\t\tsearchNum = i\n\t\tbreak\nprint('serched number is &#123;&#125;'.format(searchNum))\nQ. 10!을 계산하는 과정에서 결과값이 50 초과일 때의 숫자?fctResult = 1\nnum = 0\nfor i in range(10):\n\tfctResult = (10 - i) * fctResult\n\tif fctResult > 50:\n\tnum = (10 - i)\n\tbreak\nprint('num: &#123;&#125;,result: &#123;&#125;'.format(num, fctResult))\n중첩 반복문for i in range(1,10):\n\tfor j in range(i):\n\t\tprint(\"*\", end=\"\")\n\tprint()\n# result : \n# *\n# **\n# ***\n# ...\n# *********\n\nfor i in range(1,10)\n\tfor j in range(2,10)\n\t\tresult = j * i\n\t\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(j,i,result), end = \"\")\n\n\n","slug":"zeroBase-DS-2nd-01","date":"2023-03-06T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2720c7e4854f5e3338f27ce5147d9b8f","title":"zeroBase_DS 1주차","content":"1st Week개발환경세팅 완료, 오랜만에 하려니까 조금 어색하다. \n앞으로의 계획본인 에타 시간표, 곧 vim 단축키도 익숙해지길 바람\n데이터 스쿨에 참여하는 나의 다짐사실 다음 학기나 내년에 동대  Natural Language Processing (NLP) Lab 또는 Inglab 연구실 학부 인턴을 해보고 싶은데, 인공지능 관련 논문 쓰는 남자친구가 커리큘럼 보고 저 정도는 손톱만큼 밖에 안하는거라 해서 함수 별로 무한대로 가는 속도(지&gt;팩&gt;다&gt;삼&gt;로)와 포아송 분포 그리고 선형대수도 까먹고 있었고 공수와 해석학도 못해본 저는 보여지는 서류라도 열심히 하는 수 밖에 없겠구나… 싶어서 이번에 들은 BDA 학회든 학점관리든 일단 힘내보려 합니다. 아자아자!✨\n1주차 학습 내용 요약 정리학습 개요 및 방법파이썬 소개 및 설치\n\n\n\n\n\n\n\n\n\n무한정수 처리 가능\n문법구조 쉬움\n모듈 개발 많이 됨\n\n프로그램 만들어보기\n\n\n\n\n\n\n\n\n\n프로그램 실행 과정PyCharm 설치\n\n\n\n\n\n\n\n\n죄송하지만 이 블로그에선 다른 언어도 같이 개발할 수 있는 nvim으로 진행합니다. \n데이터와 메모리 그리고 데이터 출력변수\n\n\n\n\n\n\n\n\nparameter는 데이터가 할당된 메모리 공간\n변수를 사용하는 이유변수명은 역시 카멜# start with small letters lest we have class confusion later.\nmyAddress = \"서울시 종로구\"\nprint(myAddress)\nhow2NameIt = 'carmel-named variable'\nhow_2_name_it = 'snake-named variable'\n# 예약어 변수명 사용 금지!\n# 'False','None','True','__peg_parser__','and','as','assert','async','await','break','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','in','is','lambda','nonlocal','not','or','pass','raise','return','try','while','with','yield'\n# _ 제외 특수문자 변수명에 사용 금지(공백문자 포함)\n# do not start with a number.\n자료형dataType = '효율적인 메모리 사용을 위해 데이터를 \\n정수형,실수형,문자(열)형,논리형으로 구분한 것'\nnum = 10  #integer variable\n# 정수는 메모리가 허용하는 데까지 사용 가능\npi = 3.14 # float variable\n# 실수는 약 17-18th 소숫점에서 데이터 손실 발생\ngreeting = '반가워요!' # string variable\ntestResult = True # boolean variable\nprint(type(greeting))\n# result : &lt;class 'str'>\nprint(type(num))\n# result : &lt;class 'int'>\n자료형 변환(문자)iNum = 10\nfNum = 3.14\nbNum = True\nprint(type(iNum))\n# result : &lt;class 'int'>\nprint(type(fNum))\n# result : &lt;class 'float'>\nprint(type(bNum))\n# result : &lt;class 'bool'>\niNum = str(iNum)\nprint(type(iNum))\n# result : &lt;class 'str'>\nbNum = str(bNum)\nprint(type(bNum))\n# result : &lt;class 'str'>\n\n자료형 변환(숫자)var = False\nprint(type(var))\n# result : &lt;class 'boolean'>\nvar = int(var)\nprint(var)\n# result : 0\nprint(type(var))\n# result : &lt;class 'int'>\n\nvar1 = True\nprint(type(var1))\n# result : &lt;class 'boolean'>\nvar1 = float(var1)\nprint(var1)\n# result : 1.0\nprint(type(var))\n# result : &lt;class 'float'>\n자료형 변환(etc.)var = ''\nvar0 = '  '\n\nprint(type(var)) # result : &lt;class 'str'>\nvar = bool(var)\nprint(var) # result : False\nprint(type(var)) # result : &lt;class 'bool'>\n\nprint(type(var0)) # result : &lt;class 'str'>\nvar0 = bool(var0)\nprint(var0) # result : True\nprint(type(var0)) # result : &lt;class 'bool'>\n\nvar1 = 'True'\nvar2 = 'False'\nprint(type(var1)) # &lt;class 'str'>\nprint(type(var2)) # &lt;class 'str'>\n\nvar1 = bool(var1)\nvar2 = bool(var2)\nprint(type(var1)) # &lt;class 'bool'>\nprint(type(var2)) # &lt;class 'bool'>\n\nprint(var1 + var2) # 2\nprint(type(var1 + var2)) # &lt;class 'int'>\n데이터 입력userInputData = input(\"성적을 입력하세요: \")\nprint(type(userInputData)) # &lt;class: 'str'>\n\nuserInputIntData = input(int(\"정수를 입력하세요: \"))\nuserInputFloatData = input(float(\"실수를 입력하세요: \"))\nuserInputBooleanData = input(float(\"논리형을 입력하세요: \"))\n\n데이터 출력# ,를 이용한 데이터 연속 출력\nuserName = input(\"input user name: \")\nuserAge = input(int(\"input user age: \"))\nprint(\"input(ted) user name: \",userName,\"; input(ted) user age: \",userAge )\n# format 문자열을 이용한 데이터 출력 &lt;- recommended\nprint(f'input(ted) user name : &#123;userName&#125;, \\ninput(ted) user age : &#123;userAge&#125;')\n# \\t = tab; \\n = newline\nformat()와 형식문자userName = input(\"please input user name: \")\nuserAge = input(int(\"please input user age: \"))\n# format() 함수를 이용한 데이터 출력\nprint('input(ted) user name: &#123;&#125;'.format(userName))\nprint('input(ted) user age: &#123;&#125;'.format(userAge))\nprint(\"please double-check these data: \\nuser name: &#123;&#125;, user age : &#123;&#125; \".format(userName, userAge))\n\n# 형식 문자를 이용한 데이터 출력\nprint('User name: %s and user age: %d confirmed.' % username, userAge)\n\npi = 3.141592\nprint('pi : %f' % pi) # result : pi : 3.141592\nprint('pi : %.3f' % pi) # result : pi : 3.141\nprint('pi : %d' % pi) # result : pi : 3\n산술 연산자(+,-)정수와 실수를 이용한 덧셈\n\n\n\n\n\n\n\n\n실수 영역으로 확장\n문자를 이용한 덧셈str1 = 'Good'\nstr2 = ' '\nstr3 = 'morning'\nprint(str1 + str2 + str3)\n# result : 'Good morning'\n연산자 종류\n산술 연산자 : +,-,*,&#x2F;,%,&#x2F;&#x2F;,** (^)\n할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, **&#x3D;\n비교 연산자 : &gt;,&gt;&#x3D;,&lt;,&lt;&#x3D;, ==, !&#x3D;\n논리 연산자 : and, or, not\n\n산술 연산자(* ,&#x2F;)나눗셈 연산자는 언제나 float‘Good’*7\n\n\n\n\n\n\n\n\nGoodGoodGoodGoodGoodGoodGood\n산술 연산자 (%,&#x2F;&#x2F;)divmod( , …)num1 = 3\nnum2 = 1\nresult = divmod(num1, num2)\nprint('result : &#123;&#125;',.format(result)) \n# result : (3, 1)\nprint('1st result : &#123;&#125;'.format(result[0])) \n# 1st result : 3\nallStdCnt = int(input('전체 학생 수 입력: '))\ngrpStdNum = int(input('한 모둠 학생 수: '))\ncountGrp = allStdCnt // grpStdNum\novrNumStd = allStdCnt % grpStdNum\n\nprint('전체 학생 수: &#123;&#125;명'.format(allStdCnt))\nprint('각 모둠 학생 수: &#123;&#125;명'.format(grpStdNum))\nprint('모둠 수: &#123;&#125;개'.format(countGrp))\nprint('남는 학생 수: &#123;&#125;명'.format(ovrNumStd))\n산술연산자(**)num1 = 2\nnum2 = 3\npoweredResult = num1 ** num2\nprint('result : &#123;&#125;' .format(result))\n# n의 m제곱근 == n ** (1/m)\n\tresult = 2 ** (1/4)\n\tprint('Fourth root of 2 is : %.2f' % result)\n# math 모듈의 sqrt()&amp;pow()\n\timport math\n\tprint('2의 제곱근 %.2f' %math.sqrt(2))\n\t# 2의 제곱근 1.41\n\tprint('2의 3제곱 %.f' %math.pow(2,3))\n\t# 8.000000\n# Q. 첫 달 용돈 200원, 매달 2배, 12개월 후 =?\n\tpocketMoney1stM = 200\n\tNthMonth = int(input())\n\tafterNthM = ((pocketMoney1stM * 0.01) ** NthMonth) * 100\n\tprint( afterNthM, '원' )\n\n복합연산자할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, ** &#x3D;num1 = num1 + 5 \n# num1 += 5\n\n비교연산자(숫자)num1 = 10 ; num2 = 20 \nresult = num1 &lt; num2\nprint('num1 &lt; num2 : &#123;&#125;'.format(result))\n\nstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\nfstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\n\n비교연산자(문자)Ascii Text to Decimal Converter\nord('A') # orderize a char \nchr(65) # charize a num\n\n논리 연산자and &amp; or &amp; not\nprint('&#123;&#125; or &#123;&#125; : &#123;&#125;'.format(True, True, (True or False)))\nprint('not &#123; &#125; : &#123;&#125;'.format(True, (not True)))\nprint('&#123;&#125; and &#123;&#125; : &#123;&#125;'.format(False, True, (False and True)))\noperator moduleimport operator\n\nnum1 = 8\nnum2 = 3\n\nprint('&#123;&#125; + &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.add(num1,num2)))\nprint('&#123;&#125; - &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.sub(num1,num2)))\nprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mul(num1,num2)))\nprint('&#123;&#125; / &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.truediv(num1,num2)))\nprint('&#123;&#125; % &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mod(num1,num2)))\nprint('&#123;&#125; // &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.floordiv(num1,num2)))\nprint('&#123;&#125; ** &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.pow(num1,num2)))\n\n\n","slug":"zeroBase-DS","date":"2023-03-05T08:28:11.280Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"88f1dd3653b8c66a2b1a60aa62589d28","title":"세상의 모든 Vim린이들에게","content":"(본인 포함)\n\n\n\nVim을 IDE로 쓴다면 당신은 버벅임, 마우스와 터널증후군으로부터 \n자유로울 수 있습니다. 까리함과 생산성은 덤!\n\n사실 이 부분부터 보시면귀찮지만 플러그인 설치 등 노오력을 해야 한다고 하는데요\n\n밑의의 첫번째 영상 시리즈를 보시면서 따라하시면적당히 날로 드실 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n아예 CLI를 못다루시는 분이시라면 간단한 리눅스 명령어부터 배우시고 오는 걸 추천드려요!보다가 지칠 때 같이 보세요! 꿀잼 보장\n\n\n","slug":"4VimNewb","date":"2022-08-17T08:22:47.000Z","categories_index":"Neovim IDE Config","tags_index":"Vim","author_index":"BtheNerd"},{"id":"f16485884214c546614773933a5c3a08","title":"I hate exams.","content":"\n328회 TEPS정기시험 (2022년 8월 6일(토) 실시)을 봤다.488점이 나왔다. 비록 500점은 안되지만 1등급(453~525)\t‘외국인으로서 최상급 수준에 근접한 의사소통능력 (Near-Native Level of Communicative Competence) 단기간 집중 교육을 받으면 대부분의 의사소통이 가능하고 전문분야 업무에 별 무리없이 대처할 수 있음’이라니 그냥 2년 뒤에 다시 봐야겠다.본의 아니게 5급 외무영사직 영어시험 면제가 되었다. 와!\n","slug":"exams","date":"2022-08-16T09:28:46.000Z","categories_index":"","tags_index":"TEPS","author_index":"BtheNerd"},{"id":"6e573ed5ed74772ec768a29128114817","title":"My beloved markdown editor, Typora had ceased to serve complimentary service.","content":"그래서 Obsidian으로 갈아탔다.사실 요즘 neovim 쓰다가 그냥 터미널에서 쓰는게 편해서 터미널로 작업중인데 역시 여기서 md 파일 편집은 살짝 아쉽다.플러그인 찾아봐야할까\nI think I have found the right one\n\n\n\n\n\n\n\n\n\n","slug":"Shooting","date":"2022-08-16T09:27:43.000Z","categories_index":"Neovim IDE Config","tags_index":"Obsidian,Typora","author_index":"BtheNerd"},{"id":"f2e2ed9356207b840aae6645ef52766b","title":"I should have written 3 articles to activate feature mode.","content":"\n","slug":"mode","date":"2022-08-16T09:27:11.000Z","categories_index":"Hexo Blog","tags_index":"Aurora,Hexo","author_index":"BtheNerd"}]
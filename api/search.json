[{"id":"2720c7e4854f5e3338f27ce5147d9b8f","title":"zeroBase_DS 1주차","content":"1st Week개발환경세팅 완료, 오랜만에 하려니까 조금 어색하다. \n앞으로의 계획본인 에타 시간표, 곧 vim 단축키도 익숙해지길 바람\n데이터 스쿨에 참여하는 나의 다짐사실 다음 학기나 내년에 동대  Natural Language Processing (NLP) Lab 또는 Inglab 연구실 학부 인턴을 해보고 싶은데, 인공지능 관련 논문 쓰는 남자친구가 커리큘럼 보고 저 정도는 손톱만큼 밖에 안하는거라 해서 함수 별로 무한대로 가는 속도(지&gt;팩&gt;다&gt;삼&gt;로)와 포아송 분포 그리고 선형대수도 까먹고 있었고 공수와 해석학도 못해본 저는 보여지는 서류라도 열심히 하는 수 밖에 없겠구나… 싶어서 이번에 들은 BDA 학회든 학점관리든 일단 힘내보려 합니다. 아자아자!✨\n1주차 학습 내용 요약 정리학습 개요 및 방법파이썬 소개 및 설치\n\n\n\n\n\n\n\n\n\n무한정수 처리 가능\n문법구조 쉬움\n모듈 개발 많이 됨\n\n프로그램 만들어보기\n\n\n\n\n\n\n\n\n\n프로그램 실행 과정PyCharm 설치\n\n\n\n\n\n\n\n\n죄송하지만 이 블로그에선 다른 언어도 같이 개발할 수 있는 nvim으로 진행합니다. \n데이터와 메모리 그리고 데이터 출력변수\n\n\n\n\n\n\n\n\nparameter는 데이터가 할당된 메모리 공간\n변수를 사용하는 이유변수명은 역시 카멜# start with small letters lest we have class confusion later.\nmyAddress = \"서울시 종로구\"\nprint(myAddress)\nhow2NameIt = 'carmel-named variable'\nhow_2_name_it = 'snake-named variable'\n# 예약어 변수명 사용 금지!\n# 'False','None','True','__peg_parser__','and','as','assert','async','await','break','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','in','is','lambda','nonlocal','not','or','pass','raise','return','try','while','with','yield'\n# _ 제외 특수문자 변수명에 사용 금지(공백문자 포함)\n# do not start with a number.\n자료형dataType = '효율적인 메모리 사용을 위해 데이터를 \\n정수형,실수형,문자(열)형,논리형으로 구분한 것'\nnum = 10  #integer variable\n# 정수는 메모리가 허용하는 데까지 사용 가능\npi = 3.14 # float variable\n# 실수는 약 17-18th 소숫점에서 데이터 손실 발생\ngreeting = '반가워요!' # string variable\ntestResult = True # boolean variable\nprint(type(greeting))\n# result : &lt;class 'str'>\nprint(type(num))\n# result : &lt;class 'int'>\n자료형 변환(문자)iNum = 10\nfNum = 3.14\nbNum = True\nprint(type(iNum))\n# result : &lt;class 'int'>\nprint(type(fNum))\n# result : &lt;class 'float'>\nprint(type(bNum))\n# result : &lt;class 'bool'>\niNum = str(iNum)\nprint(type(iNum))\n# result : &lt;class 'str'>\nbNum = str(bNum)\nprint(type(bNum))\n# result : &lt;class 'str'>\n\n자료형 변환(숫자)var = False\nprint(type(var))\n# result : &lt;class 'boolean'>\nvar = int(var)\nprint(var)\n# result : 0\nprint(type(var))\n# result : &lt;class 'int'>\n\nvar1 = True\nprint(type(var1))\n# result : &lt;class 'boolean'>\nvar1 = float(var1)\nprint(var1)\n# result : 1.0\nprint(type(var))\n# result : &lt;class 'float'>\n자료형 변환(etc.)var = ''\nvar0 = '  '\n\nprint(type(var)) # result : &lt;class 'str'>\nvar = bool(var)\nprint(var) # result : False\nprint(type(var)) # result : &lt;class 'bool'>\n\nprint(type(var0)) # result : &lt;class 'str'>\nvar0 = bool(var0)\nprint(var0) # result : True\nprint(type(var0)) # result : &lt;class 'bool'>\n\nvar1 = 'True'\nvar2 = 'False'\nprint(type(var1)) # &lt;class 'str'>\nprint(type(var2)) # &lt;class 'str'>\n\nvar1 = bool(var1)\nvar2 = bool(var2)\nprint(type(var1)) # &lt;class 'bool'>\nprint(type(var2)) # &lt;class 'bool'>\n\nprint(var1 + var2) # 2\nprint(type(var1 + var2)) # &lt;class 'int'>\n데이터 입력userInputData = input(\"성적을 입력하세요: \")\nprint(type(userInputData)) # &lt;class: 'str'>\n\nuserInputIntData = input(int(\"정수를 입력하세요: \"))\nuserInputFloatData = input(float(\"실수를 입력하세요: \"))\nuserInputBooleanData = input(float(\"논리형을 입력하세요: \"))\n\n데이터 출력# ,를 이용한 데이터 연속 출력\nuserName = input(\"input user name: \")\nuserAge = input(int(\"input user age: \"))\nprint(\"input(ted) user name: \",userName,\"; input(ted) user age: \",userAge )\n# format 문자열을 이용한 데이터 출력 &lt;- recommended\nprint(f'input(ted) user name : &#123;userName&#125;, \\ninput(ted) user age : &#123;userAge&#125;')\n# \\t = tab; \\n = newline\nformat()와 형식문자userName = input(\"please input user name: \")\nuserAge = input(int(\"please input user age: \"))\n# format() 함수를 이용한 데이터 출력\nprint('input(ted) user name: &#123;&#125;'.format(userName))\nprint('input(ted) user age: &#123;&#125;'.format(userAge))\nprint(\"please double-check these data: \\nuser name: &#123;&#125;, user age : &#123;&#125; \".format(userName, userAge))\n\n# 형식 문자를 이용한 데이터 출력\nprint('User name: %s and user age: %d confirmed.' % username, userAge)\n\npi = 3.141592\nprint('pi : %f' % pi) # result : pi : 3.141592\nprint('pi : %.3f' % pi) # result : pi : 3.141\nprint('pi : %d' % pi) # result : pi : 3\n산술 연산자(+,-)정수와 실수를 이용한 덧셈\n\n\n\n\n\n\n\n\n실수 영역으로 확장\n문자를 이용한 덧셈str1 = 'Good'\nstr2 = ' '\nstr3 = 'morning'\nprint(str1 + str2 + str3)\n# result : 'Good morning'\n연산자 종류\n산술 연산자 : +,-,*,&#x2F;,%,&#x2F;&#x2F;,** (^)\n할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, **&#x3D;\n비교 연산자 : &gt;,&gt;&#x3D;,&lt;,&lt;&#x3D;, ==, !&#x3D;\n논리 연산자 : and, or, not\n\n산술 연산자(* ,&#x2F;)나눗셈 연산자는 언제나 float‘Good’*7\n\n\n\n\n\n\n\n\nGoodGoodGoodGoodGoodGoodGood\n산술 연산자 (%,&#x2F;&#x2F;)divmod( , …)num1 = 3\nnum2 = 1\nresult = divmod(num1, num2)\nprint('result : &#123;&#125;',.format(result)) \n# result : (3, 1)\nprint('1st result : &#123;&#125;'.format(result[0])) \n# 1st result : 3\nallStdCnt = int(input('전체 학생 수 입력: '))\ngrpStdNum = int(input('한 모둠 학생 수: '))\ncountGrp = allStdCnt // grpStdNum\novrNumStd = allStdCnt % grpStdNum\n\nprint('전체 학생 수: &#123;&#125;명'.format(allStdCnt))\nprint('각 모둠 학생 수: &#123;&#125;명'.format(grpStdNum))\nprint('모둠 수: &#123;&#125;개'.format(countGrp))\nprint('남는 학생 수: &#123;&#125;명'.format(ovrNumStd))\n산술연산자(**)num1 = 2\nnum2 = 3\npoweredResult = num1 ** num2\nprint('result : &#123;&#125;' .format(result))\n# n의 m제곱근 == n ** (1/m)\n\tresult = 2 ** (1/4)\n\tprint('Fourth root of 2 is : %.2f' % result)\n# math 모듈의 sqrt()&amp;pow()\n\timport math\n\tprint('2의 제곱근 %.2f' %math.sqrt(2))\n\t# 2의 제곱근 1.41\n\tprint('2의 3제곱 %.f' %math.pow(2,3))\n\t# 8.000000\n# Q. 첫 달 용돈 200원, 매달 2배, 12개월 후 =?\n\tpocketMoney1stM = 200\n\tNthMonth = int(input())\n\tafterNthM = ((pocketMoney1stM * 0.01) ** NthMonth) * 100\n\tprint( afterNthM, '원' )\n\n복합연산자할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, ** &#x3D;num1 = num1 + 5 \n# num1 += 5\n\n비교연산자(숫자)num1 = 10 ; num2 = 20 \nresult = num1 &lt; num2\nprint('num1 &lt; num2 : &#123;&#125;'.format(result))\n\nstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\nfstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\n\n비교연산자(문자)Ascii Text to Decimal Converter\nord('A') # orderize a char \nchr(65) # charize a num\n\n논리 연산자and &amp; or &amp; not\nprint('&#123;&#125; or &#123;&#125; : &#123;&#125;'.format(True, True, (True or False)))\nprint('not &#123; &#125; : &#123;&#125;'.format(True, (not True)))\nprint('&#123;&#125; and &#123;&#125; : &#123;&#125;'.format(False, True, (False and True)))\noperator moduleimport operator\n\nnum1 = 8\nnum2 = 3\n\nprint('&#123;&#125; + &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.add(num1,num2)))\nprint('&#123;&#125; - &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.sub(num1,num2)))\nprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mul(num1,num2)))\nprint('&#123;&#125; / &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.truediv(num1,num2)))\nprint('&#123;&#125; % &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mod(num1,num2)))\nprint('&#123;&#125; // &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.floordiv(num1,num2)))\nprint('&#123;&#125; ** &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.pow(num1,num2)))\n\n\n","slug":"zeroBase-DS","date":"2023-03-05T08:28:11.280Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"88f1dd3653b8c66a2b1a60aa62589d28","title":"세상의 모든 Vim린이들에게","content":"(본인 포함)\n\n\n\nVim을 IDE로 쓴다면 당신은 버벅임, 마우스와 터널증후군으로부터 \n자유로울 수 있습니다. 까리함과 생산성은 덤!\n\n사실 이 부분부터 보시면귀찮지만 플러그인 설치 등 노오력을 해야 한다고 하는데요\n\n밑의의 첫번째 영상 시리즈를 보시면서 따라하시면적당히 날로 드실 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n아예 CLI를 못다루시는 분이시라면 간단한 리눅스 명령어부터 배우시고 오는 걸 추천드려요!보다가 지칠 때 같이 보세요! 꿀잼 보장\n\n\n","slug":"4VimNewb","date":"2022-08-17T08:22:47.000Z","categories_index":"Neovim IDE Config","tags_index":"Vim","author_index":"BtheNerd"},{"id":"2ef6910e9fd32212995fcf56f4ebe823","title":"두유노 Neovim?","content":"\n Neovim과 함께라면 CLI는 그냥.. 단축키 겸key mapping기이자 마우스이자 IDE \n\n속는 셈 치고 함 봐유~ 어디선가 알라딘🧞‍의 🎼A Whole New World🌏가 들릴테니\n\n\n","slug":"dUknowNvim","date":"2022-08-17T08:17:58.000Z","categories_index":"Neovim IDE Config","tags_index":"Neovim","author_index":"BtheNerd"},{"id":"f16485884214c546614773933a5c3a08","title":"I hate exams.","content":"\n328회 TEPS정기시험 (2022년 8월 6일(토) 실시)을 봤다.488점이 나왔다. 비록 500점은 안되지만 1등급(453~525)\t‘외국인으로서 최상급 수준에 근접한 의사소통능력 (Near-Native Level of Communicative Competence) 단기간 집중 교육을 받으면 대부분의 의사소통이 가능하고 전문분야 업무에 별 무리없이 대처할 수 있음’이라니 그냥 2년 뒤에 다시 봐야겠다.본의 아니게 5급 외무영사직 영어시험 면제가 되었다. 와!\n","slug":"exams","date":"2022-08-16T09:28:46.000Z","categories_index":"","tags_index":"TEPS","author_index":"BtheNerd"},{"id":"6e573ed5ed74772ec768a29128114817","title":"My beloved markdown editor, Typora had ceased to serve complimentary service.","content":"그래서 Obsidian으로 갈아탔다.사실 요즘 neovim 쓰다가 그냥 터미널에서 쓰는게 편해서 터미널로 작업중인데 역시 여기서 md 파일 편집은 살짝 아쉽다.플러그인 찾아봐야할까\nI think I have found the right one\n\n\n\n\n\n\n\n\n\n","slug":"Shooting","date":"2022-08-16T09:27:43.000Z","categories_index":"Neovim IDE Config","tags_index":"Obsidian,Typora","author_index":"BtheNerd"},{"id":"f2e2ed9356207b840aae6645ef52766b","title":"I should have written 3 articles to activate feature mode.","content":"\n","slug":"mode","date":"2022-08-16T09:27:11.000Z","categories_index":"Hexo Blog","tags_index":"Aurora,Hexo","author_index":"BtheNerd"}]
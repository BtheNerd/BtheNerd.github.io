[{"id":"f89833fbc9c862ee81243967f46acef7","title":"zeroBase_DS 2주차","content":"2nd WeekMonday조건식num1 = 10\nnum2 = 30\n\nnumResult = True if num1 > num2 else False\nprint('num1 > num2 : &#123;&#125;'.format(numResult))\n\nsnowfallLimit = 30\nsnowfall = int(input('강설량 입력(mm): '))\n\nprint('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 발령')) if snowfall >= snowfallLimit else \\print('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 미발령'))\nif문if 10 > 5\n\tprint('10 is greater than 5.')\n\tprint('another command?')\nprint(Conditional statement just ended.)\t\n양자택일 조건문(if~else문)passScore = 60\n\nmyScore = int(input(\"점수 입력: \"))\nif myScore >= passScore:\n\tprint('You\\'re passed.')\nelse:\n\tprint('You have to listen to this class again.')\n\n# keyword 'pass'\nlength = int(input('input bed length(cm): '))\n\nif length > 200:\n\tpass\nelse: \n\tprint('You must have bought single-sized bed!')\n\nif~else 문과 조건식조건식 결과에 따른 실행만 하는 경우# 조건식 결과에 따른 실행만 하는 경우\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('points available') if userPoints >= minAblePoints else print('points unavailable.')\n조건식 결과를 변수에 할당하는 경우# 조건식 결과를 변수에 할당하는 경우\nresult = '가능' if userPoints >= minAblePoints else '불가능'\nprint('포인트 사용 가능 여부: &#123;&#125;'.format(result))\n\n모든 조건식(삼항연산자)은 if~else문으로 변경할 수 있다minAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('Your points available') if userPoints >= minAblePoints else print('Your points unavailable.')\n&#x3D;\nminAblePoints = 1000\nresult = 'available' if userPoints >= minAblePoints else 'unavilable'\nprint('Your points are &#123;&#125; now.'.format(result))\n&#x3D;\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nif userPoints >= minAblePoints:\n\tprint('Your points available')\nelse: \n\tprint('Your points unavailable.')\n단, 모든 if~else문을 조건식(삼항연산자)으로 변경할 수 있는 것은 아니다.minAblePoints = 1000\n\nif userPoints >= minAblePoints:\n\tresult = 'usable'\nelse:\n\tresult = 'unusable'\n\tlackedPoint = minAblePoints - userPoints\n\tprint('It lacks &#123;&#125; points now.'.format(lackedPoints))\nprint('Your points are &#123;&#125; now.'.format(result))\n다자택일 조건문(if~elif문)examScore = int(input('Enter test score: '))\ngrade = ''\nif examScore >= 90:\n\tgrade = 'A'\nelif examScore >= 80:\n\tgrade = 'B'\nelif examScore >= 70:\n\tgrade = 'C'\nelif examScore >= 60:\n\tgrade = 'D'\nelse: \n\tgrade = 'F'\nprint('Your input(ted)test score is &#123;&#125; and corresponding grade is &#123;&#125;.'.format(examScore, grade))\n다자택일 조건문 사용 시 주의할 점조건식 순서가 중요하다Q. 자동차 배기량에 따라 세금을 부과할 때, 다음 표에 따라 세금을 출력하는 프로그램을 만들어 보자.\n\n\n배기량\n세금(원)\n\n\n\n5000cc 이상\n600,000\n\n\n5000cc미만 4000cc 이상\n500,000\n\n\n4000cc미만 3000cc 이상\n400,000\n\n\n3000cc미만 2000cc 이상\n300,000\n\n\n2000cc미만 1000cc 이상\n200,000\n\n\n1000cc 미만\n100,000\n\n\ndisplacement = int(input('Please input your car displacement: '))\n\nif displacement &lt; 1000:\n\tprint('세금: 100,000원')\nelif displacement &lt; 2000 and displacement >= 1000:\n\tprint('세금: 200,000원')\nelif displacement &lt; 3000 and displacement >= 2000:\n\tprint('세금: 300,000원')\nelif displacement &lt; 4000 and displacement >= 3000:\n\tprint('세금: 400,000원')\nelif displacement &lt; 5000 and displacement >= 4000:\n\tprint('세금: 500,000원')\nelif displacement >= 5000:\n\tprint('세금: 600,000원')\n중첩 조건문Q. 출퇴근 시 이용하는 교통수단에 따라 세금을 감면해 주는 정책을 만드려 한다. 다음내용에 맞게 프로그램을 만들어 보자:\n\n\n\n\n\n\n\n\n\n출퇴근 대상 여부 확인\n출퇴근 대상이면\n도보,자전거 -&gt; 세금 감면 5%\n버스,지하철 -&gt; 세금 감면 3%\n자가용 -&gt; 세금 추가 1%\n\n\n출퇴근 대상이 아니면 세금 변동 없음\n\nifCommute = chr(input('If you commute, please enter \\'Y\\', if not, then please enter \\'N\\'.'))\n\nif ifCommute == Y:\n\tprint('Please select your transportaion: ')\n\ttrans = int(input('1. by walk, by bike; 2. by bus, by subway; 3. by own automobile'))\n\tif trans == 1:\n\t\tprint('5% tax reduction')\n\telif trans == 2:\n\t\tprint('3% tax reduction')\n\telif trans == 3:\n\t\tprint('1% additional tax')\n\t\nelif ifCommute == N:\n\tprint('taxation unchanged')\nelse:\n\tprint('You\\'ve entered wrong character. Please enter again.')\n반복문players = ['박찬호','박세리','박지성','김연경','손흥민']\nfor player in players:\n\tprint('&#123;&#125;선수에게 메일 발송!'.format(player))\n횟수에 의한 반복for i in range(100):\n\tprint('i -> &#123;&#125;'.format(i))\n조건에 의한 반복num = 0\nwhile (num &lt; 10)\n\tprint('num -> &#123;&#125;'.format(num))\n\tnum += 1\n횟수에 의한 반복(for문)for i in range(5):\n\tprint(i)\n# result : 0,1,2,3,4\nfor i in range(10):\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(7,i,(7*i)))\nfor h in range(10):\n\tprint('Hi',end='')\n\tprint(' loop statement')\n# result : Hi loop statement\nprint(‘BalaBala ‘,end&#x3D;’’)반복 범위 설정(range())for i in range(1, 11, 1)\nfor j in range(0, 10, 2)\nfor k in range(5, 10, 1)\n\nstartNum = int(input('시작 숫자 입력: '))\nendNum = int(input('마지막 숫자 입력: '))\nfor i in range(startNum,(endNum+1))\n조건에 의한 반복(while문)endNum = 10\nn = 0\n\nwhile n &lt;= endNum:\n\tprint(n)\n\tn+=1\n\ngugudanNum = int(input('희망 구구단 입력: '))\nwhile n &lt; 10:\n\tresult = gugudanNum * n\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(gugudanNum, n, result))\n\tn += 1\nfor문 !&#x3D; while 문횟수에 의한 반복은 for문이 while문보다 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{10}n$$\nsum = 0\nfor i in range(11)\n\tsum += i\nprint('sum: &#123;&#125;'.format(sum))\nsum = 0\ni = 1\nwhile i &lt; 11:\n\tsum += i\n\ti += 1\nprint('sum: &#123;&#125;'.format(sum))\n조건에 의한 반복은 while문이 더 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{k}7\\times n&gt;50,\\min k&#x3D;?$$\nsum = 0\nmaxInt = 0\nfor i in range(1,101):\n\tif i % 7 == 0 and sum &lt;= 50:\n\t\tsum += i\n\t\tmaxInt = i\n\tprint('i: &#123;&#125;'.format(i))\nprint('7의 배수의 합이 50 이상인 최초의 정수: &#123;&#125;.format(maxInt)')\n무한 루프flag = True\nnum = 0\nsum = 0\n\nwhile flag:\n\tnum += 1\n\tsum += num\n\tprint('&#123;&#125;까지의 합: &#123;&#125;'.format(num,sum))\n\tif sum >= 1000:\n\t\tflag = False\nQ. 하루 병원 내방 환자가 50-100명일 때, 누적환자수가 처음으로 10000명이 넘는 날은 몇 번째 날인가?import random\n\nsum = 0\ndate = 1\nflag = True\n\nwhile flag :\n\tpatientCount = random.randint(50, 100)\n\tsum += patientCount\n\tdate += 1\nif sum >= 10000:\n\tflag = False\n\tprint('Date : &#123;&#125;th, today\\'s patient number : &#123;&#125;, accumulated patients number : &#123;&#125;'.format(date, patientCount, sum))\n반복문 제어 (continue)continuefor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\nelse반복문이 종료된 후 실행\n\ncount = 0\nfor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\n\tcount += 1\nelse : \n\tprint('99까지의 정수 중 7의 배수는 &#123;&#125;개입니다.'.format(count))\nQ. 100이하 3과 7의 최소공배수와 공배수들을 출력하라.minLeastCommonMultiple = 0\n\nfor i in range(1,101):\n\tif i % 3 != 0 or i % 7 != 0\n\t\tcontinue\n\tprint('공배수: &#123;&#125;'.format(i))\n\tif minLeastCommonMultiple == 0:\n\t\tminLeastCommonMultiple = i\nelse: \n\tprint('최소 공배수: &#123;&#125;'.format(minLeastCommonMultiple))\n반복문 제어 (break)breakQ. [1,100]의 정수를 더할 때, 합계가 100이 넘는 최초의 정수 찾기sum = 0\nsearchNum = 0\nfor i in range(100):\n\tsum += i\n\tif sum > 100:\n\t\tsearchNum = i\n\t\tbreak\nprint('serched number is &#123;&#125;'.format(searchNum))\nQ. 10!을 계산하는 과정에서 결과값이 50 초과일 때의 숫자?fctResult = 1\nnum = 0\nfor i in range(10):\n\tfctResult = (10 - i) * fctResult\n\tif fctResult > 50:\n\tnum = (10 - i)\n\tbreak\nprint('num: &#123;&#125;,result: &#123;&#125;'.format(num, fctResult))\n중첩 반복문for i in range(1,10):\n\tfor j in range(i):\n\t\tprint(\"*\", end=\"\")\n\tprint()\n# result : \n# *\n# **\n# ***\n# ...\n# *********\n\nfor i in range(1,10)\n\tfor j in range(2,10)\n\t\tresult = j * i\n\t\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(j,i,result), end = \"\")\nTuesday[연습문제] python 개요 및 기본 사용법Q. 설치 순서Install now &amp; Add python to PATH \n\n[연습문제] PyCharm 설치 및 기본 사용법설치[연습문제] 데이터와 변수01Q. 주문확인서 템플릿 만들기name = '홍길동'\nproduct = '야구글러브'\norderNo = 2568956\npaymentMethod = '신용카드'\nproductPrice = '110000'\npaidPrice = '100000'\npoints = '10000'\npaidDate = '2021-08-03 21:50:12'\ninstallment = 6\ninstallmentType = 'interest free'\ncsNum = '02-1234-5678'\n\nprint(name, '고객님의 주문이 접수되었습니다.')\nprint('이하는 해당 주문건에 대한 상세 내역입니다: ')\nprint('-'*50)\nprint('상품명: ',product)\nprint('주문번호: ', orderNo)\nprint('결제방법: ', paymentMethod)\nprint('상품금액: ', productPrice)\nprint('결제금액: ', paidPrice)\nprint('잔여 포인트: ',points,'P')\nprint('결제일시: ',paidDate)\nprint('할부: ', installment,'개월')\nprint('할부유형: ', installmentType)\nprint('문의: ', csNum)\nprint('-'*50)\nprint('저희 사이트를 이용해 주셔서 감사합니다.')\n[연습문제] 데이터와 변수02len()\n\n\n\n\n\n\n\n\n문자 길이를 반환함\nfind()특정 문자열의 위치를 찾아 반환함\n\n[연습문제] 데이터와 변수03Q. 원의 반지름을 입력하면 원의 넓이와 원주를 출력하되, 정수형식, 소숫점1자리 그리고 소숫점 3자리의 형식을 모두 출력하라.pi = 3.14159\nradius = int(input('반지름(cm)을 입력하세요: '))\n\ncircleArea = (radius*radius*pi)\ncircumference = (2*pi*radius)\n\nprint('원의 넓이: %d cm', % circleArea)\nprint('원주: %d cm', % circumference)\nprint('원의 넓이: %.1f cm', % circleArea)\nprint('원주: %.1f cm', % circumference)\nprint('원의 넓이: %.3f cm', % circleArea)\nprint('원주: %.3f cm', % circumference)\n\nQ. 사용자로부터 입력받은 개인정보 포맷문자열로 출력하기(비밀번호, 주민번호 뒷자리는 별표로 처리usrName = input('이름 입력: ')\nusrMail = input('메일 입력: ')\nusrID = input('아이디 입력: ')\nusrPW = input('비밀번호 입력: ')\nfstHalfusrRRNum = input('주민번호 앞자리 입력: ')\nSndHalfusrRRNum =input('주민번호 뒷자리 입력: ')\nusrAddress = input('주소 입력: ')\n\nprint('-'*30*)\nprint(f'이름: &#123;usrName&#125;')\nprint(f'메일: &#123;usrMail&#125;')\nprint(f'아이디: &#123;usrID&#125;')\nprint(f'비밀번호: &#123;('*'*len(usrPW))&#125;',)\nprint(f'주민번호: &#123;fstHalfusrRRNum&#125; - &#123;SndHalfusrRRNum[0]&#125;&#123;('*'*(len(usrPW)-1))&#125;')\nprint(f'주소: &#123;usrAddress&#125;')\nprint('-'*30*)\n[연습문제] 데이터와 변수04isdigit()숫자인지 확인(맞으면 True, 아니면 False)\n\n체중(g)과 신장(cm)을 입력하면 BMI 지수가 출력되는 프로그램을 만들어 보자.bodyWeight = int(input(\"체중(g)을 입력하세요: \"))\nbodyHeight = int(input(\"신장(cm)을 입력하세요: \"))\n\nif bodyWeight.isdigit():\n\tbodyWeight = int(bodyWeight)*0.001\nif bodyHeight.isdigit():\n\tbodyHeight = int(bodyHeight)*0.01\n\nBMI = bodyWeight/ (bodyHeight*bodyHeight)\n\nprint(\"체중: &#123;&#125;\".format(bodyWeight*0.001))\nprint(\"신장: &#123;&#125;\".format(bodyHeight*0.01))\nprint(\"BMI: &#123;&#125;\".format(BMI))\n[연습문제] 데이터와 변수05Q. 키오스크에서 사용하는 언어 선택 프로그램을 만들어보자.selectLanguage = int(input(\"언어를 선택하세요(Choose your language): 1.한국어\\t2.English\"))\nif selectLanguage == '1': # ''해야함\n\tselectMenu = int(input(1.샌드위치\\t2.햄버거\\t3.쥬스\\t4.커피\\t5.아이스크림))\nelif selectLanguage == '2':\n\tselectMenu = int(input(1.Sandwich\\t2.Hamburger\\t3.Juice\\t4.Coffee\\t5.Ice cream))\ndatetime moduleQ. 나의 나이가 100살 되는 해의 연도를 구하는 프로그램을 만들어보자.import datetime\nfrom datetime import date\n\ntoday = date.today()\nthisYear = today.year\n\ncurentAge = int(input(\"당신은 현재 몇 살입니까?: \"))\nyour100thYear = thisYear+(100-currentAge)\nprint(\"당신이 100세가 되는 해는 &#123;&#125;년 입니다.\".format(your100thYear))\n\n\n[연습문제] 연산자01Q. 상품 가격과 지불 금액을 입력하면 거스름 돈을 계산하는 프로그램을 만들어보자. 단, 거스름돈은 지폐와 동전의 개수를 최소로 하고, 1원 단위 절사한다.지폐: 50000원, 10000원, 5000원, 1000원\n동전: 500원, 100원, 10원\n\nproductPrice = int(input(\"상품 가격 입력: \"))\npaidAmount = int(input(\"지불 금액: \"))\nchangeMoney = 0\ndifference = paidAmount - productPrice\n\nreturn50000 = 0\nreturn10000 = 0\nreturn5000 = 0\nreturn1000 = 0\nreturn500 = 0\nreturn100 = 0\nreturn10 = 0\n\nstopLoop = 0\n\nwhile stopLoop == 0 :\n\tif difference > 0 :\n\t\tif difference // 50000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn50000 = (difference // 50000)\n\t\t\tdifference -= 50000*return50000\n\t\tif difference // 10000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10000 = (difference // 10000)\n\t\t\tdifference -= 10000*return10000\n\t\tif difference // 5000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn5000 = (difference // 5000)\n\t\t\tdifference -= 5000*return5000\n\t\tif difference // 1000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn1000 = (difference // 1000)\n\t\t\tdifference -= 1000*return1000\n\t\tif difference // 500 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn500 = (difference // 500)\n\t\t\tdifference -= 500*return500\n\t\tif difference // 100 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn100 = (difference // 100)\n\t\t\tdifference -= 100*return100\n\t\tif difference // 10 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10 = (difference // 10)\n\t\t\tdifference -= 10*return10\n\t\tprint(\"-\"*30)\n\t\tprint(\"changes: \")\n\t\tprint(\"50,000원 &#123;&#125;장\".format(return50000))\n\t\tprint(\"10,000원 &#123;&#125;장\".format(return10000))\n\t\tprint(\"5,000원 &#123;&#125;장\".format(return5000))\n\t\tprint(\"1,000원 &#123;&#125;장\".format(return1000))\n\t\tprint(\"500원 &#123;&#125;개\".format(return500))\n\t\tprint(\"100원 &#123;&#125;개\".format(return100))\n\t\tprint(\"10원 &#123;&#125;개\".format(return10))\n\t\tprint(\"-\"*30)\n\t\tstopLoop += 1\n\telif difference == 0 :\n\t\tprint(\"There is no change money.\")\n\t\tstopLoop += 1\n\telif difference &lt; 0 :\n\t\textraMoney = int(input(\"You've paid less. Please pay sufficient money: \"))\n\t\tpaidAmount += extraMoney\n\n\n\n[연습문제] 연산자02Q. 국영수 점수 입력 후 총점,평균,최고점수 과목, 최저점수 과목, 그리고 최고 점수와 최저 점수의 차이를 각각 출력해보자max(),min()korScore = int(input('국어 점수 입력: '))\nengScore = int(input('영어 점수 입력: '))\nmthScore = int(input('수학 점수 입력: '))\n\ntotalScre = korScore + engScore + mthScore\navgScre = totalScre / 3\n\nmaxScore = max(korScore,engScore,mthScore)\nminScore = min(korScore,engScore,mthScore)\ngap = maxScore - minScore\n\nprint(\"-\"*30*)\n\nif maxScore == korScore:\n\tif minScore == engScore:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,engScore,gap))\n\telse:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,mthScore,gap))\nelif maxScore == engScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,korScore,gap))\n\telse: \n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,mthScore,gap))\nelif maxScore == mthScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,korScore,gap))\n\telse :\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,engScore,gap))\n\nprint(\"-\"*30*)\n[연습문제] 연산자03시,분,초를 입력하면 초로 환산하는 프로그램을 만들어보자.hour = int(input('시간 입력: '))\nminute = int(input('분 입력: '))\nsecond = int(input('초 입력: '))\n\nprint('&#123;&#125;초'.format(format(hour *60 *60 +min *60+second,',')))\n\nformat(money,’,’)금액, 이율, 거치기간을 입력하면 복리계산하는 복리계산기 프로그램을 만들어보자amount = int(input('금액 입력: '))\ninterestRate = int(input('이율 입력: '))\nperiod = int(input('기간 입력: '))\n\ntargetMoney = money\n\nfor i in range(term):\n\ttargetMoney += (targetMoney * rate * 0.01)\n\nformatedTargetMoney = format(int(targetMonet,','))\n\nprint('-'*30)\nprint('이율: &#123;&#125;'.format(rate))\nprint('원금: &#123;&#125;'.format(format(money,',')))\nprint('&#123;&#125;년 후 금액: &#123;&#125;원'.format(term,formatedTargetMoney))\nprint('-'*30)\n[연습문제] 연산자04groundTemp = 29\ngap = 60\ndecreasedTemp = 0.8\n\naltitude = int(input('고도 입력: '))\n\ntargetTemp = groundTemp - (altitude // gap*0.8)\n\nif altitude % gap != 0:\n\ttargetTemp -= decreasedTemp\n\nprint('지면 온도: &#123;&#125;'.format(baseTemp))\nprint('고도 &#123;&#125;m의 기온: &#123;&#125;'.format(altitude,targetTemp))\n[연습문제] 연산자05Q. 백신접종대상자 판별 프로그램 만들기19세 이하 또는 65세 이상이면 출생연도 끝자리에 따라 접종, 그렇지 않다면 하반기 일정 확인\n\ninputAge = int(input('나이 입력: '))\n\nif inputAge &lt;= 19 or inputAge >= 65: \n\t\tendNum = int(input('출생 연도 끝자리 입력: '))\n\tif endNum == 1 or endNum == 6:\n\t\tprint('월요일 접종 가능')\n\tif endNum == 2 or endNum == 7:\n\t\tprint('화요일 접종 가능')\n\tif endNum == 3 or endNum == 8:\n\t\tprint('수요일 접종 가능')\n\tif endNum == 4 or endNum == 9:\n\t\tprint('목요일 접종 가능')\n\tif endNum == 5 or endNum == 0:\n\t\tprint('금요일 접종 가능')\nelse : \n\tprint('하반기 일정을 확인하세요.')\nQ. 길이(mm)를 입력하면 inch로 환산하는 프로그램을 만들어보자. (1mm &#x3D; 0.039inch)byInch = 0.039\nlengthMM = int(input('길이(mm) 입력: '))\nlength2Inch = lengthMM * byInch\n\nprint('&#123;&#125;mm -> &#123;&#125;inch'.format(lengthMM,lengthInch))\n[연습문제] 조건문01과속위반 경고 프로그램시속 50km 이하 -&gt; 안전속도 준수!!\n시속 50km 초과 -&gt; 안전속도 위반!! 과태료 50,000원 부과 대상입니다.\n\ncarSpeed = int(input('속도 입력: '))\nlimitSpeed = 50\n\nif carSpeed > 50:\n\tprint('안전속도 위반!! 과태료 50,000원 부과 대상입니다.')\nelse:\n\tprint('안전속도 준수!!')\n[연습문제] 조건문02국영수,과학,한국사 점수를 입력하면 총점을 비롯한 각종 데이터가 출력되는 프로그램을 만들어보자.- 과목별 점수를 입력하면 총점, 평균, 편차를 출력\n- 과목별 평균 : \n    국어:85, 영어:82, 수학:89, 과학:75, 한국사:94\n- 각종 편차 데이터는 막대그래프로 시각화한다.\n\nkorAvg = 85; EngAvg = 82; mthAvg = 89\nsciAvg = 75; kHstAvg = 94\ntotalAvg = int(0.2 * (korAvg+EngAvg+mthAvg+sciAvg+kHstAvg))\n\nkorScore = int(input('국어 성적 입력: '))\nengScore = int(input('영어 성적 입력: '))\nmthScore = int(input('수학 성적 입력: '))\nsciScore = int(input('과학 성적 입력: '))\nkHstScore = int(input('한국사 성적 입력: '))\ntotalScore = korScore+engScore+mthScore+sciScore+kHstScore\ninputAvg = int(0.2 * totalScore)\n\nkorGap = korScore - korAvg\nengGap = engScore - engAvg\nmthGap = mthScore - mthAvg\nsciGap = sciScore - sciAvg\nkHstGap = kHstcore - kHstAvg\ntotalGap = (korScore+engScore+mthScore+sciScore+kHstScore)-(korAvg+EngAvg+mthAvg+sciAvg+kHstAvg)\navgGap = inputAvg - totalAvg\n\nprint('-'*30) \nprint('총점: &#123;&#125;(&#123;&#125;),평균: &#123;&#125;(&#123;&#125;)'.format(totalScore,totalGap,avgScore,avgGap))\nprint('국어: &#123;&#125;(&#123;&#125;),영어: &#123;&#125;(&#123;&#125;),수학: &#123;&#125;(&#123;&#125;),과학: &#123;&#125;(&#123;&#125;),국사: &#123;&#125;(&#123;&#125;)'.format(korScore,korGap,engScore,engGap,mthScore,mthGap,sciScore,SciGap,kHstScore,kHstGap))\nprint('-'*30) \nstr = '+' if korGap > 0 else '-'\nprint('국어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(korGap),korGap))\nprint('영어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(engGap),engGap))\nprint('수학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(mthGap),mthGap))\nprint('과학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(sciGap),sciGap))\nprint('한국사 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(kHstGap),kHstGap))\nprint('총 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(totalGap),totalGap))\nprint('평균 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(avgGap),avgGap))\n\n\n[연습문제] 조건문03난수를 이용해 가위,바위,보 게임을 만들어보자import random\n\ncomputerNum = random(1,3)\nuserNum = int(input(\"1.가위, 2.바위, 3.보 중에서 하나의 숫자를 골라 입력하세요: \"))\n\nif (computerNum == 1 and userNum == 2) or (computerNum == 2 and userNum == 3) or (computerNum == 3 and userNum == 1):\n\tprint(\"computer: lose, user: win\")\nelif computerNum == userNum: \n\tprint(\"A dead heat.\")\nelse: \n\tprint(\"computer: win, user: lose\")\n[연습문제] 조건문04아래 요금표를 참고해서 상수도 요금 계산기를 만들어보자.\n\n\n업종별\n사용량\n단가(원)\n\n\n\n가정용\n-\n540\n\n\n대중탕용\n50이하\n820\n\n\n대중탕용\n50초과 300이하\n1,920\n\n\n대중탕용\n300 초과\n2,400\n\n\n공업용\n500이하\n240\n\n\n공업용\n500초과\n470\n\n\npurposeClassification = int(input(\"업종 선택: 1.가정용  2.대중탕용  3.공업용\"))\nusedWater = int(input('사용량 입력: '))\nunitPrice = 0\n\nif part == 1:\n\tunitPrice = 540\nelif part == 2:\n\tif usedWater &lt;= 50 :\n\t\tunitPrice = 820\n\telif usedWater > 50 or usedWater &lt;= 300 :\n\t\tunitPrice = 1920\n\telif usedWater > 300:\n\t\tunitPrice = 2400\nelif part ==3:\n\tif usedWater &lt;= 500 :\n\t\tunitPrice = 240\n\telse: \n\t\tunitPrice = 470\n\nprint('='*30)\nprint(\"상수도 요금표\")\nprint('-'*30)\nprint('사용량   :  요금   ')\nprint('&#123;&#125;    :  &#123;&#125;원'.format(usedWater,(unitPrice*usedWater)))\nprint('='*30)\n\n[연습문제] 조건문05Q.미세먼지 비상저감조치로 차량 운행제한 프로그램을 다음 내용에 맞게 만들어 보자.- 미세먼지 측정 수치가 150 이하면 차량5부제 실시\n- 미세먼지 측정 수치가 150을 초과하면 차량2부제 실시\n- 차량2부제를 실시하더라도 영업용차량은 5부제 실시\n- 미세먼지 수치, 차량 종류, 차량 번호를 입력하면 운행 가능 여부 출력\n\nimport datetime\n\ntoday = datetime.datetime.today()\ntheDay = today.weekday()\naDay = today.day\n# weekday(): 요일반환 (0:월,1:화,2:수,...,6:일)\n\nfineDust = int(input(\"현재 미세먼지 수치를 입력하세요: \"))\ncarCartegoty = int(input(\"당신의 차량은 어느 차량 인가요? 1.영업용 차량 2.개인용 차량\"))\ncarNum = int(input(\"차량 번호를 입력해주세요: \"))\n\nif fineDust &lt;= 150: \n\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\nelse: \n\tif carCartegoty == 1:\n\t\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telse: \n\t\tprint(\"차량 번호 &#123;&#125;, 차량 2부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] % 2 == 0:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\telse:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\n[연습문제] 조건문06PC에서 난수가 발생하면 사용자가 난수를 맞추는 게임1. PC가 난수[1,1000]을 발생시키면 사용자가 해당 범위에서 발생된 난수로 추측되는 정수를 입력한다.\n2. 사용자가 난수를 맞추면 게임은 종료된다.\n3. 못맞출시 생성된 난수와 사용자의 추측값의 크기를 비교해 알려주고, 사용자에게 기회를 다시 준다. \n4. 마지막 회차에 사용자의 시도횟수를 출력해준다.\n\nimport random\n\ntheAnswer = int(random(1,1000))\nanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\ntrialCount = 1\n\nwhile theAnswer != anAnswer:\n\tprint(\"아쉬워요, 다시 한 번 해보세요.\")\n\tanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\n\ttrialCount += 1\n\tif theAnswer > anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 작아요.\")\n\telif theAnswer &lt; anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 커요.\")\n\telif theAnswer == anAnswer:\n\t\tbreak\n\nprint(\"네, 정답은 &#123;&#125;었습니다. 총 시도 횟수는 &#123;&#125;회 입니다.\".format(theAnswer),trialCount)\n실내온도를 입력하면 스마트에어컨 상태가 자동으로 설정되는 프로그램을 만들어 보자.\n\n\n실내온도\n18도 이하\n18도 초과 22도 이하\n22도 초과 24도 이하\n24도 초과 26도 이하\n26도 초과 28도 이하\n28도 초과\n\n\n\n에어컨 상태\noff\n매우 약하게\n약하게\n중간\n강하게\n매우 강하게\n\n\nindoorTemp = int(input(\"실내온도 입력: \"))\nairConditioner = \"\"\n\nif indoorTemp &lt;= 18:\n\tairConditioner = \"나중에\"\nelif indoorTemp > 18 or indoorTemp &lt;= 22 :\n\tairConditioner = \"매우 약하게\"\nelif indoorTemp > 22 or indoorTemp &lt;= 24 :\n\tairConditioner = \"약하게\"\nelif indoorTemp > 24 or indoorTemp &lt;= 26 :\n\tairConditioner = \"중간\"\nelif indoorTemp > 26 or indoorTemp &lt;= 28 :\n\tairConditioner = \"강하게\"\nelif indoorTemp > 28 :\n\tairConditioner = \"매우 강하게\"\n\nprint(\"에어컨을 &#123;&#125; 작동합니다. \".format(airConditioner))\n[연습문제] 반복문01[1,100]구간 내의 정수 중 십의 자리의 일의 자리에 대해 각각 홀&#x2F;짝수를 구분하는 프로그램을 만들어보자.for i in range(1,101):\n\ttens = i // 10\n\tunits = i % 10\n\t\n\tif tens % 2 == 0:\n\t\tif tens == 0:\n\t\t\tpass\n\t\telse:\n\t\t\ttens = '짝수'\n\telse:\n\t\ttens = '홀수'\n\t\n\tif units % 2 == 0:\n\t\tif units == 0:\n\t\t\tpass\n\t\telse:\n\t\t\tunits = '짝수'\n\telse:\n\t\tunits = '홀수'\n\tprint(\"&#123;&#125;의 십의 자리:&#123;&#125;, 일의 자리:&#123;&#125;\".format(i,tens,units))\n[연습문제] 반복문02Q. 1부터 사용자가 입력한 정수까지의 합, 홀수의 합, 짝수의 합 그리고 팩토리얼을 출력하는 프로그램을 만들어보자.inputNum = int(input(\"정수 입력: \"))\nrememberInputNum = inputNum\nbuffer = 0\nsummation = 0\noddSummation = 0\nevenSummation = 0\nfactorial = 1\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tsummation += buffer\nprint(\"합 결과: &#123;&#125;\".format(summation))\ninputNum = rememberInputNum\n\nif inputNum % 2 == 0:\n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\nelse: \n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tfactorial *= buffer\nprint(\"팩토리얼 결과: &#123;&#125;\".format(format(factorial,',')))\n\n[연습문제] 반복문03Q. 별을 찍으시오.![[Pasted image 20230308152531.png]]\nblankNum = 0\nstarNum = 0\nrowNum = int(input(\"행의 개수 입력 :\"))\ncolumnNum = int(input(\"열의 개수 입력 :\"))\n\nfor i in rowNum:\n\tfor j in columnNum:\n\t\tprint('*',end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in i:\n\t\tfor k in columnNum:\n\t\t\tprint(\" \",end=\"\")\n\t\t\tk += 1\n\t\tprint(\"*\",end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in ColumnNum:\n\t\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in ColumnNum:\n\t\tprint(\" \"*i,end=\"\")\n\t\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in columnNum:\n\t\tprint('*',end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\nfor i in rowNum -1 :\n\tfor j in ColumnNum -1 :\n\t\tprint(\"*\"*(rowNum-i))\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in columnNum:\n\t\tprint(\" \"*j,end=\"\")\n\t\tj += 1\n\tprint(\"*\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in columnNum:\n\t\tprint(\" \"*(columnNum+1-i))\n\tprint(\"\")\n\ti += 1\n\nfor i in rowNum:\n\tfor j in columnNum: \n\t\tif columnNum % 2 == 0:\n\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n\t\telse:\n\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\n\t# 검토중!\n\n[연습문제] 반복문04[연습문제] 반복문05[연습문제] 반복문06","slug":"zeroBase-DS-2nd","date":"2023-03-06T05:12:57.584Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2720c7e4854f5e3338f27ce5147d9b8f","title":"zeroBase_DS 1주차","content":"1st Week개발환경세팅 완료, 오랜만에 하려니까 조금 어색하다. \n앞으로의 계획본인 에타 시간표, 곧 vim 단축키도 익숙해지길 바람\n데이터 스쿨에 참여하는 나의 다짐사실 다음 학기나 내년에 동대  Natural Language Processing (NLP) Lab 또는 Inglab 연구실 학부 인턴을 해보고 싶은데, 인공지능 관련 논문 쓰는 남자친구가 커리큘럼 보고 저 정도는 손톱만큼 밖에 안하는거라 해서 함수 별로 무한대로 가는 속도(지&gt;팩&gt;다&gt;삼&gt;로)와 포아송 분포 그리고 선형대수도 까먹고 있었고 공수와 해석학도 못해본 저는 보여지는 서류라도 열심히 하는 수 밖에 없겠구나… 싶어서 이번에 들은 BDA 학회든 학점관리든 일단 힘내보려 합니다. 아자아자!✨\n1주차 학습 내용 요약 정리학습 개요 및 방법파이썬 소개 및 설치\n\n\n\n\n\n\n\n\n\n무한정수 처리 가능\n문법구조 쉬움\n모듈 개발 많이 됨\n\n프로그램 만들어보기\n\n\n\n\n\n\n\n\n\n프로그램 실행 과정PyCharm 설치\n\n\n\n\n\n\n\n\n죄송하지만 이 블로그에선 다른 언어도 같이 개발할 수 있는 nvim으로 진행합니다. \n데이터와 메모리 그리고 데이터 출력변수\n\n\n\n\n\n\n\n\nparameter는 데이터가 할당된 메모리 공간\n변수를 사용하는 이유변수명은 역시 카멜# start with small letters lest we have class confusion later.\nmyAddress = \"서울시 종로구\"\nprint(myAddress)\nhow2NameIt = 'carmel-named variable'\nhow_2_name_it = 'snake-named variable'\n# 예약어 변수명 사용 금지!\n# 'False','None','True','__peg_parser__','and','as','assert','async','await','break','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','in','is','lambda','nonlocal','not','or','pass','raise','return','try','while','with','yield'\n# _ 제외 특수문자 변수명에 사용 금지(공백문자 포함)\n# do not start with a number.\n자료형dataType = '효율적인 메모리 사용을 위해 데이터를 \\n정수형,실수형,문자(열)형,논리형으로 구분한 것'\nnum = 10  #integer variable\n# 정수는 메모리가 허용하는 데까지 사용 가능\npi = 3.14 # float variable\n# 실수는 약 17-18th 소숫점에서 데이터 손실 발생\ngreeting = '반가워요!' # string variable\ntestResult = True # boolean variable\nprint(type(greeting))\n# result : &lt;class 'str'>\nprint(type(num))\n# result : &lt;class 'int'>\n자료형 변환(문자)iNum = 10\nfNum = 3.14\nbNum = True\nprint(type(iNum))\n# result : &lt;class 'int'>\nprint(type(fNum))\n# result : &lt;class 'float'>\nprint(type(bNum))\n# result : &lt;class 'bool'>\niNum = str(iNum)\nprint(type(iNum))\n# result : &lt;class 'str'>\nbNum = str(bNum)\nprint(type(bNum))\n# result : &lt;class 'str'>\n\n자료형 변환(숫자)var = False\nprint(type(var))\n# result : &lt;class 'boolean'>\nvar = int(var)\nprint(var)\n# result : 0\nprint(type(var))\n# result : &lt;class 'int'>\n\nvar1 = True\nprint(type(var1))\n# result : &lt;class 'boolean'>\nvar1 = float(var1)\nprint(var1)\n# result : 1.0\nprint(type(var))\n# result : &lt;class 'float'>\n자료형 변환(etc.)var = ''\nvar0 = '  '\n\nprint(type(var)) # result : &lt;class 'str'>\nvar = bool(var)\nprint(var) # result : False\nprint(type(var)) # result : &lt;class 'bool'>\n\nprint(type(var0)) # result : &lt;class 'str'>\nvar0 = bool(var0)\nprint(var0) # result : True\nprint(type(var0)) # result : &lt;class 'bool'>\n\nvar1 = 'True'\nvar2 = 'False'\nprint(type(var1)) # &lt;class 'str'>\nprint(type(var2)) # &lt;class 'str'>\n\nvar1 = bool(var1)\nvar2 = bool(var2)\nprint(type(var1)) # &lt;class 'bool'>\nprint(type(var2)) # &lt;class 'bool'>\n\nprint(var1 + var2) # 2\nprint(type(var1 + var2)) # &lt;class 'int'>\n데이터 입력userInputData = input(\"성적을 입력하세요: \")\nprint(type(userInputData)) # &lt;class: 'str'>\n\nuserInputIntData = input(int(\"정수를 입력하세요: \"))\nuserInputFloatData = input(float(\"실수를 입력하세요: \"))\nuserInputBooleanData = input(float(\"논리형을 입력하세요: \"))\n\n데이터 출력# ,를 이용한 데이터 연속 출력\nuserName = input(\"input user name: \")\nuserAge = input(int(\"input user age: \"))\nprint(\"input(ted) user name: \",userName,\"; input(ted) user age: \",userAge )\n# format 문자열을 이용한 데이터 출력 &lt;- recommended\nprint(f'input(ted) user name : &#123;userName&#125;, \\ninput(ted) user age : &#123;userAge&#125;')\n# \\t = tab; \\n = newline\nformat()와 형식문자userName = input(\"please input user name: \")\nuserAge = input(int(\"please input user age: \"))\n# format() 함수를 이용한 데이터 출력\nprint('input(ted) user name: &#123;&#125;'.format(userName))\nprint('input(ted) user age: &#123;&#125;'.format(userAge))\nprint(\"please double-check these data: \\nuser name: &#123;&#125;, user age : &#123;&#125; \".format(userName, userAge))\n\n# 형식 문자를 이용한 데이터 출력\nprint('User name: %s and user age: %d confirmed.' % username, userAge)\n\npi = 3.141592\nprint('pi : %f' % pi) # result : pi : 3.141592\nprint('pi : %.3f' % pi) # result : pi : 3.141\nprint('pi : %d' % pi) # result : pi : 3\n산술 연산자(+,-)정수와 실수를 이용한 덧셈\n\n\n\n\n\n\n\n\n실수 영역으로 확장\n문자를 이용한 덧셈str1 = 'Good'\nstr2 = ' '\nstr3 = 'morning'\nprint(str1 + str2 + str3)\n# result : 'Good morning'\n연산자 종류\n산술 연산자 : +,-,*,&#x2F;,%,&#x2F;&#x2F;,** (^)\n할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, **&#x3D;\n비교 연산자 : &gt;,&gt;&#x3D;,&lt;,&lt;&#x3D;, ==, !&#x3D;\n논리 연산자 : and, or, not\n\n산술 연산자(* ,&#x2F;)나눗셈 연산자는 언제나 float‘Good’*7\n\n\n\n\n\n\n\n\nGoodGoodGoodGoodGoodGoodGood\n산술 연산자 (%,&#x2F;&#x2F;)divmod( , …)num1 = 3\nnum2 = 1\nresult = divmod(num1, num2)\nprint('result : &#123;&#125;',.format(result)) \n# result : (3, 1)\nprint('1st result : &#123;&#125;'.format(result[0])) \n# 1st result : 3\nallStdCnt = int(input('전체 학생 수 입력: '))\ngrpStdNum = int(input('한 모둠 학생 수: '))\ncountGrp = allStdCnt // grpStdNum\novrNumStd = allStdCnt % grpStdNum\n\nprint('전체 학생 수: &#123;&#125;명'.format(allStdCnt))\nprint('각 모둠 학생 수: &#123;&#125;명'.format(grpStdNum))\nprint('모둠 수: &#123;&#125;개'.format(countGrp))\nprint('남는 학생 수: &#123;&#125;명'.format(ovrNumStd))\n산술연산자(**)num1 = 2\nnum2 = 3\npoweredResult = num1 ** num2\nprint('result : &#123;&#125;' .format(result))\n# n의 m제곱근 == n ** (1/m)\n\tresult = 2 ** (1/4)\n\tprint('Fourth root of 2 is : %.2f' % result)\n# math 모듈의 sqrt()&amp;pow()\n\timport math\n\tprint('2의 제곱근 %.2f' %math.sqrt(2))\n\t# 2의 제곱근 1.41\n\tprint('2의 3제곱 %.f' %math.pow(2,3))\n\t# 8.000000\n# Q. 첫 달 용돈 200원, 매달 2배, 12개월 후 =?\n\tpocketMoney1stM = 200\n\tNthMonth = int(input())\n\tafterNthM = ((pocketMoney1stM * 0.01) ** NthMonth) * 100\n\tprint( afterNthM, '원' )\n\n복합연산자할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, ** &#x3D;num1 = num1 + 5 \n# num1 += 5\n\n비교연산자(숫자)num1 = 10 ; num2 = 20 \nresult = num1 &lt; num2\nprint('num1 &lt; num2 : &#123;&#125;'.format(result))\n\nstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\nfstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\n\n비교연산자(문자)Ascii Text to Decimal Converter\nord('A') # orderize a char \nchr(65) # charize a num\n\n논리 연산자and &amp; or &amp; not\nprint('&#123;&#125; or &#123;&#125; : &#123;&#125;'.format(True, True, (True or False)))\nprint('not &#123; &#125; : &#123;&#125;'.format(True, (not True)))\nprint('&#123;&#125; and &#123;&#125; : &#123;&#125;'.format(False, True, (False and True)))\noperator moduleimport operator\n\nnum1 = 8\nnum2 = 3\n\nprint('&#123;&#125; + &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.add(num1,num2)))\nprint('&#123;&#125; - &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.sub(num1,num2)))\nprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mul(num1,num2)))\nprint('&#123;&#125; / &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.truediv(num1,num2)))\nprint('&#123;&#125; % &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mod(num1,num2)))\nprint('&#123;&#125; // &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.floordiv(num1,num2)))\nprint('&#123;&#125; ** &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.pow(num1,num2)))\n\n\n","slug":"zeroBase-DS","date":"2023-03-05T08:28:11.280Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2ef6910e9fd32212995fcf56f4ebe823","title":"두유노 Neovim?","content":"\n Neovim과 함께라면 CLI는 그냥.. 단축키 겸key mapping기이자 마우스이자 IDE \n\n속는 셈 치고 함 봐유~ 어디선가 알라딘🧞‍의 🎼A Whole New World🌏가 들릴테니\n\n\n","slug":"dUknowNvim","date":"2022-08-17T08:17:58.000Z","categories_index":"Neovim IDE Config","tags_index":"Neovim","author_index":"BtheNerd"},{"id":"88f1dd3653b8c66a2b1a60aa62589d28","title":"세상의 모든 Vim린이들에게","content":"(본인 포함)\n\n\n\nVim을 IDE로 쓴다면 당신은 버벅임, 마우스와 터널증후군으로부터 \n자유로울 수 있습니다. 까리함과 생산성은 덤!\n\n사실 이 부분부터 보시면귀찮지만 플러그인 설치 등 노오력을 해야 한다고 하는데요\n\n밑의의 첫번째 영상 시리즈를 보시면서 따라하시면적당히 날로 드실 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n아예 CLI를 못다루시는 분이시라면 간단한 리눅스 명령어부터 배우시고 오는 걸 추천드려요!보다가 지칠 때 같이 보세요! 꿀잼 보장\n\n\n","slug":"4VimNewb","date":"2022-08-17T08:22:47.000Z","categories_index":"Neovim IDE Config","tags_index":"Vim","author_index":"BtheNerd"},{"id":"f16485884214c546614773933a5c3a08","title":"I hate exams.","content":"\n328회 TEPS정기시험 (2022년 8월 6일(토) 실시)을 봤다.488점이 나왔다. 비록 500점은 안되지만 1등급(453~525)\t‘외국인으로서 최상급 수준에 근접한 의사소통능력 (Near-Native Level of Communicative Competence) 단기간 집중 교육을 받으면 대부분의 의사소통이 가능하고 전문분야 업무에 별 무리없이 대처할 수 있음’이라니 그냥 2년 뒤에 다시 봐야겠다.본의 아니게 5급 외무영사직 영어시험 면제가 되었다. 와!\n","slug":"exams","date":"2022-08-16T09:28:46.000Z","categories_index":"","tags_index":"TEPS","author_index":"BtheNerd"},{"id":"6e573ed5ed74772ec768a29128114817","title":"My beloved markdown editor, Typora had ceased to serve complimentary service.","content":"그래서 Obsidian으로 갈아탔다.사실 요즘 neovim 쓰다가 그냥 터미널에서 쓰는게 편해서 터미널로 작업중인데 역시 여기서 md 파일 편집은 살짝 아쉽다.플러그인 찾아봐야할까\nI think I have found the right one\n\n\n\n\n\n\n\n\n\n","slug":"Shooting","date":"2022-08-16T09:27:43.000Z","categories_index":"Neovim IDE Config","tags_index":"Obsidian,Typora","author_index":"BtheNerd"},{"id":"f2e2ed9356207b840aae6645ef52766b","title":"I should have written 3 articles to activate feature mode.","content":"\n","slug":"mode","date":"2022-08-16T09:27:11.000Z","categories_index":"Hexo Blog","tags_index":"Aurora,Hexo","author_index":"BtheNerd"}]
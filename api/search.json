[{"id":"829ef4d975c86b73be4764f9fe8ce223","title":"zeroBase_DS 3주차 수요일 스터디노트","content":"3rd WeekWednesday등비 수열등비 수열(파이썬) (01)등비 수열(파이썬) (02)시그마계차 수열계차 수열(파이썬)피보나치 수열팩토리얼군 수열군 수열(파이썬)순열순열(파이썬)조합조합(파이썬)확률확률(파이썬)","slug":"zeroBase-DS-3rd-03","date":"2023-03-15T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"1cd0a7cc4fe853645190a97ba47fde31","title":"zeroBase_DS 3주차 화요일 스터디노트","content":"3rd WeekTuesday[연습문제] 텍스트 파일(02)[연습문제] 텍스트 파일(03)[연습문제] 텍스트 파일(04)[연습문제] 텍스트 파일(05)약수와 소수약수와 소수(파이썬)소인수와 소인수분해소인수와 소인수분해(파이썬)최대공약수최대공약수(파이썬)최소공배수최소공배수(파이썬)진법진법(파이썬)수열등차 수열등차 수열(파이썬) (01)등차 수열(파이썬) (02)","slug":"zeroBase-DS-3rd-02","date":"2023-03-14T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2ef6910e9fd32212995fcf56f4ebe823","title":"두유노 Neovim?","content":"\n Neovim과 함께라면 CLI는 그냥.. 단축키 겸key mapping기이자 마우스이자 IDE \n\n속는 셈 치고 함 봐유~ 어디선가 알라딘🧞‍의 🎼A Whole New World🌏가 들릴테니\n\n\n","slug":"dUknowNvim","date":"2022-08-17T08:17:58.000Z","categories_index":"Neovim IDE Config","tags_index":"Neovim","author_index":"BtheNerd"},{"id":"9621e8ae63ed17a106a58fdedd5a4127","title":"Week 1.채용공고 살펴보기","content":"Week.1_채용공고 살펴보기1) 데이터 취업 스쿨에 참여하는 여러분들의 다짐과 입과 계기를 작성해 주세요평소 데이터 분석에 관심 많은 편이었어서 올해 초에 준비하던 시험에 합격한 후 AWS와 AD(s)P를 준비를 계획중이었습니다. 그 전에 넓은 영역을 체계적으로 리마인드하고, 학교 수업에 ‘비정형 회계빅데이터 분석’수업이나 ‘경영통계’, ‘통계학원론’ 등과 같은 수업을 듣고 있는데, 교내 유명 학회에 들어가려면 스펙을 쌓아야 하는 것도 있고, 관련 내용을 미리 더 깊게 접해보고자 입과하게 되었습니다. 잘부탁드립니다!\n2) 여러분들이 관심있는 산업군 세 가지와 희망하는 기업을 작성해 주세요산업군:\n클라우드 컴퓨팅 산업(데이터 인프라 서비스업)\n데이터 구축 및 컨설팅 서비스업\n데이터 처리 및 관리 솔루션 개발⋅공급업출처: 한국데이터산업진흥원\n\n희망기업:\nAWS\n삼성에스디에스(주)\n삼성SDI(주)\n삼성전자 dx부문 빅데이터센터 인턴전환형\t\n기아자동차 데이터분석가 선배 합격후기 현실적으로 시도 가능한 사항: 수상 3회 시도, 영어자격증, ADsP,SQLD,빅데이터분석기사, 교내 인공지능 학회, 부트캠프 3개, 개인 머신러닝 프로젝트 3개\n선배 SKhynix DS 직무 합격 후기 현실적으로 시도할 수 있는 사항: ADSP,경진대회 수상 시도, 학석 연계과정 수업 3개 이수,동대 연구실 학부 인턴, 학점 \n선배 현대자동차 인턴정규직전환형 합격 후기 현실적으로 시도할 수 있는 사항: 학부생연구프로그램,통계분석학회,데이터분석공모전 3회 등\n\n3) 원티드 &#x2F; 잡코리아 에 접속하여 데이터 직군 채용공고를 스크랩 해주세요→ 스크랩을 한 공고에서 요구하는 역량은 무엇인지? 작성1. AWS Solutions  Architect, Elastic:자격요건\n새로운 것에 도전하는 것을 좋아하고 능동적으로 일을 대하는 분이어야 합니다.  \n끊임없이 학습하고 동료와 함께 성장하며, 개인의 성장으로 회사와 성장을 이끌고 싶은 분이어야 합니다.  \t\t- 스스로 가치를 만들고 그 가치를 널리 전파하는 것을 좋아하는 분이어야 합니다.  \n상대의 입장에서 생각하고 공감하며, 배려할 수 있는 분이어야 합니다.  \n문제 해결 중심의 사고를 할 수 있는 분이어야 합니다.  \n데이터 시각화의 중요성에 대해 공감하고 필요성에 대해 논리적으로 설명 가능해야 합니다.  \nElasticsearch 구축 및 운영 경험이 있어야 합니다.  \nSQL 작성능력이 필요합니다.우대사항- 개발경력 3년 이상이면 좋습니다.  \nBash shell 작성 능력이 중급 이상이면 좋습니다.  \n빅데이터 에코 시스템 구축, 운영 경험  (Hadoop, Hive, Kafka)이 있으면 좋습니다. - BI 솔루션 관련 경험이 있으면 좋습니다.  \nAWS, Azure, GCP 등 Public Cloud 경험이 있으면 좋습니다.\n\n→ 주요업무를 보았을때 실제 하는 업무가 대략적으로 무엇인지? 작성1. AWS Solutions  Architect, Elastic:Solutions Architect(이하, SA)는 문제를 발견하고 문제를 분석하고, 더 나은 해결 방법을 찾는 해결사 입니다. 문제를 발견하는 과정에서 이해당사자와 밀접한 커뮤니케이션으로 목표를 향해 함께 협업합니다. SA는 도메인 지식, 클라우드 기술을 다양하게 조합하여 성능과 비용을 모두 만족하는 효율적인 해법을 찾습니다. SA는 클라우드를 기반으로 더 나은 가치를 만들 수 있는 방법을 찾기 위해서 끊임없이 학습하고 성장합니다. SA는 지식과 경험을 문서화하고 내부의 동료와 외부의 고객을 교육하는 역할을 합니다.    - SA(Elastic)는 정형&#x2F;비정형 데이터 파이프라인(배치&#x2F;실시간)의 컨설팅, 아키텍처 설계 및 구축합니다.    - SA(Elastic)는 Elasticsearch의 기능을 활용한 보안&#x2F;모니터링 시스템을 구축합니다.    - SA(Elastic)는 Elasticsearch 클러스터를 운영합니다.    - SA(Elastic)는 데이터 시각화와 대시보드를 작성합니다.    - SA(Elastic)는 프로젝트의 성격과 고객의 요청, 업무적인 판단에 따라 상주, 부분상주 근무를 진행합니다.\n4) 개강 후 1주차에 수강하신 학습 내용을 정리하여 어려운 점이 무엇이였는지 강의를 듣고 이해가 잘 된 부분은 무엇인지 작성해 주세요아직은 초입이라 괜찮았습니다. 다만 순열 permutation 排列 한국어를 잠깐 까먹어서 문제를 틀린게 기억이 납니다. \n5) 스터디룸 내에 To-Do-List 체크를 반드시 해주세요!네에\n\n","slug":"Week.1_채용공고살펴보기","date":"2023-03-13T14:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"c0245df8bec4a527a2a0d794d73e7040","title":"zeroBase_DS 3주차 월요일 스터디노트","content":"3rd WeekMonday[연습문제] 모듈(04)logPrint&#x3D;True; 작아지는 range()순열 계산 모듈을 만들고 다음 순열 결과를 출력해 보자 permutation.py\n\ndef getPermutation(n,r,logPrint=True):\n\tresult = 1\n\tfor n in range(n,(n-r),-1):\n\t\tif logPrint: print('n:&#123;&#125;'.format(n))\n\t\tresult *= n\n\treturn result\n\n# 사실 기성모듈이 있음...\nfrom itertools import permutations\n\ndef getPermutations(ns,r):\n\tpList = list(permutations(ns, r))\n\tprint(f'&#123;len(ns)&#125;P&#123;r&#125;개수: &#123;len(pList)&#125;')\n\tfor n in permutations(ns,r):\n\t\tprint(n, end='')\n\n\n\n\n\n\n\n\n\nex.py\nimport permupation as pt\nnumN = int(input('input n of nPr: '))\nnumR = int(input('input r of nPr: '))\n\nprint(f'&#123;numN&#125;P&#123;numR&#125;: &#123;pt.getPermutation(numN,numR,logPrint=False)&#125;')\n\nlistVar = [1,2,3,4,5,6,7,8]\nrVar = 3\npt.getPermutations(listVar,rVar)\n# (1,2,3)(1,2,4)(1,2,5)(1,2,6)(1,2,7)... 336가지 다 나열해줌\n[연습문제] 모듈(05)조합 계산 모듈을 만들고 다음 조합 계산 결과를 출력해보자\n\n\n\n\n\n\n\n\ncombination.py\ndef getCombination(n,r):\n\tresultP = 1\n\tresultR = 1\n\tresultC = 1\n\t\n\tfor n in range(n,(n-r),-1):\n\t\tresultP *= n\n\tfor n in range(r,0,-1):\n\t\tresultR *= n\n\t\n\tresultC = int(resultP / resultR)\n\t\n\treturn resultC\n# 역시 또 기성모듈이 있습니다\nfrom itertools import combinations\n\ndef getCombinations(ns,r):\n\tcList = list(combinations(ns,r))\n\tprint(f'&#123;len(ns)&#125;C&#123;r&#125; = &#123;len(cList)&#125;')\n\n\n\n\n\n\n\n\n\nex.py\nimport combination as ct\n\nnumN = int(input('Input n of nCr: '))\nnumR = int(input('Input r of nCr: '))\ncResult = ct.getCombination(numN,numR)\nprint(f'&#123;numN&#125;C&#123;numR&#125; = &#123;cResult&#125;')\n\nlistVar = [1,2,3,4,5,6,7,8]\nrVar = 3\nct.getCombinations(listVar,rVar)\n[연습문제] 모듈(06)수입과 공과금을 입력하면 공과금 총액과 수입 대비 공과금 비율을 계산하는 모듈을 만들어보자.\n\n\n구분\n수도요금\n전기요금\n가스요금\n\n\n\n요금\n15,000\n17,500\n125,000\n\n\nutilitybillscalculator.py\n\nincome = 0\nwaterPrice = 0; electricPrice = 0; gasPrice = 0\ndef setIncome(ic):\n\tglobal income\n\tincome = ic\ndef getIncome():\n\treturn income\n\ndef setWaterPrice(wp):\n\tglobal waterPrice\n\twaterPrice = wp\ndef getWaterPrice():\n\treturn waterPrice\n\ndef setElectricPrice(ep):\n\tglobal electricPrice\n\telectricPrice = ep\ndef getElectricPrice():\n\treturn electricPrice\n\ndef setGasPrice(gp):\n\tglobal gasPrice\n\tgasPrice = gp\ndef getGasPrice():\n\treturn gasPrice\n\ndef getUtilitybill():\n\tresult = waterPrice+electricPrice+gasPrice\n\treturn result\ndef getUtilityBillRate():\n\tresult = getUtilitybill()/getincome()*100\n\treturn result\n\ndef formatedNum(n):\n\treturn format(n,',')\nex.py\n\nimport utilityBill as ub\n\ninputIncome = int(input('수입 입력: '))\nub.setIncome(inputIncome)\n\ninputWaterPrice = int(input('수도요금 입력: '))\nub.setWaterPrice(inputWaterPrice)\n\ninputElectricPrice = int(input('전기요금 입력: '))\nub.setElectricPrice(inputElectricPrice)\n\ninputGasPrice = int(input('가스요금 입력: '))\nub.setGasPrice(inputGasPrice)\n\nprint(f'공과금: &#123;ub.formatedNum(ub.getUtilitybill())&#125;원')\nprint(f'수입 대비 공과금 비율: &#123;getUtilityBillRate()&#125;)\n[연습문제] 모듈(06)수입과 공과금을 입력하면 공과금 총액과 수입 대비 공과금 비율을 계산하는 모듈을 만들어보자.\n\n\n구분\n수도요금\n전기요금\n가스요금\n\n\n\n요금\n15,000\n17,500\n125,000\n\n\nutilitybillscalculator.py\n\nincome = 0\nwaterPrice = 0; electricPrice = 0; gasPrice = 0\ndef setIncome(ic):\n\tglobal income\n\tincome = ic\ndef getIncome():\n\treturn income\n\ndef setWaterPrice(wp):\n\tglobal waterPrice\n\twaterPrice = wp\ndef getWaterPrice():\n\treturn waterPrice\n\ndef setElectricPrice(ep):\n\tglobal electricPrice\n\telectricPrice = ep\ndef getElectricPrice():\n\treturn electricPrice\n\ndef setGasPrice(gp):\n\tglobal gasPrice\n\tgasPrice = gp\ndef getGasPrice():\n\treturn gasPrice\n\ndef getUtilitybill():\n\tresult = waterPrice+electricPrice+gasPrice\n\treturn result\ndef getUtilityBillRate():\n\tresult = getUtilitybill()/getincome()*100\n\treturn result\n\ndef formatedNum(n):\n\treturn format(n,',')\nex.py\n\nimport utilityBill as ub\n\ninputIncome = int(input('수입 입력: '))\nub.setIncome(inputIncome)\n\ninputWaterPrice = int(input('수도요금 입력: '))\nub.setWaterPrice(inputWaterPrice)\n\ninputElectricPrice = int(input('전기요금 입력: '))\nub.setElectricPrice(inputElectricPrice)\n\ninputGasPrice = int(input('가스요금 입력: '))\nub.setGasPrice(inputGasPrice)\n\nprint(f'공과금: &#123;ub.formatedNum(ub.getUtilitybill())&#125;원')\nprint(f'수입 대비 공과금 비율: &#123;getUtilityBillRate()&#125;)\n[연습문제] 모듈(07)다음과 같이 패키지와 모듈을 만들고 연산 결과를 출력해 보자arithmetic\n└── basic_operator.py  \n    └── developer_operator.py\nshape\n└── circle_area.py\n    └── triangle_square_area.py\nbasic_operator.py\n\ndef add(n1,n2):\n\treturn n1+n2\ndef sub(n1,n2):\n\treturn n1-n2\ndef mul(n1,n2):\n\treturn n1*n2\ndef div(n1,n2):\n\treturn n1/n2\ndeveloper_operator.py\n\ndef mod(n1,n2):\n\treturn n1%n2\ndef flr(n1,n2):\n\treturn n1//n2\ndef exp(n1,n2):\n\treturn n1**n2\ncircle_area.py\n\nimport math\n\ndef getCircleArea(r):\n\treturn math.pi*r*r\ntriangle_square_area.py\n\ndef getSqureArea(w,h):\n\treturn w*h\ndef getTriangleArea(w,h):\n\treturn w*h*0.5\nex.py\n\nfrom arithmetic import basic_operator as bo\nfrom arithmetic import developer_operator as do\n\nfrom shape import circle_area as ca\nfrom shape import triangle_square_area as tsa\n\nnum1 = int(input('Input 1st number: '))\nnum2 = int(input('Input 2nd number: '))\n\nprint(f'&#123;num1&#125;+&#123;num2&#125;=&#123;bo.add(num1,num2)&#125;')\nprint(f'&#123;num1&#125;-&#123;num2&#125;=&#123;bo.sub(num1,num2)&#125;')\nprint(f'&#123;num1&#125;*&#123;num2&#125;=&#123;bo.mul(num1,num2)&#125;')\nprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;bo.div(num1,num2)&#125;')\n\nprint(f'&#123;num1&#125;%&#123;num2&#125;=&#123;do.mod(num1,num2)&#125;')\nprint(f'&#123;num1&#125;//&#123;num2&#125;=&#123;do.flr(num1,num2)&#125;')\nprint(f'&#123;num1&#125;**&#123;num2&#125;=&#123;do.exp(num1,num2)&#125;')\n\nprint(f'The circle area made of &#123;num1&#125; =&#123;ca.getCircleArea(num1)&#125;')\nprint(f'The square area made of &#123;num1&#125; and &#123;num2&#125;=&#123;tsa.getSqureArea(num1,num2)&#125;')\nprint(f'The triange area made of &#123;num1&#125; and &#123;num2&#125;, the later will be its height. =&#123;tsa.getTriangleArea(num1,num2)&#125;')\n[연습문제] 클래스(01)회원가입 클래스와 회원정보를 관리하는 클래스를 만들고 회원가입 로그인 기능을 구현해 보자member.py\n\nclass Member:\n\tdef __init__(self,i,p):\n\t\tself.id = i\n\t\tself.pw = p\n\nclass MemberRepository:\n\tdef __init__(self):\n\t\tself.members = &#123;&#125;\n\tdef addMenber(self,m):\n\t\tself.members[m.id] = .pw\n\tdef loginMember(self,i,p):\n\t\tisMember = i in self.members\n\t\tif isMember and self.member[1]==p:\n\t\t\tprint(f'&#123;i&#125;: successfully logged in.')\n\t\telse:\n\t\t\tprint('&#123;i&#125;: login unsuccessful.')\n\tdef removeMember(self,i,p):\n\t\tdel self.members[i]\n\tdef printMembers(self):\n\t\tfor mk in self.members.keys():\n\t\t\tprint(f'ID: &#123;mk&#125;')\n\t\t\tprint(f'PW: &#123;self.members[mk]&#125;')\nex.py\n\nimport member as mb\n\nmbrs = mb.MemberRepository()\n\nfor i in range(3):\n\tmID = input('Input user ID: ')\n\tmPW = input('Input user PW: ')\n\tmem = mb.Member(mID,mPW)\n\tmbrs.addMember(mem)\n\nmbrs.printMembers()\nmbrs.loginMember('abc@gmail.com','1234')\nmbrs.loginMember('def@gmail.com','5678')\nmbrs.loginMember('ghi@gmail.com','9810')\nmbrs.printMembers()\n[연습문제] 클래스(02)TV클래스를 다음과 같은 상속 구조로 만들고 객체를 생성해 보자NormalTv\n\t속성: inch,color,resolution,smartTv,alTv\n\t기능: turnOn(),turnOff(),printTvInfo()\n└── Tv4K\n\t기능: setSmartTv\n└── Tv8K\n\t기능: setSmartTv,serAiTv\nclass NormalTv:\n\tdef __init__(self,i=32,c='black',r='full-HD'):\n\t\tself.inch = i\n\t\tself.color = c\n\t\tself.resolution = r\n\t\tself.smartTv = 'off'\n\t\tself.aiTv = 'off'\n\tdef turnOn(self):\n\t\tprint('TV power on!!')\n\tdef turnOff(self):\n\t\tprint('TV power off!!')\n\tdef printTvInfo(self):\n\t\tprint(f'inch: &#123;self.inch&#125;inch')\n\t\tprint(f'color: &#123;self.color&#125;')\n\t\tprint(f'resolution: &#123;self.resolution&#125;')\n\t\tprint(f'smartTV: &#123;self.smartTv&#125;')\n\t\tprint(f'aiTv: &#123;self.aiTv&#125;')\n\nclass Tv4k(NormalTv):\n\tdef __init__(self,i,c,r='4k')\n\t\tsuper().__init__(i,c,r)\n\tdef setSmartTv(self, s):\n\t\tself.smartTv = s\n\nclass Tv8k(NormalTv):\n\tdef __init__(self,i,c,r='8k')\n\t\tsuper().__init__(i,c,r)\n\tdef setSmartTv(self, s):\n\t\tself.smartTv = s\n\tdef setAiTv(self, s):\n\t\tself.smartTv = s\nex.py\n\nimport smartTv as st\n\nmy4KTv = st.Tv4k('65','silver','4k')\nmy4kTv.setSmartTv('on')\nmy4kTv.turnOn()\nmy4kTv.printInfo()\nmy4kTv.turnOff()\n\nmy8KTv = st.Tv8k('75','black','8k')\nmy8kTv.setSmartTv('on')\nmy8kTv.setAiTv('on')\nmy8kTv.turnOn()\nmy8kTv.printInfo()\nmy8kTv.turnOff()\n[연습문제] 클래스(03)다음 명세서를 참고해서 도서 관리 프로그램을 만들어보자.- 도서 정보(도서명,가격,isbn)\n    - Book\n        - 속성: name, price, isbn\n- 도서저장소(도시 컨테이너, 도서 등록, 도서 삭제, 전체 도서 정보 출력, 도서 정보 출력)\n    - BookRepository\n        - 속성: bDic\n        - 기능: registBook(),removeBook(),printBooksInfo(),printBookInfo()\n\nbook.py\n\nclass Book:\n\n\tdef __init__(self,name,price,isbn):\n\t\tself.bName = name\n\t\tself.bPrice = price\n\t\tself.bIsbn = isbn\n\nclass BookRepository:\n\tdef __init__(self):\n\t\tself.bDic = &#123;&#125;\n\t\n\tdef registBook(self,b):\n\t\tself.bDic[b.bIsbn] = b\n\t\n\tdef removebook(self, isbn):\n\t\tdel self.bDic[bIsbn]\n\t\n\tdef printBooksInfo(self):\n\t\tfor isbn in self.bDic.keys():\n\t\t\tb = self.bDic[isbn]\n\t\t\tprint(f'&#123;b.bName&#125;,&#123;b.bPrice&#125;,&#123;b,bIsbn&#125;')\n\t\n\tdef printBookInfo(self, isbn):\n\t\tif isbn in self.bDic:\n\t\t\tb = self.bDic[isbn]\n\t\t\tprint(f'&#123;b.bName&#125;,&#123;b.bPrice&#125;,&#123;b,bIsbn&#125;')\n\t\telse: \n\t\t\tprint('Lookup result does not exist')\nex.py\n\nimport book as bk\n\nmyBRepository = bk.BookRepository()\n\nmyBRepository.registBook(bk.Book('python',20000,'1234567890'))\nmyBRepository.registBook(bk.Book('java',25000,'0987654321'))\nmyBRepository.registBook(bk.Book('c/c++',27000,'1029384756'))\n\nmyBRepository.printBooksInfo()\nmyBRepository.printBooksInfo('0987654321')\nmyBRepository.printBooksInfo('1029384756')\nmyBRepository.removeBook('1234567890')\n\nmyBRepository.printBooksInfo()\n[연습문제] 클래스(04)추상 클래스를 이용해서 한&#x2F;영,한&#x2F;일 사전 클래스를 만들어보자ADictionary.py\n\nfrom abc import ABCMeta\nfrom abc import abstractmethod\n\nclass AbsDictionary(metaclass=ABCMeta):\n\tdef __init__(self):\n\t\tself.wordDic = &#123;&#125;\n\t@abstractmethod\n\tdef registWord(Self,w1,w2):\n\t\tpass\n\t@abstractmethod\n\tdef removeWord(self,w1):\n\t\tpass\n\t@abstractmethod\n\tdef updateWord(self,w1,w2):\n\t\tpass\n\t@abstractmethod\n\tdef searchWord(self,w1):\n\t\tpass\n\nclass Kor2Eng(AbsDictionary):\n\tdef __init__(self):\n\t\tsuper().__init__()\n\t\n\tdef registWord(self,w1,w2):\n\t\tprint(f'[Kor2Eng]registWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2 #superior to Kor2Eng() \n\tdef removeWord(self,w1):\n\t\tprint(f'[Kor2Eng] removeWord(): &#123;w1&#125;')\n\t\tdel self.wordDic[w1]\n\t\n\tdef updateWord(self,w1,w2):\n\t\tprint(f'[Kor2Eng] updateWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2\n\t\n\tdef searchWord(self,w1):\n\t\tprint(f'[Kor2Eng] searchWord() : &#123;w1&#125;')\n\t\treturn self.wordDic[w1]\n\t\n\tdef printWords(self):\n\t\tfor k in self.wordDic.keys():\n\t\t\tprint(f'&#123;k&#125;: &#123;self.wordDic[k]&#125;')\n\nclass Kor2Jpn(AbsDictionary):\n\tdef __init__(self):\n\t\tsuper().__init__()\n\t\n\tdef registWord(self,w1,w2):\n\t\tprint(f'[Kor2Jpn]registWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2 #superior to Kor2Jpn() \n\tdef removeWord(self,w1):\n\t\tprint(f'[Kor2Jpn] removeWord(): &#123;w1&#125;')\n\t\tdel self.wordDic[w1]\n\t\n\tdef updateWord(self,w1,w2):\n\t\tprint(f'[Kor2Jpn] updateWord(): &#123;w1&#125; to &#123;w2&#125;')\n\t\tself.wordDic[w1] = w2\n\t\n\tdef searchWord(self,w1):\n\t\tprint(f'[Kor2Jpn] searchWord() : &#123;w1&#125;')\n\t\treturn self.wordDic[w1]\n\t\n\tdef printWords(self):\n\t\tfor k in self.wordDic.keys():\n\t\t\tprint(f'&#123;k&#125;: &#123;self.wordDic[k]&#125;')\nex.py\n\nimport ADictionary as dic\nkTe = dic.Kor2Eng()\nkTe.registerWord('책','book')\nkTe.registerWord('나비','butterfly')\nkTe.registerWord('연필','pencil')\nkTe.registerWord('학생','student')\nkTe.registerWord('선생님','teacher')\n\nkTe.printWords()\n\nkTe.updateWord('교수님','professor')\n[연습문제] 클래스(05)주사위 게임 클래스를 만들고 컴퓨터와 사용자의 게임 결과를 출력해 보자impert random as rd\n\nclass Dice:\n\tdef __init__(self):\n\t\tself.cNum = 0\n\t\tself.uNum = 0\n\t\n\tdef setCnum(self):\n\t\tprint('[Dice] setCnum()')\n\t\tself.cNum = rd.randint(1,6)\n\t\n\tdef setUnum(self):\n\t\tprint('[Dice] setUnum()')\n\t\tself.uNum = rd.randint(1,6)\n\t\n\tdef startGame(self):\n\t\tprint('[Dice] startgame()')\n\t\tself.setCnum()\n\t\tself.setUnum()\n\t@abstractmethod\n\tdef printResult(self):\n\t\tprint('[Dice] printResult()')\n\t\tif self.cNum == 0 or self.uNum == 0:\n\t\t\tprint('Dice scale has not been set yet.')\n\t\telse: \n\t\t\tif self.cNum &lt; self.uNum :\n\t\t\t\tprint('Computer won!')\n\t\t\telif self.cNum > self.uNum :\n\t\t\t\tprint('Player won!')\n\t\t\telif elf.cNum == self.uNum:\n\t\t\t\tprint('Draw!')\nex.py\n\nimport dice\n\ndc = dice.Dice()\ndc.startGame()\ndc.printResult()\n[연습문제] 클래스(06)from time import sleep자동차 경주 게임 클라스 만들기:자동차는 랜덤하게 이동; 편의상 10초 동안만 주행하며, 가장 멀리 이동한 자동차가 우승\n\ncar.py\n\nclass Car:\n\tdef __init__(self,n='fore car',c='red',s=200):\n\t\tself.name = n\n\t\tself.color = c\n\t\tself.max_speed = s\n\t\tself.distance = d\n\t\n\tdef printCarInfo(self):\n\t\tprint(f'name: &#123;self.name&#125;)\n\t\tprint(f'color: &#123;self.color&#125;)\n\t\tprint(f'maximum speed: &#123;self.max_speed&#125;)\n\t\n\tdef controlSpeed(self):\n\t\treturn random.randint(0,self.max_speed)\n\t\n\tdef getDistanceForHour(self):\n\t\treturn self.controlSpeed()\nracing.py\n\nfrom time import sleep\n\nclass CarRacing:\n\tdef __init__(self):\n\t\tself.cars = []\n\t\tself.rankings = []\n\tdef startRacing(self):\n\t\tfor i in range(10):\n\t\t\tprint(f'Racing: &#123;i+1&#125;바퀴')\n\t\t\tfor car in self.cars:\n\t\t\t\tcar.distance += car.getDistanceForHour()*1\n\t\t\t\tsleep(1)\n\t\t\t\tself.printCurrentCarDistance()\n\tdef printCurrentCarDistance(self):\n\t\tfor car in self.cars:\n\t\t\tprint(f'&#123;car.name&#125;: &#123;car.distance&#125;\\t\\t', end='')\n\t\t\tprint()\n\t\n\tdef addCar(self,c):\n\t\tself.cars.append(c)\nex.py\n\nfrom car_game import racing as rc\nfrom car_game import car\n\nmyCarGame = rc.CarRacing()\ncar.Car('Car01','White',250)\ncar.Car('Car02','Black',200)\ncar.Car('Car03','Red',220)\ncar.Car('Car04','Blue',280)\ncar.Car('Car05','Yellow',170)\n\nmyCarGame.addCar(car01)\nmyCarGame.addCar(car02)\nmyCarGame.addCar(car03)\nmyCarGame.addCar(car04)\nmyCarGame.addCar(car05)\n\nmyCarGame.startRacing()\n[연습문제] 클래스(07)mp3 Player 클래스를 만들고 노래를 등록한 후 재생해보자mp3player.py\n\nfrom time import sleep\n\nclass Song:\n\tdef __init__(self,t,s,pt):\n\t\tself.title = t\n\t\tself.singer = s\n\t\tself.playtime = pt\n\tdef printSongInfo(self):\n\t\tprint(f'Title: &#123;self.title&#125;')\n\t\tprint(f'Singer: &#123;self.singer&#125;')\n\t\tprint(f'Playtime: &#123;self.playtime&#125;')\n\nclass Player:\n\tdef __init__(self):\n\t\tself.songList = []\n\t\tself.isLoop = False\n\t\n\tdef addSong(self,s):\n\t\tdelf.songList.append(s)\n\t\n\tdef play(self):\n\t\tif self.isLoop:\n\t\t\twhile self.isLoop:\n\t\t\t\tfor s in self.songList:\n\t\t\t\tprint(f'Title: &#123;s.title&#125;')\n\t\t\t\tprint(f'Singer: &#123;s.singer&#125;')\n\t\t\t\tprint(f'Playtime: &#123;s.playtime&#125;sec')\n\t\t\t\tsleep(s.playtime)\n\t\n\tdef shuffle(self):\n\t\trandom.shuffle(self.songList)\n\t\n\tdef setIsLoop(self,flag):\n\t\tself.isLoop = flag\nex.py\n\nimport mp3player as mp3\n\ns1 = mp3.Song('Light Switch','CP',3)\ns2 = mp3.Song('That\\'s Hilarious','CP',2)\ns3 = mp3.Song('Dangerously','CP',3)\ns4 = mp3.Song('There\\'s A First Time For Everything,'CP',3)\ns5 = mp3.Song('Smells Like Me','CP',3)\n\nplayer = mp3.Player()\nplayer.addSong(s1)\nplayer.addSong(s2)\nplayer.addSong(s3)\nplayer.addSong(s4)\nplayer.addSong(s5)\n\nplayer.setIsLoop(False)\nplayer.shuffle()\nplayer.play()\n[연습문제] 예외처리(01)[연습문제] 예외처리(02)[연습문제] 예외처리(03)[연습문제] 예외처리(04)[연습문제] 예외처리(05)[연습문제] 텍스트 파일(01)","slug":"zeroBase-DS-3rd-01","date":"2023-03-13T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2be23b8612c2e5659a5176de7fad3d20","title":"zeroBase_DS 2주차 금요일 스터디노트","content":"2nd WeekFridaytext file 작성open(),read(),write(),close()를 이용한 텍스트 파일 다루기\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w') # 없으면 생성\nstrCnt = file.wrote('Hello world!')\nprint(f'strCnt: &#123;strCnt&#125;')\n\nfile.close()\n다음과 같이 시스템 시간과 일정을 텍스트 파일에 작성해보자.import time\nlt = time.localtime()\ndateStr = '[' + str(lt.tm_year)+ '년'+\\str(lt.tm_mon) + '월' +\\str(lt.tm_mday)+'일]'\n\ntodaySchedule = input('오늘 일정: ')\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w')\nfile.write(dateStr+todaySchedule)\nfile.close()\nimport time\nlt = time.localtime()\n\ndateStr = '[' + str(lt.tm_year)+'년'+str(lt.tm_mon)+'월'+str(lt.tm_day)+'일]'\n\ntodaySchedule = input('오늘 일정: ')\n\nopen('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt'','w')\ntext file 리딩import time\nlt = time.localtime()\ndateStr = time.strtime('%Y-%m-%d %H:%M:%S %p') #p = a.m or p.m\n\ntodaySchedule = input('오늘 일정: ')\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonTxt/test.txt','w')\nfile.write(dateStr+todaySchedule)\nfile.close()\n다음 텍스트 파일에서 ‘Python’을 ‘파이썬’으로 변경해서 파일에 다시 저장해보자.텍스트 파일 내용:\n\n\nfile = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/test.txt','r',encoding='UTF8')\n\nstr = file.read()\nprint(f'str: &#123;str&#125;')\n\nfile.close()\n\nstr = str.replace('Python','파이썬',2)\nprint(f'str: &#123;str&#125;')\n\ntext file 오픈file mode는 파일을 어떤 목적으로 open할지 정한다.- &#39;w&#39;: 쓰기 전용(파일이 있으면 덮어씌움,존재하지 않으면 새로운 파일 생성)\n- &#39;a&#39;: 쓰기 전용(파일이 있으면 덧붙임_append)\n- &#39;x&#39;: 쓰기 전용(파일이 있으면 에러 발생)\n- &#39;r&#39;: 읽기 전용(파일이 없으면 에러 발생)\n\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n# file mode 'w'\nfile = open(uri+'hello.txt'.'w')\nfile.write('Hello Python!')\nfile.close()\n# file mode 'a'\nfile = open(uri+'hello.txt','a')\nfile.write('\\n Nice to meet you!')\nfile.close()\n# file mode 'r'\nfile = open(uri+'hello.txt','a')\nstr = file.read()\nprint(f'str: &#123;str&#125;')\nfile.close()\n사용자가 입력한 숫자까지의 모든 소수를 구하고 이를 파일에 작성해보자uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\ndef appendPrimeNum(n)\n\tfile = open(uri + 'primeNumbers.txt','a')\n\tfile.write(str(n))\n\tfile.write('\\n')\n\tfile.close()\n\ninputNumber = int(input(\"0보다 큰 정수 입력: \"))\n\nfor number in range(2,(inputNmber+1)):\n\tflag = True\n\tfor n in range(2,(inputNumber+1)):\n\t\tflag = True\n\t\tfor n in range(2,number):\n\t\t\tif number % n == 0:\n\t\t\t\tflag = False \n\t\t\t\tbreak\n\t\tif (flag):\n\t\t\tappendPrimeNum(number)\nwith ~ as문 추천with~as 문을 이용하면 file.close()를 생략할 수 있다.uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nfile = open(uri+'balabala.txt','a')\nfile.write('YOU NEED PYTHON')\nfile.close()\n를\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'balabala.txt','a') as f:\n\tf.write('YOU NEED PYTHON')\n로\n로또 번호 생성 프로그램을 만들고 파일에 번호를 출력해 보자.import random\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\ndef writeNumbers(nums):\n\tfor idx,num in enumerate(nums):\n\t\twith open(uri+'lotto.txt','a') as f:\n\t\tif idx &lt; len(nums)-2:\n\t\t\tf.write(str(num)+', ')\n\t\telif idx = len(nums):\n\t\t\tf.write(str(num))\n\t\telif idx = len(nums)-1:\n\t\t\tf.write('\\n')\n\t\t\tf.write('Bonus number: '+str(num))\n\t\t\tf.write('\\n')\nrNums = random.sample(range(1,46),7)\nprint(f'rNums:&#123;rNums&#125;')\nwritelines()writelines()는 List 또는 Tuple 데이터를 파일에 쓰기 위한 함수이다.languages = ['c/c++','java','c#','python','javascript']\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\nfor i in languages:\n\twith open(uri+'languages.txt','a') as f:\n\t\tf.write(i)\n\t\tf.write('\\n')\n를\nlanguages = ['c/c++','java','c#','python','javascript']\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n\nwith open(uri+'languages.txt','a') as f:\n\tf.writelines(languages)\n로\n딕셔너리에 저장된 과목별 점수를 파일에 저장하는 코드를 작성하자.scoreDic = &#123;'kor':85,'eng':90,'mth':92,'sci':79,'his':82&#125; #keys&amp;values\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nfor key in scoreDic.keys(): \n\twith open(uri+'scoreDic.txt','a') as f:\n\t\tf.write(key+'\\t: '+str(scoreDic[key])+'\\n')\nscoreDic = &#123;'kor':85,'eng':90,'mth':92,'sci':79,'his':82&#125; #keys&amp;values\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\n# 통으로 다 출력\nwith open(uri+'scores.txt'+'a') as f:\n\tprint(scoreDic,file=f)\nreadlines(), readline()readlines(): 파일의 모든 데이터를 읽어서 리스트 형태로 반환uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'lans.txt','r') as f:\n\tlanList = f.readlines()\n# &lt;lans.txt>\n# hello python\n# hello c/c++\n# hello java\n# hello javascript\nprint(f'lanList: &#123;LanList&#125;')\nprint(f'lanList Type: &#123;type&#123;LanList&#125;&#125;')\n# lanList: ['hello python\\n', 'hello c/c++\\n', 'hello java\\n', 'hello javascript\\n']\n# lanList type: &lt;class 'list'>\nreadline()uri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri+'lans.txt','r') as f:\n\tlanList = f.readline()\n\twhile line != '':\n\t\tprint(f'line: &#123;Line&#125;',end='')\n\t\tline = f.readline()\n파일에 저장된 과목별 점수를 파이썬에서 읽어, 딕셔너리에 저장하는 코드를 만들어보자.# &lt;scores.txt>\n# kor:85\n# eng:90\n# mth:92\n# sic:79\n# his:82\nscoreDic = &#123;&#125;\nuri = '/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/'\nwith open(uri + 'scores.txt','r') as f:\n\tline = f.readline()\n\twhile line != '':\n\t\ttempList = line.split(':')\n\t\t# tempList : ['kor','85\\n']\n\t\t# ...\n\t\tscoreDic[tempList[0]=int(tempList[1].strip('\\n'))]\n\t\t# tempList : ['kor','85']\n\t\t# ...\n\t\t\n\t\tline = f.readline()\n\t\t# scoreDic : &#123;'kor':85, ..., 'his': 82&#125;\nprint(f'scoreDic: &#123;scoreDic&#125;')\n[연습문제]함수01계산기 만들기def add(n1,n2)\n\treturn n1+n2\ndef sub(n1,n2)\n\treturn n1-n2\ndef mul(n1,n2)\n\treturn(n1*n2)\ndef div(n1,n2)\n\treturn(n1/n2)\ndef mod(n1,n2)\n\treturn (n1%n2)\ndef flr(m1,n2)\n\treturn (n1//n2)\ndef exp(n1,n2)\n\treturn (n1**n2)\n\nwhile True: \n\tprint('-'*60)\n\ttry: \n\t\tselectNum = int(input('1.+(덧셈) 2.-(뺄셈) 3.*(곱셈) 4./(나눗셈) 5.%(몫) 6.//(나머지) 7.^(제곱) 8.종료'))\n\t\tif selectNum == 8:\n\t\t\tprint('Okay bye...')\n\t\t\tbreak\n\texcept: \n\t\tprint('숫자를 입력해 주세요.')\n\telse:\n\t\tnum1 = int(input('첫번째 숫자 입력: '))\n\t\tnum2 = int(input('두번째 숫자 입력: '))\n\t\tif selsctNum == 1:\n\t\t\tprint(f'&#123;num1&#125;+&#123;num2&#125;=&#123;add(num1,num2)&#125;')\n\t\tif selsctNum == 2:\n\t\t\tprint(f'&#123;num1&#125;-&#123;num2&#125;=&#123;sub(num1,num2)&#125;')\n\t\tif selsctNum == 3:\n\t\t\tprint(f'&#123;num1&#125;*&#123;num2&#125;=&#123;mul(num1,num2)&#125;')\n\t\tif selsctNum == 4:\n\t\t\tprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;div(num1,num2)&#125;')\n\t\tif selsctNum == 5:\n\t\t\tprint(f'&#123;num1&#125;%&#123;num2&#125;=&#123;mod(num1,num2)&#125;')\n\t\tif selsctNum == 6:\n\t\t\tprint(f'&#123;num1&#125;//&#123;num2&#125;=&#123;flr(num1,num2)&#125;')\n\t\tif selsctNum == 7:\n\t\t\tprint(f'&#123;num1&#125;^&#123;num2&#125;=&#123;exp(num1,num2)&#125;')\n[연습문제]함수02다음과 같이 출력될 수 있도록 이동거리와 이동시간을 반환하는 함수를 만들어 보자.\n------------------------------------\n속도(km/h) 입력: 90\n시간(h) 입력: 2\n시간(m) 입력: 45\n90.0(km/h)속도로 2.0(h)시간 45.0(m)분 동안 이동한 거리: 247.5(km)\n------------------------------------\n\ndef getDistance(speed, hour, minute):\n\tdistance = speed *(hour+minute/60)\n\treturn distance\nprint('-'*60)\ns = float(input('속도(km/h)입력: ')\nh = float(input('시간(h)입력: ')\nm = float(input('시간(m)입력: ')\nd = getDistance(s,h,m)\nprint(f'&#123;s&#125;(km/h)속도로 &#123;h&#125;(h)시간 &#123;m&#125;(m)분 동안 이동한 거리: &#123;d&#125;(km)')\nprint('-'*60)\n[연습문제]함수03다음과 같이 출력될 수 있도록 비행기 티켓 영수증 출력 함수를 만들어보자.====================================\n유아 1명 요금: 18,000원\n유아 할인 대상 1명 요금: 9,000원\n소아 2명 요금: 50,000원\n소아 할인 대상 1명 요금: 100,000원\n성인 할인 대상 0명 요금: 0원\n====================================\nTotal: 7명\nTotalPrice: 189,500원\n====================================\n\ndef formatedNum(n):\n\treturn format(n,',')\n\nchildPrice = 10000\nadolescentPrice = 25000\nadultPrice = 50000\nspecialDC = 50\n\ndef printAirplaneReceipt(c1,c2,i1,i2,a1,a2):\n\tcp = c1 + childPrice\n\tcp_dc = int(c2 * childPrice*0.5)\n\tprint(f'유아&#123;c1&#125;명 요금: &#123;cp&#125;원')\n\tprint(f'유아 할인 대상 &#123;c2&#125;명 요금: &#123;cp_dc&#125;원')\n\tip = i1+adolescentPrice\n\tip_dc = int(i2 *  adolescentPrice*0.5)\n\tprint(f'청소년&#123;i1&#125;명 요금: &#123;ip&#125;원')\n\tprint(f'청소년 할인 대상 &#123;i2&#125;명 요금: &#123;ip_dc&#125;원')\n\tap = a1 + adultPrice\n\tap_dc = int(a2 * adultPrice*0.5)\n\tprint(f'성인&#123;a1&#125;명 요금: &#123;ap&#125;원')\n\tprint(f'성인 할인 대상 &#123;a2&#125;명 요금: &#123;ap_dc&#125;원')\n\t\n\tchildCnt = int(input('유아 명수 입력: '))\n\tcountSpecialDcChild = int(input('할인 대상 유아 명수 입력: '))\n\tadolescentCnt = int(input('청소년 명수 입력: '))\n\tcountSpecialDcadolescent = int(input('할인 대상 청소년 명수 입력: '))\n\tadultCnt = int(input('성인 명수 입력: '))\n\tcountSpecialDcadult = int(input('할인 대상 성인 명수 입력: '))\n\t\n\tprint(f'Total: &#123;c1+c2+i1+i2+a1+a2&#125;명')\n\tprint(f'TotalPrice: &#123;cp+cp_dc+ip+ip_dc+ap+ap_dc&#125;)\n\n\nprintAirplaneReceipt(childCnt,countSpecialDcChild,adolescentCnt,countSpecialDcadolescent,adultCnt,countSpecialDcadult)\n[연습문제]함수04단리&#x2F;월복리 계산기 함수 만들기def formatedNum(n):\n\treturn format(n,',')\n# 단리\ndef simpleInterestCalculator(n,t,r):\n\ttotalMoney = 0\n\ttotalMoneyRate = 0\n\tfor i in range(t):\n\t\ttotalMoney += n *(r*0.01)\n\ttotalMoney = n + totalMoneyRate\n\treturn int(totalMoney)\n# 월복리\ndef compoundInterestCalculator(n,t,r):\n\tt *= 12\n\trpn = (r/12)*0.01\n\ttotalMoney = 0\n\tfor i in range(t):\n\t\ttotalMoney += totalMoney * rpm\n\treturn int(totalMoney)\nmoney = int(input('예치금(원): '))\nterm = int(input('기간(년): '))\nrate = int(input('연이율(%): '))\nprint('='*30)\nprint('[단리 계산기]')\nprint(f'&#123;term&#125;년 후 총 수령액: &#123;simpleInterestCalculator(money,term,rate)&#125;)\nprint('-'*30)\nprint('[복리 계산기]')\nprint(f'&#123;term&#125;년 후 총 수령액: &#123;compoundInterestCalculator(money,term,rate)&#125;)\n[연습문제]함수05등차수열의 n번째 값과 합을 출력하는 함수를 만들어보자def arithmeticSequence(n1,d,n):\n\tvalueN = 0; sumN = 0;\n\ti = 1\n\twhile i &lt;= n:\n\t\tif i == 1:\n\t\tvalueN = n1\n\t\tsumN += valueN\n\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tprint(f'&#123;i&#125;번째 항까지의 값: &#123;sumN&#125;')\n\t\ti += 1\n\t\tcontinue\n\tvalue += d\n\tsumN += valueN\n\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\tprint(f'&#123;i&#125;번째 항까지의 값: &#123;sumN&#125;')\n\ti +=1\n\ninputN1 = int(input('a1 입력: '))\ninputD = int(input('공차 입력: '))\ninputN = int(input('n 입력: '))\narithmeticSequence(inputN1,inputD,inputN)\n[연습문제]함수06등비수열의 n번째 값과 합을 출력하는 함수를 만들어보자def geometricSequence(n1,r,n):\n\tvalueN = 0; sumN = 0;\n\ti = 1\n\twhile i &lt;= n:\n\t\tif i == 1:\n\t\t\tvalueN = n1\n\t\t\tsumN = valueN\n\t\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\t\tprint(f'&#123;i&#125;번째 항까지의 합: &#123;sumN&#125;')\n\t\t\ti += 1\n\t\t\tcontinue\n\t\tvalueN *= r\n\t\tsumN += valueN\n\t\tprint(f'&#123;i&#125;번째 항의 값: &#123;valueN&#125;')\n\t\tprint(f'&#123;i&#125;번째 항까지의 합: &#123;sumN&#125;')\n\t\ti += i\n\ninputN1 = int(input('a1 입력: '))\ninputR = int(input('공비 입력: '))\ninputN = int(input('n 입력: '))\ngeometricSequence(inputN1,inputR,inputN)\n[연습문제] 모듈01과목별 점수를 입력하면 합격 여부를 출력하는 모듈을 만들어보자.def examResults(s1,s2,s3,s4,s5):\n\tpassScore = 60; failScore = 46\n\tdef getTotal:\n\t\ttotalScore = (s1+s2+s3+s4+s5)\n\t\tprint('Total score: &#123;&#125;'.foramt(totalScore))\n\t\treturn getTotal\n\tdef getAvg():\n\t\tavgScore = getTotal() / 5\n\t\tprint(f'평균: &#123;avgScore&#125;')\n\t\treturn avgScore\n\tdef printPassOrFail():\n\t\tprint(f'&#123;s1&#125;: Passed') if s1>=passScore else print(f'&#123;s1&#125;: Failed')\n\t\tprint(f'&#123;s2&#125;: Passed') if s1>=passScore else print(f'&#123;s2&#125;: Failed')\n\t\tprint(f'&#123;s3&#125;: Passed') if s1>=passScore else print(f'&#123;s3&#125;: Failed')\n\t\tprint(f'&#123;s4&#125;: Passed') if s1>=passScore else print(f'&#123;s4&#125;: Failed')\n\t\tprint(f'&#123;s5&#125;: Passed') if s1>=passScore else print(f'&#123;s5&#125;: Failed')\n\tdef printWhetherPassedFinal():\n\t\tif getAverage()>=passScore:\n\t\t\tif s1>=passScore and s2>=passScore and s3>=passScore and s4>=passScore and s5>=passScore:\n\t\t\t\tprint('You passed final exams.')\n\t\t\telse:\n\t\t\t\tprint('You failed some  final exams.')\n\t\telif getAverage()&lt;49 and getAverage()>failScore: \n\t\t\tprint('You have failed some final exams, however, your assessment was considered marginally acceptable.')\n\t\telif getAverage()&lt; failScore:\n\t\t\tprint('We hope see you again!')\n\n[연습문제] 모듈02상품 구매 개수에 따라 할인율이 결정되는 모듈을 만들고, 다음과 같이 계산 결과가 출력되는 프로그램을 만들어보자\n\n\n구매개수\n1개\n2개\n3개\n4개\n5개 이상\n\n\n\n할인율(%)\n5\n10\n15\n20\n25\n\n\n\n\n\n\n\n\n\n\n\ndiscount.py\ndef TotalPriceCalculator(gs):\n\tif len(gs) &lt;= 0:\n\t\tprint('구매 상품이 없습니다.')\n\t\treturn\n\t\n\trate = 25\n\ttotalPrice = 0\n\trates = &#123;1:5,2:10,3:15,4:20&#125;\n\tif len(gs) in rates:\n\t\trate = rates[(len(gs))]\n\tfor g in gs:\n\t\ttotalPrice += g *(1-rate*0.01)\n\treturn[rate,int(totalPrice)]\n\ndef formatedNum(n):\n\treturn format(n,',')\n\n\n\n\n\n\n\n\n\nex.py\nimport discount as dc\nif __name__ == 'main':\n\tflag = True\n\tgs = []\n\twhile flag:\n\t\tselectNum = int(input('1.구매 2.종료'))\n\t\tif selectNum == 1:\n\t\t\tgoodsPrice = int(input('상품 가격 입력: '))\n\t\t\tgs.append(goodsPrice)\n\t\telif selectNum ==2:\n\t\t\tresult = dc.TotalPriceCalculator(gs)\n\t\t\tflag = False\n\tprint(f'할인율: &#123;result[0]&#125;%')\n\tprint(f'합계: &#123;dc.formatedNum(result[1])&#125;원')\n[연습문제] 모듈03로또 모듈을 만들어보자lotto.py\n\nimport random as rd\nuserNums = []; randNums = []; cllctNums = []\nrandBnsNum = 0\n\ndef setUserNums(ns):\n\tglobal userNums\n\tuserNums = ns\n\ndef getUserNums():\n\treturn userNums\n\ndef setRandNums():\n\tglobal randNums\n\trandNums = rd.sample(range(1,46),6)\n\ndef getRandNums():\n\treturn randNums\n\ndef setBnsNums():\n\tglobal randBnsNum\n\twhile True:\n\t\trandBnsNum = rd.randint(1,45)\n\t\tif randBnsNum not in randBnsNum:\n\t\t\tbreak\n\ndef getBonusNum():\n\treturn randBnsNum\n\ndef lottoResult():\n\tglobal userNums\n\tglobal randNums\n\tglobal cllctNums\n\tcllctNums = []\n\t\n\tfor un in userNums:\n\t\tif un in randNums:\n\t\t\tcllctNums.append(un)\n\t\n\tif len(cllctNums) == 6:\n\t\tprint('축하합니다, 1등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif (len(cllctNums)==5) and (randBnsNum in userNums):\n\t\tprint('축하합니다, 2등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\t\tprint(f'보너스번호: &#123;randBnsNums&#125;')\n\telif len(cllctNums) == 5:\n\t\tprint('축하합니다, 3등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif len(cllctNums) == 4:\n\t\tprint('축하합니다, 4등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telif len(cllctNums) == 3:\n\t\tprint('축하합니다, 5등입니다.')\n\t\tprint(f'번호: &#123;cllctNums&#125;')\n\telse: \n\t\tprint('아쉽지만 다음기회를 노려보세요.')\n\t\tprint(f'기계 번호: &#123;randNums&#125;')\n\t\tprint(f'보너스 번호: &#123;randBnsNum&#125;')\n\t\tprint(f'선택 번호:&#123;userNums&#125;')\n\t\tprint(f'일치 번호: &#123;cllctNums&#125;')\n\ndef startLotto():\n\tn1 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn2 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn3 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn4 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn5 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tn6 = int(input('1~45 중 하나의 숫자를 입력해주세요:'))\n\tselectNums = [n1,n2,n3,n4,n5,n6]\n\tsetUserNums(selectNums)\n\tsetRandNums()\n\tsetBnsNums()\nex.py\n\nimport lotto as lt\nlt.startLotto()\n\n","slug":"zeroBase-DS-2nd-05","date":"2023-03-10T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"62e5d5ac162c18c07ba1d1ebd3f01fe8","title":"zeroBase_DS 2주차 목요일 스터디노트","content":"2nd WeekThursday객체와 메모리(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다.\n국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸을 경우에 평균을 출력해 보자.scores = [int(input('국어 점수 입력: ')), int(input('영어 점수 입력: ')), int(input('수학 점수 입력: '))]\n\nprint(scores)\n\ncopyScores = scores.copy()\nfor idx, score in enumerate(copyScores):\n\tresult = score * 1.1\n\tcopyScores[idx] = 100 if result > 100 else result\n\nprint(f'이전 평균: &#123;sum(scores) / len(scores)&#125;')\nprint(f'이후 평균: &#123;sum(copyScores) / len(copyScores)&#125;')\n얕은복사와 깊은복사얕은복사는 객체 주소를 복사하는 것이므로 객체 자체가 복사되지 않는다.깊은복사는 객체 자체를 복사하는 것으로 또하나의 객체가 만들어진다.class TenCls:\n\n\tdef __init__(self, n, s):\n\t\tself.number = n\n\t\tself.str = s\n\tdef printClsInfo(self):\n\t\tprint(f'self.number: &#123;self.number&#125;')\n\t\tprint(f'self.str: &#123;self.str&#125;')\n# 얕은 복사\ntc1 = TenCls(10,\"Hello\")\ntc2 = tc1\n\ntc1.printClsInfo()\ntc2.printClsInfo()\n# 깊은 복사\nimport copy\n\nscores = [9,8,7,6,5,4]\nscoresCopy = []\n# scoresCopy = scores\n# print(f'id(scores): &#123;scores&#125;')\n# print(f'id(scoresCopy): &#123;scoresCopy&#125;')\nfor i in scores: #깊은복사\n\tscoresCopy.append(i)\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy.extend(scores) #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy= scores.copy() #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n\nscoresCopy = scores[:] #깊은복사\nprint(f'id(scores): &#123;scores&#125;')\nprint(f'id(scoresCopy): &#123;scoresCopy&#125;')\n클래스 상속클래스는 또 다른 클래스를 상속해서 내 것처럼 사용할 수 있다.class NormalCar():\n\tdef drive(self):\n\t\tprint('[NormalCar] drive() called!')\n\tdef back(self):\n\t\tprint('[NormalCar] back() called!')\n\nclass TurboCar(NormalCar): # 상속!\n\tdef turbo(self):\n\t\tprint('[TurboCar] turbo() called!')\n\nmyTurboCar = TurboCar()\n\nmyTurboCar.drive()\nmyTurboCar.back()\nmyTurboCar.turbo()\n생성자01객체가 생성될 때 생성자를 호출하면 __init__()가 자동 호출된다.class Calculator: #2 Calculator 생성자 호출\n  #3 Calculator __init__ 호출\n\tdef __init__(self): \n\t\tprint('[Calculator] __init__() called!')\n\ncal = Calculator() #1\nParentClassclass ParentClass:\n\tdef __init__(self,pNum1,pNum2):\n\t\tprint('[ParentClass] __init() called!')\n\tself.pNum1 = pNum1\n\tself.pNum2 = pNum2\n\nclass ChildClass(ParentClass):\n\tdef __init__(self,cNum1,cNum2)\n\t\tprint('[ChildClass] __init__() called!')\n\tself.cNum1 = cNum1\n\tself.cNum2 = cNum2\n\n# result : [ChildClass] __init__() called! \n# 앞서 불려진 __init__(self,pNum1,pNum2)가\n# 뒤에서 __init__(self,cNum1,cNum2)가 호출되면서\n# 初始化됐기 때문. 따라서 pNum1같은 속성값 사용 불가\n# 해결 방법: \n#class ChildClass(ParentClass):\n#\tdef __init__(self,cNum1,cNum2)\n#\t\tprint('[ChildClass] __init__() called!')\n#   # 여기에 강제로 호출해서 초기화를 다시 시켜주기 \n#   ParentClass.__init__(self,cNum1,cNum2)\n# # 또는 이거 \n#   super().__init__(self,cNum,cNum2)\n#\tself.cNum1 = cNum1\n#\tself.cNum2 = cNum2\n생성자02중간고사 클래스와 기말고사 클래스를 상속관계로 만들고 각각의 점수를 초기화하자. 또한 총점 및 평균을 반환하는 기능도 만들어보자.class Midterm:\n\tdef __init__(self,s1,s2,s3):\n\t\tprint('[Midterm] __init__()')\n\t\tself.midKorScore = s1\n\t\tself.midEngScore = s2\n\t\tself.midMthScaore = s3\n\tdef printScores(self):\n\t\tprint(f'midKorScore: &#123;self.midKorScore&#125;')\n\t\tprint(f'midEngScore: &#123;self.midEngScore&#125;')\n\t\tprint(f'midMthScore: &#123;self.midMthScore&#125;')\n\nclass Finals(Midterm):\n\tdef __init__(self,s1,s2,s3,s4,s5,s6):\n\t\tprint('[Finals] __init__()')\n\t\t\n\t\tsuper().__init__(s1,s2,s3)\n\t\t\n\t\tself.finalKorScore = s4\n\t\tself.finalEngScore = s5\n\t\tself.finalMthScore = s6\n\t\n\tdef printScores(self):\n\t\tsuper().printScores()\n\t\tprint(f'midKorScore: &#123;self.midKorScore&#125;')\n\t\tprint(f'midEngScore: &#123;self.midEngScore&#125;')\n\t\tprint(f'midMthScore: &#123;self.midMthScore&#125;')\n\t\n\tdef getTotalScore(self):\n\t\ttotal = self.midKorScore + self.midEngScore + self.midMthScore\n\t\ttotal += self.finalKorScore + self.finalEngScore + self.finalMthScore\n\t\t\n\t\treturn total \n\t\n\tdef getAvgScore(self):\n\t\treturn self.getTotalScore() / 6\n\nexam = Finals(85,90,98,96,90,97) #객체생성\n다중 상속class Car01:\n\tdef drive(self):\n\t\tprint('drive() method is called!')\n\nclass Car02:\n\tdef turbo(self):\n\t\tprint('turbo() method is called!')\n\nclass Car03:\n\tdef drift(self):\n\t\tprint('drift() method is called!')\n\nclass Car(Car01,Car02,Car03)\n\tdef __init__(self):\n\t\tpass\n\nmyCar = Car()\nmyCar.drive()\nmyCar.turbo()\nmyCar.drift()\n\nclass BasicCalculator:\n\tdef add(self,n1,n2):\n\t\treturn n1+n2\n\n\tdef sub(self,n1,n2):\n\t\treturn n1-n2\n\n\tdef mul(self,n1,n2):\n\t\treturn n1*n2\n\n\tdef div(self,n1,n2):\n\t\treturn n1 / n2\n\nclass DeveloperCalculator:\n\tdef mod(self,n1,n2):\n\t\treturn n1 % n2\n\n\tdef flo(self,n1,n2):\n\t\treturn n1 // n2\n\n\tdef div(self,n1,n2):\n\t\treturn n1 ** n2\n\nclass NewCalculator(BasicCalculator,DeveloperCalculator):\n\tdef __init__(self):\n\t\tpass\n\ncal = NewCalculator()\n\n오버라이딩하위클래스에서 상위클래스의 메서드를 재정의(override)한다.class Robot:\n\tdef __init__(self,c,h,w):\n\t\tself.color = c\n\t\tself.height = h\n\t\tself.weight = w\n\tdef fire(self):\n\t\tprint('총알 발사!')\n\nclass NewRobot(Robot):\n\tdef __init__(self,c,h,w):\n\t\tsuper().__init__(c,h,w)\n\tdef fire(self):\n\t\tsuper().fire()\n\t\tprint('레이저 발사!!!')\nmyRobot = NewRobot('red',200,200)\nmyRobot.fire()\n삼각형 넓이를 계산하는 클래스를 만들고 이를 상속하는 클래스에서 getArea()를 override해서 출력 결과가 다음과 같을 수 있도록 클래스를 만들어보자.class TriangleArea:\n\tdef __init__(self,w,h):\n\t\tself.width = w\n\t\tself.height = h\n\tdef printTriangleAreaInfo(self):\n\t\tprint(f'self.width: &#123;self.width&#125;')\n\t\tprint(f'self.height: &#123;self.height&#125;')\n\tdef getArea(self):\n\t\treturn self.width * self.height / 2\n\nclass NewTriangleArea(TriangleArea):\n\tdef __init__(self,w,h):\n\t\tsuper().__init__(w,h)\n\tdef getArea(self):\n\t\treturn str(super().getArea())+'㎠'\ntA = NewTriangleArea(7,4)\ntA.printTriangleAreaInfo()\ntriangleArea = tA.getArea()\nprint(f'triangleArea: &#123;triangleArea&#125;')\n추상클래스상위 클래스에서 하위 클래스에 메서드 구현을 강요한다.from abc import ABCMeta\nfrom abc import abstractmethod\n\nclass AirPlane(metaclass=ABCMeta):\n\t@abstractmethod\n\tdef fly(self):\n\t\tpass\n\tdef forward(self):\n\t\tprint('전진')\n\tdef backward(self):\n\t\tprint('후진')\n\nclass Airliner(AirPlane):\n\tdef __init__(self,c):\n\t\tself.color = c\n\tdef fly(self):\n\t\tprint('시속 400km/h 비행!')\n\nclass fighterPlane(AirPlane):\n\tdef __init__(self,c):\n\t\tself.color = c\n\tdef fly(self):\n\t\tprint('시속 700km/h 비행!')\n\naL = Airliner('white')\n\n계산기 추상 클래스를 만들고 이를 이용해서 새로운 계산기 클래스를 만들어 보자. 추상 클래스에는 덧셈,뺄셈,곱셈,나눗셈 기능이 선언되어 있어야 한다.class Calculator(metaclass=ABCMeta):\n\t@abstractmethod\n\tdef add(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef sub(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef mul(self,n1,n2):\n\t\tpass\n\t@abstractmethod\n\tdef div(self,n1,n2):\n\t\tpass\nclass DeveloperCalculator(Calculator):\n\tdef add(self,n1,n2)\n\t\tprint(n1+n2)\n\tdef sub(self,n1,n2)\n\t\tprint(n1-n2)\n\tdef mul(self,n1,n2)\n\t\tprint(n1*n2)\n\tdef div(self,n1,n2)\n\t\tprint(n1/n2)\n\tdef mod(self,n1,n2)\n\t\tprint(n1%n2)\n\tdef flo(self,n1,n2)\n\t\tprint(n1//n2)\n예외란?문법적인 문제는 없으나 실행 중 발생하는 예상하지 못한 문제- ZeroDivisionError: division by zero\n\n예외 관련 클래스는 Exception 클래스를 상속한다.Exception\n    - Arithmetic Error\n        - ZeroDivisionError\n    - Environment Error\n        - IOError\n    - Lookup Error\n        - IndexError\n    - Syntax Error\n        - IndentationError\n\n예외처리예상하지 못한 예외가 프로그램 전체 실행에 영향이 없도록 처리함예외 발생 예상 구문을 try ~ except로 감싼다.\n\n\n사용자로부터 숫자 5개를 입력받을 때, 숫자가 아닌 자료형이 입력되면 예외 처리하는 프로그램을 만들어보자.nums = []\nn = 1\nwhile n &lt; 6:\n\ttry:\n\tnum = int(input('input number: '))\n\texcept:\n\t\tprint('예외 발생!')\n\t\tcontinue\n\t\n\tnums.append(num)\n\tn += 1\nprint(f'nums: &#123;nums&#125;')\n\ntry~except~else에서 else 는 예외가 발생하지 않은 경우 실행nums = []\nn = 1\n\nwhile n &lt; 6:\n\ttry:\n\tnum = int(input('Input an even number: '))\n\texcept:\n\t\tprint('Exception has occured!')\n\t\tcontinue\n\telse: \n\t\tif num % 2 == 0:\n\t\t\tnums.append(num)\n\t\t\tn += 1\n\t\telse: \n\t\tprint('You\\'ve entered an odd number.',end=\"\")\n\t\tprint('Please re-enter.')\n\t\tcontinue\n\nprint(f'nums: &#123;nums&#125;')\n사용자로부터 숫자 5개를 입력받아 짝수,홀수,실수로 구분해서 각각을 리스트에 저장하는 프로그램을 만들어보자.evenList=[];oddList=[];floatList=[]\nn=1\nwhile n &lt; 6:\n\ttry:\n\tnum = float(input('Input a number: '))\n\texcept:\n\t\tprint('Exception has occured!')\n\t\tprint('Please re-enter a number.')\n\t\tcontinue\n\tif num - int(num) != 0:\n\t\tprint('A float number has been input(ted).')\n\t\tfloatList.append(num)\n\t\tn += 1\n\telse: \n\t\tif num % 2 == 0:\n\t\t\tprint('An even number has been input(ted).')\n\t\t\tevenList.append(int(num))\n\t\t\tn += 1\n\t\telse: \n\t\t\tprint('A odd number has been input(ted).',end=\"\")\n\t\t\toddList.append(int(num))\n\t\t\tn += 1\n\n\n\n\nfinally예외 발생과 상관없이 항상 실행한다.주로 외부자원을 이용해서 작업할 때 사용(외부자원이므로 예외가 발생하던 않던 연결을 끊어줘야 함)\ne.외부 서버라던가.. AWS라던가... \n\ntry: \n\tinputData = input('input number: ')\n\tnumInt = int(inputData)\nexcept: \n\tprint('An exception has occured!')\n\tprint('Input(ted) datum is not a number.')\n\tnumInt = 0\nelse: \n\tif numInt % 2 == 0:\n\t\tprint('input(ted) datum is an even number!')\n\telse: \n\t\tprint('input(ted) datum is a odd number!')\nfinally:\n\tprint(f'input(ted) data: &#123;inputData&#125;')\nQ. 사용자로부터 숫자 5개를 입력받아 짝수,홀수, 실수와 입력한 모든 데이터를 각각 출력하는 프로그램을 만들어 보자.evenList=[]; oddList=[]; floatList=[]\nnumList=[]; \nn = 1\nwhile n &lt; 6:\n\ttry: \n\t\tdatum = float(input('Please input a number: '))\n\texcept:\n\t\tprint('An exception has occured.')\n\t\tprint('Please reenter a number.')\n\t\tcontinue\n\telse:\n\t\tif datum - int(datum) != 0:\n\t\t\tprint('A float number was input(ted).')\n\t\t\tfloatList.append(datum)\n\t\telse: \n\t\t\tif datum % 2 == 0:\n\t\t\t\tprint('An even integer was input(ted).')\n\t\t\t\tevenList.append(int(datum))\n\t\t\telse: \n\t\t\t\tprint('An odd integer was input(ted).')\n\t\t\t\toddList.append(int(datum))\n\t\tn += 1\n\tfinally:\n\t\tnumList.append(datum)\nException classtry: ~ except Exception as e:num1 = int(input('input number1: '))\nnum2 = int(input('input number2: '))\n\ntry: \n\tprint(f'num1 / num2 = &#123;num1 / num2&#125;')\nexcept Exception as e:\n\tprint('ZeroDivision Error would occur.')\n\tprint(f'exception: &#123;e&#125;')\nraise 키워드를 이용하면 예외를 발생시킬 수 있다.def divCalculator(n1,n2):\n\tif n2 != 0:\n\t\tprint(f'&#123;n1&#125;/&#123;n2&#125; = &#123;n1 / n2&#125;')\n\telse:\n\t\traise Exception('It can\\'t be divided by 0.')\n\nnum1 = int(input('Please input a number: '))\nnum2 = int(input('Please input another number: '))\n\ntry:\n\tdivCalculator(num1,num2)\nexcept Exception as e:\n\tprint(f'Exception: &#123;e&#125;')\n사용자가 문자메세지를 보낼 때 10글자 이하면 sms로 발송; 10글자 초과시 mms로 발송하는 프로그램을 예외처리를 이용해서 만들어보자.def sendSMS(msg):\n\tif len(msg) > 10:\n\t\traise Exception('It is overlengthed. It will be sent after being regenerated as MMS.',1) # args[1] == 1\n\telse:\n\t\tprint('An SMS successfully has been sent!')\n\ndef sendMMS(msg):\n\tif len(msg) &lt;= 10:\n\t\traise Exception('It is underlengthed. It will be sent after being regenerated as SMS.',2) # args[1] == 2\n\telse:\n\t\tprint('An MMS successfully has been sent!')\n\nmsg = input('Please input Messages: ')\n\ntry: \n\tsendSMS(msg)\nexcept Exception as e:\n\tprint(f'e: &#123;e.args[0]&#125;')\n\tprint(f'e: &#123;e.args[1]&#125;')\n\tif e.args[1] == 1:\n\t\tsendMMS(msg)\n\telif e.args[1] == 2:\n\tsendSMS(msg)\n사용자 Exception classException 클래스를 직접 상속해서 사용자 예외클래스 직접 만들기class DoNotUseZeroDivisionException(Exception):\n\tdef __init__(self,n):\n\t\tsuper().__init__(f'&#123;n&#125; is an unavailable number.')\n\ndef divCalculator(num1,num2):\n\tif num1 == 0:\n\t\traise DoNotUseZeroDivisionException(num2)\n\telse: \n\t\tprint(f'&#123;num1&#125;/&#123;num2&#125;=&#123;num1/num2&#125;')\n\nnum1 = int(input('input number1: '))\nnum2 = int(input('input number2: '))\n\ntry: \n\tdivCalculator(num1,num2)\nexcept DoNotUseZeroDivisionException as e:\n\tprint(e)\n관리자 암호를 입력하고 다음 상태에 따라 예외 처리하는 예외 클래스를 만들어보자.암호 길이가 5 미만인 경우: UnderlengthedPasswordException\n암호 길이가 10 초과인 경우: OverlengthedPasswordException\n암호가 틀린 경우: WrongPasswordException\n\nclass UnderlengthedPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsupper().__init__(f'&#123;str&#125;: 비밀번로 자릿수가 너무 적습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.')\nclass OverlengthedPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsuper().__init__(f'&#123;str&#125;: 비밀번로 자릿수가 너무 많습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.')\nclass WrongPasswordException(Exception):\n\tdef __init__(self,str):\n\t\tsuper().__init__(f'&#123;str&#125;: 잘못된 비밀번호 입니다.)\n\npassWord = input('패스워드를 입력하세요: ')\ntry:\n\tif len(adminPw) &lt; 5:\n\t\traise UnderlengthedPasswordException(passWord)\n\telif len(adminPw) > 10:\n\t\traise OverlengthedPasswordException(passWord)\n\telif passWord != 'admin1234'\n\t\traise WrongPasswordException(passWord)\nexcept UnderlengthedPasswordException as e1:\n\tprint e1\nexcept OverlengthedPasswordException as e2:\n\tprint e2\nexcept WrongPasswordException as e3:\n\tprint e3\n\n","slug":"zeroBase-DS-2nd-04","date":"2023-03-09T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"b493b07a83682f778196e53afcd3ee9a","title":"zeroBase_DS 2주차 수요일 스터디노트","content":"2nd WeekWednesday함수란?def addFunc(x,y):\n\treturn x+y\n\nprint(addFunc(100,2))\n내장함수&amp;사용자함수특정 기능을 재사용하기 위해 사용함수 선언과 호출def키워드, 함수명,(),:,def addCal():\n\tn1 = int(input('n1 입력: '))\n\tn2 = int(input('n2 입력: '))\n\tprint(f'n1 + n2 = &#123;n1 + n2&#125;')\n\naddCal()\n함수 내에서 또 다른 함수 호출함수 내에서 또다른 함수 호출 가능def fun1():\n\tprint('fun1 호출됨')\n\tfun2()\n\ndef fun2():\n\tprint('fun2 호출됨')\n\tfun2()\n\ndef fun3():\n\tprint('fun3 호출됨')\n\nfun1()\n# result :fun1 호출됨\n#         fun2 호출됨\n#         fun3 호출됨\n인수와 매개변수함수 호출 시 함수에 데이터를 전달할 수 있다def greet(customer1,customer2): # 매개변수\n\tprint(f'&#123;customer1&#125;,&#123;customer2&#125; 고객님 안녕하세요.')\n\ngreet('Nerdee','NERDY') # 인수\n인수와 매개변수 개수는 일치해야 한다If not, that would be a Type Error\n\n인수가 정해지지 않은 경우는 ‘*‘를 이용한다.def printNumber(*numbers)\n\tfor number in numbers:\n\t\tprint(number, end=\"\")\n\tprint()\n데이터 반환return 키워드를 이용하면 함수 실행 결과를 호출부로 반환할 수 있다.def addCal(n1, n2):\n\tresult = n1 + n2\n\treturn result\n\nreturnValue = addCal(10,20)\nprint(f'returned value: &#123;returnValue&#125;')\n함수가 return을 만나면 실행을 종료한다.def evenORodd(n)\n\tif n == 0:\n\t\treturn '0'\n\telif n % 2 == 0:\n\t\treturn '짝수'\n\telse:\n\t\treturn '홀수'\n\nreturnValue = evenORodd(5)\nprint(f'returned value: &#123;returnValue&#125;')\n지역변수와 전역변수global variable은 함수 안에서 수정 불가 단, global 키워드를 사용하면 가능num_out = 10\ndef printNumbers():\n\tprint('num_out = &#123;&#125;'.format(num_out))\n\tglobal num_out\n\tnum_out = 20\n\tprint(f'num_out: &#123;num_out&#125;')\n\nprintNumbers()\nprint(f'num_out: &#123;num_out&#125;')\n\n# result: num_out = 10\n#         num_out = 20\n#.        num_out = 20\nlocal variable은 함수 안에서만 사용 가능중첩함수내부함수를 함수 밖에서 호출할 수 없다.lambda함수lambda 키워드를 이용하면 함수 선언을 보다 간단하게 할 수 있다.def calculator(n1,n2):\n\treturn n1+n2\n\nreturnValue = calculator(10,20)\nprint(f'returnValue: &#123;returnValue&#125;')\n를\ncalculator = lambda n1,n2: n1 + n2\nreturnValue = calculator(10,20)\nprint(f'returnValue: &#123;returnValue&#125;')\n로 표현 가능\n모듈이미 제작된 기능으로 사용자는 쉽게 사용할 수 있다. 1. 내부 모듈\n    파이썬 설치 시 기본적으로 사용 가능한 모듈\n2. 외부 모듈\n    별도 설치 후 사용할 수 있는 모듈\n3. 사용자 모듈\n    사용자가 직접 만든 모듈\n\nimport pandas as pd\nimport random\n모듈 제작module은 특정 기능을 갖고 있는 .py 파일이다\n모듈 파일def reverseStr(str):\n reversedString = ''\n for c in str:\n\t reversedString = c + reversedString\nreturn reversedString\n실행 파일import reverseStr\n\nuserInputStr = input('문자열 입력: ')\nreversedString = reverseStr.reverseStr(userInputStr)\nprint(f'reversedString: &#123;reversedString&#125;')\n모듈 사용as 키워드를 사용해 모듈을 사용할 때 이름을 단축시킬 수 있다import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n\nfrom ~ as 키워드를 사용해 모듈의 특정 기능만 사용할 수 있다from moduleA import * # import all \n\n\n실행(메인)파일01전역변수__name__을 이용한 실행파일 지정__name__에는 모듈 이름이 저장되거나 &#39;__main__&#39;이 저장된다.\n\n    python의 __name__변수에 자기 파일 이름이 아닌 __main__가 저장된 파일은 실행파일(시작점)임.\n실행(메인)파일02전역변수 __name__을 이용한 실행파일 지정단위환산 모듈을 만들고 cm를 mm, inch, m, ft로 변환해보자.# module file\ndef cm2mm(n):\n\treturn round(n*10,3)\ndef cm2inch(n):\n\treturn round(n*0.393,3)\ndef cm2m(n):\n\treturn round(n*0.01,3)\ndef cm2ft(n):\n\treturn round(n*0.032,3)\n\nif __name__ == '__main__':\n\tprint(f'10cm: &#123;cm2mm(10)&#125;)mm')\n\tprint(f'10cm: &#123;cm2inch(10)&#125;)inch')\n\tprint(f'10cm: &#123;cm2m(10)&#125;)m')\n\tprint(f'10cm: &#123;cm2ft(10)&#125;)ft')\n# execution file\nimport unitConversion as uc\n\nif __name__ == '__main__':\n\tinputNumber = int(input('길이(cm) 입력: '))\n\treturnValue = uc.cm2mm(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;mm')\n\treturnValue = uc.cm2inch(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;inch')\n\treturnValue = uc.cm2m(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;m')\n\treturnValue = uc.cm2ft(inputNumber)\n\tprint(f'&#123;inputNumber&#125;cm : &#123;returnValue&#125;ft')\n\n패키지패키지를 이용하면 관련있는 모듈을 그룹으로 관리할 수 있다.\nsite-packagessite-packages에 있는 모듈은 어디서나 사용할 수 있다.import sys\n\nfor path in sys.path:\n\tprint(path)\n로 \\lib\\site-packages 경로 확인, 이 위치에 모듈이 있으면 어디서나 접근 가능\n\n자주 사용하는 외부 모듈math, random, datetime, …객체지향 프로그래밍객체를 이용한 프로그램으로, 객체는 속성과 기능으로 구성된다. Object &#x3D; Attribute+Function객체는 클래스에서 생성된다.\n코드 재사용, 모듈화에 좋다.class와 객체 생성클래스는 class 키워드와 속성(변수) 그리고 기능(함수)를 이용해서 만든다class Car: # 클래스 선언시 첫문자 big letter\n\tdef __init__(self, color, length): \n\t\tself.color = color # 생성자,속성\n\t\tself.length = length\n\tdef doStop(self): # 기능\n\t\tprint('STOP!!')\n\tdef doStart(self): # 기능\n\t\tprint('START!!')\n\tdef printCarInfo(self):\n\t\tprint(f'self.color: &#123;self.color&#125;')\n\t\tprint(f'self.length: &#123;self.length&#125;')\n\ncar1 = Car('red', 200)\ncar2 = Car('blue', 300)\n객체 속성 변경객체 속성은 변경 가능class NewGenPC:\n\tdef __int__(self,name,cpu,memory,ssd):\n\t\tself.name = name\n\t\tself.cpu = cpu\n\t\tself.memory = memory\n\t\tsself.ssd = ssd\n\t\n\tdef doExcel(self):\n\t\tprint('RUNNING EXCEL!')\n\t\n\tdef doPhotoshop(self):\n\t\tprint('RUN PHOTOSHOP!')\n\t\n\tdef printPCInfo(self):\n\t\tprint(f'self.name: &#123;self.name&#125;')\n\t\tprint(f'self.cpu: &#123;self.cpu&#125;')\n\t\tprint(f'self.memory: &#123;self.memory&#125;')\n\t\tprint(f'self.ssd: &#123;self.ssd&#125;')\n\nmyPC = NewGenPC('myPC','m1','160','2560')\nmyPC.printPCInfo()\n\nmyPC.cpu = 'm2' # fungible\n\n\n","slug":"zeroBase-DS-2nd-03","date":"2023-03-08T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"d77e8212d722abfc13ee54d137599f20","title":"zeroBase_DS 2주차 화요일 스터디노트","content":"2nd WeekTuesday[연습문제] python 개요 및 기본 사용법Q. 설치 순서Install now &amp; Add python to PATH \n\n[연습문제] PyCharm 설치 및 기본 사용법설치[연습문제] 데이터와 변수01Q. 주문확인서 템플릿 만들기name = '홍길동'\nproduct = '야구글러브'\norderNo = 2568956\npaymentMethod = '신용카드'\nproductPrice = '110000'\npaidPrice = '100000'\npoints = '10000'\npaidDate = '2021-08-03 21:50:12'\ninstallment = 6\ninstallmentType = 'interest free'\ncsNum = '02-1234-5678'\n\nprint(name, '고객님의 주문이 접수되었습니다.')\nprint('이하는 해당 주문건에 대한 상세 내역입니다: ')\nprint('-'*50)\nprint('상품명: ',product)\nprint('주문번호: ', orderNo)\nprint('결제방법: ', paymentMethod)\nprint('상품금액: ', productPrice)\nprint('결제금액: ', paidPrice)\nprint('잔여 포인트: ',points,'P')\nprint('결제일시: ',paidDate)\nprint('할부: ', installment,'개월')\nprint('할부유형: ', installmentType)\nprint('문의: ', csNum)\nprint('-'*50)\nprint('저희 사이트를 이용해 주셔서 감사합니다.')\n[연습문제] 데이터와 변수02len()\n\n\n\n\n\n\n\n\n문자 길이를 반환함\nfind()특정 문자열의 위치를 찾아 반환함\n\n[연습문제] 데이터와 변수03Q. 원의 반지름을 입력하면 원의 넓이와 원주를 출력하되, 정수형식, 소숫점1자리 그리고 소숫점 3자리의 형식을 모두 출력하라.pi = 3.14159\nradius = int(input('반지름(cm)을 입력하세요: '))\n\ncircleArea = (radius*radius*pi)\ncircumference = (2*pi*radius)\n\nprint('원의 넓이: %d cm', % circleArea)\nprint('원주: %d cm', % circumference)\nprint('원의 넓이: %.1f cm', % circleArea)\nprint('원주: %.1f cm', % circumference)\nprint('원의 넓이: %.3f cm', % circleArea)\nprint('원주: %.3f cm', % circumference)\n\nQ. 사용자로부터 입력받은 개인정보 포맷문자열로 출력하기(비밀번호, 주민번호 뒷자리는 별표로 처리usrName = input('이름 입력: ')\nusrMail = input('메일 입력: ')\nusrID = input('아이디 입력: ')\nusrPW = input('비밀번호 입력: ')\nfstHalfusrRRNum = input('주민번호 앞자리 입력: ')\nSndHalfusrRRNum =input('주민번호 뒷자리 입력: ')\nusrAddress = input('주소 입력: ')\n\nprint('-'*30*)\nprint(f'이름: &#123;usrName&#125;')\nprint(f'메일: &#123;usrMail&#125;')\nprint(f'아이디: &#123;usrID&#125;')\nprint(f'비밀번호: &#123;('*'*len(usrPW))&#125;',)\nprint(f'주민번호: &#123;fstHalfusrRRNum&#125; - &#123;SndHalfusrRRNum[0]&#125;&#123;('*'*(len(usrPW)-1))&#125;')\nprint(f'주소: &#123;usrAddress&#125;')\nprint('-'*30*)\n[연습문제] 데이터와 변수04isdigit()숫자인지 확인(맞으면 True, 아니면 False)\n\n체중(g)과 신장(cm)을 입력하면 BMI 지수가 출력되는 프로그램을 만들어 보자.bodyWeight = int(input(\"체중(g)을 입력하세요: \"))\nbodyHeight = int(input(\"신장(cm)을 입력하세요: \"))\n\nif bodyWeight.isdigit():\n\tbodyWeight = int(bodyWeight)*0.001\nif bodyHeight.isdigit():\n\tbodyHeight = int(bodyHeight)*0.01\n\nBMI = bodyWeight/ (bodyHeight*bodyHeight)\n\nprint(\"체중: &#123;&#125;\".format(bodyWeight*0.001))\nprint(\"신장: &#123;&#125;\".format(bodyHeight*0.01))\nprint(\"BMI: &#123;&#125;\".format(BMI))\n[연습문제] 데이터와 변수05Q. 키오스크에서 사용하는 언어 선택 프로그램을 만들어보자.selectLanguage = int(input(\"언어를 선택하세요(Choose your language): 1.한국어\\t2.English\"))\nif selectLanguage == '1': # ''해야함\n\tselectMenu = int(input(1.샌드위치\\t2.햄버거\\t3.쥬스\\t4.커피\\t5.아이스크림))\nelif selectLanguage == '2':\n\tselectMenu = int(input(1.Sandwich\\t2.Hamburger\\t3.Juice\\t4.Coffee\\t5.Ice cream))\ndatetime moduleQ. 나의 나이가 100살 되는 해의 연도를 구하는 프로그램을 만들어보자.import datetime\nfrom datetime import date\n\ntoday = date.today()\nthisYear = today.year\n\ncurentAge = int(input(\"당신은 현재 몇 살입니까?: \"))\nyour100thYear = thisYear+(100-currentAge)\nprint(\"당신이 100세가 되는 해는 &#123;&#125;년 입니다.\".format(your100thYear))\n\n\n[연습문제] 연산자01Q. 상품 가격과 지불 금액을 입력하면 거스름 돈을 계산하는 프로그램을 만들어보자. 단, 거스름돈은 지폐와 동전의 개수를 최소로 하고, 1원 단위 절사한다.지폐: 50000원, 10000원, 5000원, 1000원\n동전: 500원, 100원, 10원\n\nproductPrice = int(input(\"상품 가격 입력: \"))\npaidAmount = int(input(\"지불 금액: \"))\nchangeMoney = 0\ndifference = paidAmount - productPrice\n\nreturn50000 = 0\nreturn10000 = 0\nreturn5000 = 0\nreturn1000 = 0\nreturn500 = 0\nreturn100 = 0\nreturn10 = 0\n\nstopLoop = 0\n\nwhile stopLoop == 0 :\n\tif difference > 0 :\n\t\tif difference // 50000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn50000 = (difference // 50000)\n\t\t\tdifference -= 50000*return50000\n\t\tif difference // 10000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10000 = (difference // 10000)\n\t\t\tdifference -= 10000*return10000\n\t\tif difference // 5000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn5000 = (difference // 5000)\n\t\t\tdifference -= 5000*return5000\n\t\tif difference // 1000 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn1000 = (difference // 1000)\n\t\t\tdifference -= 1000*return1000\n\t\tif difference // 500 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn500 = (difference // 500)\n\t\t\tdifference -= 500*return500\n\t\tif difference // 100 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn100 = (difference // 100)\n\t\t\tdifference -= 100*return100\n\t\tif difference // 10 == 0:\n\t\t\tpass\n\t\telse: \n\t\t\treturn10 = (difference // 10)\n\t\t\tdifference -= 10*return10\n\t\tprint(\"-\"*30)\n\t\tprint(\"changes: \")\n\t\tprint(\"50,000원 &#123;&#125;장\".format(return50000))\n\t\tprint(\"10,000원 &#123;&#125;장\".format(return10000))\n\t\tprint(\"5,000원 &#123;&#125;장\".format(return5000))\n\t\tprint(\"1,000원 &#123;&#125;장\".format(return1000))\n\t\tprint(\"500원 &#123;&#125;개\".format(return500))\n\t\tprint(\"100원 &#123;&#125;개\".format(return100))\n\t\tprint(\"10원 &#123;&#125;개\".format(return10))\n\t\tprint(\"-\"*30)\n\t\tstopLoop += 1\n\telif difference == 0 :\n\t\tprint(\"There is no change money.\")\n\t\tstopLoop += 1\n\telif difference &lt; 0 :\n\t\textraMoney = int(input(\"You've paid less. Please pay sufficient money: \"))\n\t\tpaidAmount += extraMoney\n\n\n![[Pasted image 20230307231137.png]]\n[연습문제] 연산자02Q. 국영수 점수 입력 후 총점,평균,최고점수 과목, 최저점수 과목, 그리고 최고 점수와 최저 점수의 차이를 각각 출력해보자max(),min()korScore = int(input('국어 점수 입력: '))\nengScore = int(input('영어 점수 입력: '))\nmthScore = int(input('수학 점수 입력: '))\n\ntotalScre = korScore + engScore + mthScore\navgScre = totalScre / 3\n\nmaxScore = max(korScore,engScore,mthScore)\nminScore = min(korScore,engScore,mthScore)\ngap = maxScore - minScore\n\nprint(\"-\"*30*)\n\nif maxScore == korScore:\n\tif minScore == engScore:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,engScore,gap))\n\telse:\n\t\tprint(\"최고점수는 국어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(korScore,mthScore,gap))\nelif maxScore == engScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,korScore,gap))\n\telse: \n\t\tprint(\"최고점수는 영어 &#123;&#125;점, 최저점수는 수학 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(engScore,mthScore,gap))\nelif maxScore == mthScore:\n\tif minScore == korScore:\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 국어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,korScore,gap))\n\telse :\n\t\tprint(\"최고점수는 수학 &#123;&#125;점, 최저점수는 영어 &#123;&#125;점이며, 차이는 &#123;&#125;점입니다.\".format(mthScore,engScore,gap))\n\nprint(\"-\"*30*)\n[연습문제] 연산자03시,분,초를 입력하면 초로 환산하는 프로그램을 만들어보자.hour = int(input('시간 입력: '))\nminute = int(input('분 입력: '))\nsecond = int(input('초 입력: '))\n\nprint('&#123;&#125;초'.format(format(hour *60 *60 +min *60+second,',')))\n\nformat(money,’,’)금액, 이율, 거치기간을 입력하면 복리계산하는 복리계산기 프로그램을 만들어보자amount = int(input('금액 입력: '))\ninterestRate = int(input('이율 입력: '))\nperiod = int(input('기간 입력: '))\n\ntargetMoney = money\n\nfor i in range(term):\n\ttargetMoney += (targetMoney * rate * 0.01)\n\nformatedTargetMoney = format(int(targetMonet,','))\n\nprint('-'*30)\nprint('이율: &#123;&#125;'.format(rate))\nprint('원금: &#123;&#125;'.format(format(money,',')))\nprint('&#123;&#125;년 후 금액: &#123;&#125;원'.format(term,formatedTargetMoney))\nprint('-'*30)\n[연습문제] 연산자04groundTemp = 29\ngap = 60\ndecreasedTemp = 0.8\n\naltitude = int(input('고도 입력: '))\n\ntargetTemp = groundTemp - (altitude // gap*0.8)\n\nif altitude % gap != 0:\n\ttargetTemp -= decreasedTemp\n\nprint('지면 온도: &#123;&#125;'.format(baseTemp))\nprint('고도 &#123;&#125;m의 기온: &#123;&#125;'.format(altitude,targetTemp))\n[연습문제] 연산자05Q. 백신접종대상자 판별 프로그램 만들기19세 이하 또는 65세 이상이면 출생연도 끝자리에 따라 접종, 그렇지 않다면 하반기 일정 확인\n\ninputAge = int(input('나이 입력: '))\n\nif inputAge &lt;= 19 or inputAge >= 65: \n\t\tendNum = int(input('출생 연도 끝자리 입력: '))\n\tif endNum == 1 or endNum == 6:\n\t\tprint('월요일 접종 가능')\n\tif endNum == 2 or endNum == 7:\n\t\tprint('화요일 접종 가능')\n\tif endNum == 3 or endNum == 8:\n\t\tprint('수요일 접종 가능')\n\tif endNum == 4 or endNum == 9:\n\t\tprint('목요일 접종 가능')\n\tif endNum == 5 or endNum == 0:\n\t\tprint('금요일 접종 가능')\nelse : \n\tprint('하반기 일정을 확인하세요.')\nQ. 길이(mm)를 입력하면 inch로 환산하는 프로그램을 만들어보자. (1mm &#x3D; 0.039inch)byInch = 0.039\nlengthMM = int(input('길이(mm) 입력: '))\nlength2Inch = lengthMM * byInch\n\nprint('&#123;&#125;mm -> &#123;&#125;inch'.format(lengthMM,lengthInch))\n[연습문제] 조건문01과속위반 경고 프로그램시속 50km 이하 -&gt; 안전속도 준수!!\n시속 50km 초과 -&gt; 안전속도 위반!! 과태료 50,000원 부과 대상입니다.\n\ncarSpeed = int(input('속도 입력: '))\nlimitSpeed = 50\n\nif carSpeed > 50:\n\tprint('안전속도 위반!! 과태료 50,000원 부과 대상입니다.')\nelse:\n\tprint('안전속도 준수!!')\n[연습문제] 조건문02국영수,과학,한국사 점수를 입력하면 총점을 비롯한 각종 데이터가 출력되는 프로그램을 만들어보자.- 과목별 점수를 입력하면 총점, 평균, 편차를 출력\n- 과목별 평균 : \n    국어:85, 영어:82, 수학:89, 과학:75, 한국사:94\n- 각종 편차 데이터는 막대그래프로 시각화한다.\n\nkorAvg = 85; EngAvg = 82; mthAvg = 89\nsciAvg = 75; kHstAvg = 94\ntotalAvg = int(0.2 * (korAvg+EngAvg+mthAvg+sciAvg+kHstAvg))\n\nkorScore = int(input('국어 성적 입력: '))\nengScore = int(input('영어 성적 입력: '))\nmthScore = int(input('수학 성적 입력: '))\nsciScore = int(input('과학 성적 입력: '))\nkHstScore = int(input('한국사 성적 입력: '))\ntotalScore = korScore+engScore+mthScore+sciScore+kHstScore\ninputAvg = int(0.2 * totalScore)\n\nkorGap = korScore - korAvg\nengGap = engScore - engAvg\nmthGap = mthScore - mthAvg\nsciGap = sciScore - sciAvg\nkHstGap = kHstcore - kHstAvg\ntotalGap = (korScore+engScore+mthScore+sciScore+kHstScore)-(korAvg+EngAvg+mthAvg+sciAvg+kHstAvg)\navgGap = inputAvg - totalAvg\n\nprint('-'*30) \nprint('총점: &#123;&#125;(&#123;&#125;),평균: &#123;&#125;(&#123;&#125;)'.format(totalScore,totalGap,avgScore,avgGap))\nprint('국어: &#123;&#125;(&#123;&#125;),영어: &#123;&#125;(&#123;&#125;),수학: &#123;&#125;(&#123;&#125;),과학: &#123;&#125;(&#123;&#125;),국사: &#123;&#125;(&#123;&#125;)'.format(korScore,korGap,engScore,engGap,mthScore,mthGap,sciScore,SciGap,kHstScore,kHstGap))\nprint('-'*30) \nstr = '+' if korGap > 0 else '-'\nprint('국어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(korGap),korGap))\nprint('영어 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(engGap),engGap))\nprint('수학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(mthGap),mthGap))\nprint('과학 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(sciGap),sciGap))\nprint('한국사 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(kHstGap),kHstGap))\nprint('총 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(totalGap),totalGap))\nprint('평균 편차: &#123;&#125;(&#123;&#125;)'.format(str + abs(avgGap),avgGap))\n\n\n[연습문제] 조건문03난수를 이용해 가위,바위,보 게임을 만들어보자import random\n\ncomputerNum = random(1,3)\nuserNum = int(input(\"1.가위, 2.바위, 3.보 중에서 하나의 숫자를 골라 입력하세요: \"))\n\nif (computerNum == 1 and userNum == 2) or (computerNum == 2 and userNum == 3) or (computerNum == 3 and userNum == 1):\n\tprint(\"computer: lose, user: win\")\nelif computerNum == userNum: \n\tprint(\"A dead heat.\")\nelse: \n\tprint(\"computer: win, user: lose\")\n[연습문제] 조건문04아래 요금표를 참고해서 상수도 요금 계산기를 만들어보자.\n\n\n업종별\n사용량\n단가(원)\n\n\n\n가정용\n-\n540\n\n\n대중탕용\n50이하\n820\n\n\n대중탕용\n50초과 300이하\n1,920\n\n\n대중탕용\n300 초과\n2,400\n\n\n공업용\n500이하\n240\n\n\n공업용\n500초과\n470\n\n\npurposeClassification = int(input(\"업종 선택: 1.가정용  2.대중탕용  3.공업용\"))\nusedWater = int(input('사용량 입력: '))\nunitPrice = 0\n\nif part == 1:\n\tunitPrice = 540\nelif part == 2:\n\tif usedWater &lt;= 50 :\n\t\tunitPrice = 820\n\telif usedWater > 50 or usedWater &lt;= 300 :\n\t\tunitPrice = 1920\n\telif usedWater > 300:\n\t\tunitPrice = 2400\nelif part ==3:\n\tif usedWater &lt;= 500 :\n\t\tunitPrice = 240\n\telse: \n\t\tunitPrice = 470\n\nprint('='*30)\nprint(\"상수도 요금표\")\nprint('-'*30)\nprint('사용량   :  요금   ')\nprint('&#123;&#125;    :  &#123;&#125;원'.format(usedWater,(unitPrice*usedWater)))\nprint('='*30)\n\n[연습문제] 조건문05Q.미세먼지 비상저감조치로 차량 운행제한 프로그램을 다음 내용에 맞게 만들어 보자.- 미세먼지 측정 수치가 150 이하면 차량5부제 실시\n- 미세먼지 측정 수치가 150을 초과하면 차량2부제 실시\n- 차량2부제를 실시하더라도 영업용차량은 5부제 실시\n- 미세먼지 수치, 차량 종류, 차량 번호를 입력하면 운행 가능 여부 출력\n\nimport datetime\n\ntoday = datetime.datetime.today()\ntheDay = today.weekday()\naDay = today.day\n# weekday(): 요일반환 (0:월,1:화,2:수,...,6:일)\n\nfineDust = int(input(\"현재 미세먼지 수치를 입력하세요: \"))\ncarCartegoty = int(input(\"당신의 차량은 어느 차량 인가요? 1.영업용 차량 2.개인용 차량\"))\ncarNum = int(input(\"차량 번호를 입력해주세요: \"))\n\nif fineDust &lt;= 150: \n\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\nelse: \n\tif carCartegoty == 1:\n\t\tprint(\"차량 번호 &#123;&#125;, 차량 5부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] == 1 or carNum[-1] == 6:\n\t\tif theDay == 0\n\t\t\tprint(\"죄송합니다. 오늘은 월요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 2 or carNum[-1] == 7:\n\t\tif theDay == 1\n\t\t\tprint(\"죄송합니다. 오늘은 화요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 3 or carNum[-1] == 8:\n\t\tif theDay == 2\n\t\t\tprint(\"죄송합니다. 오늘은 수요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 4 or carNum[-1] == 9:\n\t\tif theDay == 3\n\t\t\tprint(\"죄송합니다. 오늘은 목요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telif: carNum[-1] == 5 or carNum[-1] == 0:\n\t\tif theDay == 4\n\t\t\tprint(\"죄송합니다. 오늘은 금요일이기에 출입이 통제됩니다.\")\n\t\telse: \n\t\t\tprint(\"금일 운행 가능합니다.\")\n\telse: \n\t\tprint(\"차량 번호 &#123;&#125;, 차량 2부제를 실시합니다. \".format(carNum))\n\t\tif carNum[-1] % 2 == 0:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\telse:\n\t\t\tif aDay[-1] % 2 == 0:\n\t\t\t\tprint(\"금일 운행 불가합니다.\")\n\t\t\telse:\n\t\t\t\tprint(\"금일 운행 가능합니다.\")\n\n[연습문제] 조건문06PC에서 난수가 발생하면 사용자가 난수를 맞추는 게임1. PC가 난수[1,1000]을 발생시키면 사용자가 해당 범위에서 발생된 난수로 추측되는 정수를 입력한다.\n2. 사용자가 난수를 맞추면 게임은 종료된다.\n3. 못맞출시 생성된 난수와 사용자의 추측값의 크기를 비교해 알려주고, 사용자에게 기회를 다시 준다. \n4. 마지막 회차에 사용자의 시도횟수를 출력해준다.\n\nimport random\n\ntheAnswer = int(random(1,1000))\nanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\ntrialCount = 1\n\nwhile theAnswer != anAnswer:\n\tprint(\"아쉬워요, 다시 한 번 해보세요.\")\n\tanAnswer = int(input(\"1~1000사이에서 만들어진 숫자를 추측해 입력하세요: \"))\n\ttrialCount += 1\n\tif theAnswer > anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 작아요.\")\n\telif theAnswer &lt; anAnswer:\n\t\tprint(\"입력값이 맞춰야 하는 숫자보다 커요.\")\n\telif theAnswer == anAnswer:\n\t\tbreak\n\nprint(\"네, 정답은 &#123;&#125;었습니다. 총 시도 횟수는 &#123;&#125;회 입니다.\".format(theAnswer),trialCount)\n실내온도를 입력하면 스마트에어컨 상태가 자동으로 설정되는 프로그램을 만들어 보자.\n\n\n실내온도\n18도 이하\n18도 초과 22도 이하\n22도 초과 24도 이하\n24도 초과 26도 이하\n26도 초과 28도 이하\n28도 초과\n\n\n\n에어컨 상태\noff\n매우 약하게\n약하게\n중간\n강하게\n매우 강하게\n\n\nindoorTemp = int(input(\"실내온도 입력: \"))\nairConditioner = \"\"\n\nif indoorTemp &lt;= 18:\n\tairConditioner = \"나중에\"\nelif indoorTemp > 18 or indoorTemp &lt;= 22 :\n\tairConditioner = \"매우 약하게\"\nelif indoorTemp > 22 or indoorTemp &lt;= 24 :\n\tairConditioner = \"약하게\"\nelif indoorTemp > 24 or indoorTemp &lt;= 26 :\n\tairConditioner = \"중간\"\nelif indoorTemp > 26 or indoorTemp &lt;= 28 :\n\tairConditioner = \"강하게\"\nelif indoorTemp > 28 :\n\tairConditioner = \"매우 강하게\"\n\nprint(\"에어컨을 &#123;&#125; 작동합니다. \".format(airConditioner))\n[연습문제] 반복문01[1,100]구간 내의 정수 중 십의 자리의 일의 자리에 대해 각각 홀&#x2F;짝수를 구분하는 프로그램을 만들어보자.for i in range(1,101):\n\ttens = i // 10\n\tunits = i % 10\n\t\n\tif tens % 2 == 0:\n\t\tif tens == 0:\n\t\t\tpass\n\t\telse:\n\t\t\ttens = '짝수'\n\telse:\n\t\ttens = '홀수'\n\t\n\tif units % 2 == 0:\n\t\tif units == 0:\n\t\t\tpass\n\t\telse:\n\t\t\tunits = '짝수'\n\telse:\n\t\tunits = '홀수'\n\tprint(\"&#123;&#125;의 십의 자리:&#123;&#125;, 일의 자리:&#123;&#125;\".format(i,tens,units))\n[연습문제] 반복문02Q. 1부터 사용자가 입력한 정수까지의 합, 홀수의 합, 짝수의 합 그리고 팩토리얼을 출력하는 프로그램을 만들어보자.inputNum = int(input(\"정수 입력: \"))\nrememberInputNum = inputNum\nbuffer = 0\nsummation = 0\noddSummation = 0\nevenSummation = 0\nfactorial = 1\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tsummation += buffer\nprint(\"합 결과: &#123;&#125;\".format(summation))\ninputNum = rememberInputNum\n\nif inputNum % 2 == 0:\n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\nelse: \n\twhile inputNum > 0:\n\t\tbuffer = inputNum\n\t\tinputNum -= 2\n\t\toddSummation += buffer\n\tinputNum = rememberInputNum\n\twhile inputNum > 0:\n\t\tbuffer = inputNum - 1\n\t\tinputNum -= 2\n\t\tevenSummation += buffer\n\tprint(\"홀수 합 결과: &#123;&#125;\".format(oddSummation))\n\tprint(\"짝수 합 결과: &#123;&#125;\".format(evenSummation))\n\tinputNum = rememberInputNum\n\nwhile inputNum > 0:\n\tbuffer = inputNum\n\tinputNum -= 1\n\tfactorial *= buffer\nprint(\"팩토리얼 결과: &#123;&#125;\".format(format(factorial,',')))\n\n[연습문제] 반복문03Q. 별을 찍으시오.\nblankNum = 0\nstarNum = 0\nrowNum = int(input(\"행의 개수 입력 :\"))\n# columnNum = int(input(\"행의 개수 입력 :\"))\n\n# *\n# **\n# ***\n# ****\n# *****\nfor i in rowNum:\n\tfor j in rowNum:\n\t\tprint('*',end=\"\")\n\t\tj += 1\n\tprint(\"\")\n\ti += 1\n\n# 2번 \n#      *\n#     **\n#    ***\n#   ****\n#  *****\nfor i in rowNum:\n\tprint(' '*(rowNum-i+1),end='')\n\tprint(\"*\",end=\"\"*i)\n\tprint()\n\ti += 1\n# for i in rowNum:\n#\tfor j in i:\n#\t\tfor k in columnNum:\n#\t\t\tprint(\" \",end=\"\")\n#\t\t\tk += 1\n#\t\tprint(\"*\",end=\"\")\n#\t\tj += 1\n#\tprint(\"\")\n#\ti += 1\n# 도 가능\n\n# *****\n# ****\n# ***\n# **\n# *\nfor i in rowNum:\n\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\n#  *****\n#   ****\n#    ***\n#     **\n#      *\nfor i in rowNum:\n\tprint(\" \"*i,end=\"\")\n\tprint(\"*\"*(rowNum-i+1))\n\tprint(\"\")\n\ti += 1\n\n# *\n# **\n# ***\n# ****\n# *****\n# ****\n# ***\n# **\n# *\nfor i in rowNum:\n\tprint('*'*i,end='')\n\tprint()\n\ti += 1\nfor i in rowNum:\n\tprint('*'*(rowNum-i),end='')\n\tprint()\n\ti += 1\n\n#  *\n#   *\n#    *\n#     *\n#      *\nfor i in rowNum:\n\tprint(' '*i,end='')\n\tprint(\"*\")\n\ti += 1\n\n#      *\n#     *\n#    *\n#   *\n#  *\n#for i in rowNum:\n#\tfor j in columnNum:\n#\t\tprint(\" \"*(columnNum+1-i))\n#\tprint(\"\")\n#\ti += 1 \nfor i in rowNum:\n\tprint(' '*(rowNum-i+1),end='')\n\tprint('*',end='')\n\ti += 1\n\tprint()\n\n#     *\n#    ***\n#   *****\n#  *******\n# *********\n#  *******\n#   ***** \n#    ***  \n#     *\n#for i in rowNum:\n#\tfor j in columnNum: \n#\t\tif columnNum % 2 == 0:\n#\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n#\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n#\t\t\tprint(\" \"*(columnNum/2),end=\"\")\n#\t\telse:\n#\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n#\t\t\tprint(\"*\"*(2*j-1),end=\"\")\n#\t\t\tprint(\" \"*(columnNum-1)*0.5,end=\"\")\n#\t\tj += 1\n#\tprint(\"\")\n#\ti += 1\nfor i in rowNum:\n\tprint(' '*(rowNum-i),end='')\n\tprint('*'*(2i-1))\nsNum = rowNum-1\nfor i in sNum:\n\tprint(' '*i,end='')\n\tprint('*'*(2*sNum-(2*i-1)),end='')\n\tprint()\n\ti += 1\n[연습문제] 반복문04집 앞 버스 정류장에서 학교까지 가는 버스 A,B,C의 운행정보가 다음과 같을 때, 2대 이상의 버스가 정차하는 시간대를 출력해보자.- 버스 A,B 운행 정보\n    - 06시 첫 차, 23시 운행 종료\n    - 버스A : 15분 간격 운행\n    - 버스B : 13분 간격 운행\n- 버스 C 운행 정보\n    - 06시 20분 첫 차, 22시 운행 종료\n    - 버스C : 8분 간격 운행\n\nbusAinterterm = 15\nbusBinterterm = 13\nbusCinterterm = 8\noperatingMinutes = 60*17 \n# operating term= 06:00 - 23:00\nfor i in range(operatingMinutes+1):\n\tif i &lt; 20 or i > (operatingMinutes - 60):\n\t\tif i % busA == 0 and i % busB == 0:\n\t\tprint('Bus A and bus B have co-arrived.',end='')\n\t\thour = 6 + i // 60\n\t\tmin = i % 60\n\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\telse: \n\t\tif i % busA == 0 and i % busB == 0:\n\t\t\tprint('Bus A and bus B have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\t\telif i % busA == 0 and i % busC == 0:\n\t\t\tprint('Bus A and bus C have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\t\telif i % busB == 0 and i % busC == 0:\n\t\t\tprint('Bus B and bus C have co-arrived.',end='')\n\t\t\thour = 6 + i // 60\n\t\t\tmin = i % 60\n\t\t\tprint('\\t&#123;&#125;:&#123;&#125;'.format(hour,min))\n\n[연습문제] 반복문05톱니가 각각 n1개와 n2개의 톱니바퀴가 서로 맞물려 회전할 때, 회전을 시작한 후 처음 맞물린 톱니가 최초로 만나게 될 때까지의 톱니의 수와 각각의 바퀴 회전 수를 출력해보자. (단,n2&gt;n1)try: \n\tsawtoothNum1 = int(input('톱니A 톱니수 입력: '))\n\tsawtoothNum2 = int(input('톱니B 톱니수 입력: '))\nexcept: \n\tprint('0 이상의 숫자를 입력해 주세요.')\n\tcontinue\nelse: \n\tfor leastCommonMultiple in range(max(sawtoothNum1,sawtoothNum2),(sawtoothNum1*sawtoothNum2)+1):\n\t\tif i % sawtoothNum1 == 0 and i % sawtoothNum2 == 0:\n\t\tprint('회전을 시작한 후 처음 맞물린 톱니가 최초로 만나게 될 때까지의 톱니의 수'.format(leastCommonMultiple))\n\t\n\tprint('처음 만날 때의 톱니A 회전 수: &#123;&#125;'.format(leastCommonMultiple/sawtoothNum1))\n\tprint('처음 만날 때의 톱니B 회전 수: &#123;&#125;'.format(leastCommonMultiple/sawtoothNum2))\n[연습문제] 반복문06윤년계산기윤년 조건\n- 연도가 4로 나누어떨어지고 100으로 나누어떨어지지 않으면 윤년이다.\n- 또는 연도가 400으로 나누어떨어지면 윤년이다.\n\ntry: \n\tinputYear = int(input(\"연도 입력: \"))\nexcept: \n\tprint('숫자만 입력해 주세요.')\nelse: \n\tif (inputYear % 4 == 0 and inputYear % 100 != 0) or (inputYear % 400 == 0):\n\t\tprint('&#123;&#125;년: 윤년'.format(inputYear))\n\telse: \n\t\tprint('&#123;&#125;년: 평년'.format(inputYear))\n\n","slug":"zeroBase-DS-2nd-02","date":"2023-03-07T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"571bcce27e1df48af81c49c97f66bfd9","title":"zeroBase_DS 2주차 월요일 스터디노트","content":"2nd WeekMonday조건식num1 = 10\nnum2 = 30\n\nnumResult = True if num1 > num2 else False\nprint('num1 > num2 : &#123;&#125;'.format(numResult))\n\nsnowfallLimit = 30\nsnowfall = int(input('강설량 입력(mm): '))\n\nprint('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 발령')) if snowfall >= snowfallLimit else \\print('적설량: &#123;&#125;mm, &#123;&#125;'.format(snowfall,'대설경보 미발령'))\nif문if 10 > 5\n\tprint('10 is greater than 5.')\n\tprint('another command?')\nprint(Conditional statement just ended.)\t\n양자택일 조건문(if~else문)passScore = 60\n\nmyScore = int(input(\"점수 입력: \"))\nif myScore >= passScore:\n\tprint('You\\'re passed.')\nelse:\n\tprint('You have to listen to this class again.')\n\n# keyword 'pass'\nlength = int(input('input bed length(cm): '))\n\nif length > 200:\n\tpass\nelse: \n\tprint('You must have bought single-sized bed!')\n\nif~else 문과 조건식조건식 결과에 따른 실행만 하는 경우# 조건식 결과에 따른 실행만 하는 경우\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('points available') if userPoints >= minAblePoints else print('points unavailable.')\n조건식 결과를 변수에 할당하는 경우# 조건식 결과를 변수에 할당하는 경우\nresult = '가능' if userPoints >= minAblePoints else '불가능'\nprint('포인트 사용 가능 여부: &#123;&#125;'.format(result))\n\n모든 조건식(삼항연산자)은 if~else문으로 변경할 수 있다minAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nprint('Your points available') if userPoints >= minAblePoints else print('Your points unavailable.')\n&#x3D;\nminAblePoints = 1000\nresult = 'available' if userPoints >= minAblePoints else 'unavilable'\nprint('Your points are &#123;&#125; now.'.format(result))\n&#x3D;\nminAblePoints = 1000\nuserPoints = int(input('input userpoints: '))\nif userPoints >= minAblePoints:\n\tprint('Your points available')\nelse: \n\tprint('Your points unavailable.')\n단, 모든 if~else문을 조건식(삼항연산자)으로 변경할 수 있는 것은 아니다.minAblePoints = 1000\n\nif userPoints >= minAblePoints:\n\tresult = 'usable'\nelse:\n\tresult = 'unusable'\n\tlackedPoint = minAblePoints - userPoints\n\tprint('It lacks &#123;&#125; points now.'.format(lackedPoints))\nprint('Your points are &#123;&#125; now.'.format(result))\n다자택일 조건문(if~elif문)examScore = int(input('Enter test score: '))\ngrade = ''\nif examScore >= 90:\n\tgrade = 'A'\nelif examScore >= 80:\n\tgrade = 'B'\nelif examScore >= 70:\n\tgrade = 'C'\nelif examScore >= 60:\n\tgrade = 'D'\nelse: \n\tgrade = 'F'\nprint('Your input(ted)test score is &#123;&#125; and corresponding grade is &#123;&#125;.'.format(examScore, grade))\n다자택일 조건문 사용 시 주의할 점조건식 순서가 중요하다Q. 자동차 배기량에 따라 세금을 부과할 때, 다음 표에 따라 세금을 출력하는 프로그램을 만들어 보자.\n\n\n배기량\n세금(원)\n\n\n\n5000cc 이상\n600,000\n\n\n5000cc미만 4000cc 이상\n500,000\n\n\n4000cc미만 3000cc 이상\n400,000\n\n\n3000cc미만 2000cc 이상\n300,000\n\n\n2000cc미만 1000cc 이상\n200,000\n\n\n1000cc 미만\n100,000\n\n\ndisplacement = int(input('Please input your car displacement: '))\n\nif displacement &lt; 1000:\n\tprint('세금: 100,000원')\nelif displacement &lt; 2000 and displacement >= 1000:\n\tprint('세금: 200,000원')\nelif displacement &lt; 3000 and displacement >= 2000:\n\tprint('세금: 300,000원')\nelif displacement &lt; 4000 and displacement >= 3000:\n\tprint('세금: 400,000원')\nelif displacement &lt; 5000 and displacement >= 4000:\n\tprint('세금: 500,000원')\nelif displacement >= 5000:\n\tprint('세금: 600,000원')\n중첩 조건문Q. 출퇴근 시 이용하는 교통수단에 따라 세금을 감면해 주는 정책을 만드려 한다. 다음내용에 맞게 프로그램을 만들어 보자:\n\n\n\n\n\n\n\n\n\n출퇴근 대상 여부 확인\n출퇴근 대상이면\n도보,자전거 -&gt; 세금 감면 5%\n버스,지하철 -&gt; 세금 감면 3%\n자가용 -&gt; 세금 추가 1%\n\n\n출퇴근 대상이 아니면 세금 변동 없음\n\nifCommute = chr(input('If you commute, please enter \\'Y\\', if not, then please enter \\'N\\'.'))\n\nif ifCommute == Y:\n\tprint('Please select your transportaion: ')\n\ttrans = int(input('1. by walk, by bike; 2. by bus, by subway; 3. by own automobile'))\n\tif trans == 1:\n\t\tprint('5% tax reduction')\n\telif trans == 2:\n\t\tprint('3% tax reduction')\n\telif trans == 3:\n\t\tprint('1% additional tax')\n\t\nelif ifCommute == N:\n\tprint('taxation unchanged')\nelse:\n\tprint('You\\'ve entered wrong character. Please enter again.')\n반복문players = ['박찬호','박세리','박지성','김연경','손흥민']\nfor player in players:\n\tprint('&#123;&#125;선수에게 메일 발송!'.format(player))\n횟수에 의한 반복for i in range(100):\n\tprint('i -> &#123;&#125;'.format(i))\n조건에 의한 반복num = 0\nwhile (num &lt; 10)\n\tprint('num -> &#123;&#125;'.format(num))\n\tnum += 1\n횟수에 의한 반복(for문)print(‘BalaBala ‘,end&#x3D;’’)for i in range(5):\n\tprint(i)\n# result : 0,1,2,3,4\nfor i in range(10):\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(7,i,(7*i)))\nfor h in range(10):\n\tprint('Hi',end='')\n\tprint(' loop statement')\n# result : Hi loop statement\n반복 범위 설정(range())for i in range(1, 11, 1)\nfor j in range(0, 10, 2)\nfor k in range(5, 10, 1)\n\nstartNum = int(input('시작 숫자 입력: '))\nendNum = int(input('마지막 숫자 입력: '))\nfor i in range(startNum,(endNum+1))\n조건에 의한 반복(while문)endNum = 10\nn = 0\n\nwhile n &lt;= endNum:\n\tprint(n)\n\tn+=1\n\ngugudanNum = int(input('희망 구구단 입력: '))\nwhile n &lt; 10:\n\tresult = gugudanNum * n\n\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(gugudanNum, n, result))\n\tn += 1\nfor문 !&#x3D; while 문횟수에 의한 반복은 for문이 while문보다 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{10}n$$\nsum = 0\nfor i in range(11)\n\tsum += i\nprint('sum: &#123;&#125;'.format(sum))\nsum = 0\ni = 1\nwhile i &lt; 11:\n\tsum += i\n\ti += 1\nprint('sum: &#123;&#125;'.format(sum))\n조건에 의한 반복은 while문이 더 적합\n\n\n\n\n\n\n\n\ne. $$ \\Sigma_{n&#x3D;1}^{k}7\\times n&gt;50,\\min k&#x3D;?$$\nsum = 0\nmaxInt = 0\nfor i in range(1,101):\n\tif i % 7 == 0 and sum &lt;= 50:\n\t\tsum += i\n\t\tmaxInt = i\n\tprint('i: &#123;&#125;'.format(i))\nprint('7의 배수의 합이 50 이상인 최초의 정수: &#123;&#125;.format(maxInt)')\nsum = 0\nmaxInt = 0\nn = 1\nwhile n &lt;= 100 and sum &lt;= 50\n\tn += 1\n\tif n 7 == 0:\n\t\tsum += n\n\t\tmaxInt = n\n\tprint('n : &#123;&#125;'.format(n))\nprint('7의 배수의 합이 50 이상인 최초의 정수: &#123;&#125;.format(maxInt)')\nQ. 자동차 바퀴가 한 번 구를 때마다 0.15mm씩 마모된다고 한다. 현재 바퀴 두께가 30mm이고, 최소 운행 가능 바퀴 두께가 20mm라고 할 때, 앞으로 구를 수 있는 횟수는?rotationCount = 0\ncurrentWheelThickness = 30\nminWheelThickness = 20\n\nwhile currentWheelThickness > minWheelThickness:\n\tcurrentWheelThickness -= 0.15\n\trotationCount += 1\nprint(\"Runable counts: &#123;&#125;\".format(rotationCount))\n무한 루프flag = True\nnum = 0\nsum = 0\n\nwhile flag:\n\tnum += 1\n\tsum += num\n\tprint('&#123;&#125;까지의 합: &#123;&#125;'.format(num,sum))\n\tif sum >= 1000:\n\t\tflag = False\nQ. 하루 병원 내방 환자가 50-100명일 때, 누적환자수가 처음으로 10000명이 넘는 날은 몇 번째 날인가?import random\n\nsum = 0\ndate = 1\nflag = True\n\nwhile flag :\n\tpatientCount = random.randint(50, 100)\n\tsum += patientCount\n\tdate += 1\nif sum >= 10000:\n\tflag = False\n\tprint('Date : &#123;&#125;th, today\\'s patient number : &#123;&#125;, accumulated patients number : &#123;&#125;'.format(date, patientCount, sum))\n반복문 제어 (continue)continuefor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\nelse반복문이 종료된 후 실행\n\ncount = 0\nfor i in range(100):\n\tif i % 7 != 0:\n\t\tcontinue\n\tprint('&#123;&#125;은/는 7의 배수입니다.'.format(i))\n\tcount += 1\nelse : \n\tprint('99까지의 정수 중 7의 배수는 &#123;&#125;개입니다.'.format(count))\nQ. 100이하 3과 7의 최소공배수와 공배수들을 출력하라.minLeastCommonMultiple = 0\n\nfor i in range(1,101):\n\tif i % 3 != 0 or i % 7 != 0\n\t\tcontinue\n\tprint('공배수: &#123;&#125;'.format(i))\n\tif minLeastCommonMultiple == 0:\n\t\tminLeastCommonMultiple = i\nelse: \n\tprint('최소 공배수: &#123;&#125;'.format(minLeastCommonMultiple))\n반복문 제어 (break)breakQ. [1,100]의 정수를 더할 때, 합계가 100이 넘는 최초의 정수 찾기sum = 0\nsearchNum = 0\nfor i in range(100):\n\tsum += i\n\tif sum > 100:\n\t\tsearchNum = i\n\t\tbreak\nprint('serched number is &#123;&#125;'.format(searchNum))\nQ. 10!을 계산하는 과정에서 결과값이 50 초과일 때의 숫자?fctResult = 1\nnum = 0\nfor i in range(10):\n\tfctResult = (10 - i) * fctResult\n\tif fctResult > 50:\n\tnum = (10 - i)\n\tbreak\nprint('num: &#123;&#125;,result: &#123;&#125;'.format(num, fctResult))\n중첩 반복문for i in range(1,10):\n\tfor j in range(i):\n\t\tprint(\"*\", end=\"\")\n\tprint()\n# result : \n# *\n# **\n# ***\n# ...\n# *********\n\nfor i in range(1,10)\n\tfor j in range(2,10)\n\t\tresult = j * i\n\t\tprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(j,i,result), end = \"\")\n\n\n","slug":"zeroBase-DS-2nd-01","date":"2023-03-06T09:00:00.000Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"2720c7e4854f5e3338f27ce5147d9b8f","title":"zeroBase_DS 1주차","content":"1st Week개발환경세팅 완료, 오랜만에 하려니까 조금 어색하다. \n앞으로의 계획본인 에타 시간표, 곧 vim 단축키도 익숙해지길 바람\n데이터 스쿨에 참여하는 나의 다짐사실 다음 학기나 내년에 동대  Natural Language Processing (NLP) Lab 또는 Inglab 연구실 학부 인턴을 해보고 싶은데, 인공지능 관련 논문 쓰는 남자친구가 커리큘럼 보고 저 정도는 손톱만큼 밖에 안하는거라 해서 함수 별로 무한대로 가는 속도(지&gt;팩&gt;다&gt;삼&gt;로)와 포아송 분포 그리고 선형대수도 까먹고 있었고 공수와 해석학도 못해본 저는 보여지는 서류라도 열심히 하는 수 밖에 없겠구나… 싶어서 이번에 들은 BDA 학회든 학점관리든 일단 힘내보려 합니다. 아자아자!✨\n1주차 학습 내용 요약 정리학습 개요 및 방법파이썬 소개 및 설치\n\n\n\n\n\n\n\n\n\n무한정수 처리 가능\n문법구조 쉬움\n모듈 개발 많이 됨\n\n프로그램 만들어보기\n\n\n\n\n\n\n\n\n\n프로그램 실행 과정PyCharm 설치\n\n\n\n\n\n\n\n\n죄송하지만 이 블로그에선 다른 언어도 같이 개발할 수 있는 nvim으로 진행합니다. \n데이터와 메모리 그리고 데이터 출력변수\n\n\n\n\n\n\n\n\nparameter는 데이터가 할당된 메모리 공간\n변수를 사용하는 이유변수명은 역시 카멜# start with small letters lest we have class confusion later.\nmyAddress = \"서울시 종로구\"\nprint(myAddress)\nhow2NameIt = 'carmel-named variable'\nhow_2_name_it = 'snake-named variable'\n# 예약어 변수명 사용 금지!\n# 'False','None','True','__peg_parser__','and','as','assert','async','await','break','class','continue','def','del','elif','else','except','finally','for','from','global','if','import','in','is','lambda','nonlocal','not','or','pass','raise','return','try','while','with','yield'\n# _ 제외 특수문자 변수명에 사용 금지(공백문자 포함)\n# do not start with a number.\n자료형dataType = '효율적인 메모리 사용을 위해 데이터를 \\n정수형,실수형,문자(열)형,논리형으로 구분한 것'\nnum = 10  #integer variable\n# 정수는 메모리가 허용하는 데까지 사용 가능\npi = 3.14 # float variable\n# 실수는 약 17-18th 소숫점에서 데이터 손실 발생\ngreeting = '반가워요!' # string variable\ntestResult = True # boolean variable\nprint(type(greeting))\n# result : &lt;class 'str'>\nprint(type(num))\n# result : &lt;class 'int'>\n자료형 변환(문자)iNum = 10\nfNum = 3.14\nbNum = True\nprint(type(iNum))\n# result : &lt;class 'int'>\nprint(type(fNum))\n# result : &lt;class 'float'>\nprint(type(bNum))\n# result : &lt;class 'bool'>\niNum = str(iNum)\nprint(type(iNum))\n# result : &lt;class 'str'>\nbNum = str(bNum)\nprint(type(bNum))\n# result : &lt;class 'str'>\n\n자료형 변환(숫자)var = False\nprint(type(var))\n# result : &lt;class 'boolean'>\nvar = int(var)\nprint(var)\n# result : 0\nprint(type(var))\n# result : &lt;class 'int'>\n\nvar1 = True\nprint(type(var1))\n# result : &lt;class 'boolean'>\nvar1 = float(var1)\nprint(var1)\n# result : 1.0\nprint(type(var))\n# result : &lt;class 'float'>\n자료형 변환(etc.)var = ''\nvar0 = '  '\n\nprint(type(var)) # result : &lt;class 'str'>\nvar = bool(var)\nprint(var) # result : False\nprint(type(var)) # result : &lt;class 'bool'>\n\nprint(type(var0)) # result : &lt;class 'str'>\nvar0 = bool(var0)\nprint(var0) # result : True\nprint(type(var0)) # result : &lt;class 'bool'>\n\nvar1 = 'True'\nvar2 = 'False'\nprint(type(var1)) # &lt;class 'str'>\nprint(type(var2)) # &lt;class 'str'>\n\nvar1 = bool(var1)\nvar2 = bool(var2)\nprint(type(var1)) # &lt;class 'bool'>\nprint(type(var2)) # &lt;class 'bool'>\n\nprint(var1 + var2) # 2\nprint(type(var1 + var2)) # &lt;class 'int'>\n데이터 입력userInputData = input(\"성적을 입력하세요: \")\nprint(type(userInputData)) # &lt;class: 'str'>\n\nuserInputIntData = input(int(\"정수를 입력하세요: \"))\nuserInputFloatData = input(float(\"실수를 입력하세요: \"))\nuserInputBooleanData = input(float(\"논리형을 입력하세요: \"))\n\n데이터 출력# ,를 이용한 데이터 연속 출력\nuserName = input(\"input user name: \")\nuserAge = input(int(\"input user age: \"))\nprint(\"input(ted) user name: \",userName,\"; input(ted) user age: \",userAge )\n# format 문자열을 이용한 데이터 출력 &lt;- recommended\nprint(f'input(ted) user name : &#123;userName&#125;, \\ninput(ted) user age : &#123;userAge&#125;')\n# \\t = tab; \\n = newline\nformat()와 형식문자userName = input(\"please input user name: \")\nuserAge = input(int(\"please input user age: \"))\n# format() 함수를 이용한 데이터 출력\nprint('input(ted) user name: &#123;&#125;'.format(userName))\nprint('input(ted) user age: &#123;&#125;'.format(userAge))\nprint(\"please double-check these data: \\nuser name: &#123;&#125;, user age : &#123;&#125; \".format(userName, userAge))\n\n# 형식 문자를 이용한 데이터 출력\nprint('User name: %s and user age: %d confirmed.' % username, userAge)\n\npi = 3.141592\nprint('pi : %f' % pi) # result : pi : 3.141592\nprint('pi : %.3f' % pi) # result : pi : 3.141\nprint('pi : %d' % pi) # result : pi : 3\n산술 연산자(+,-)정수와 실수를 이용한 덧셈\n\n\n\n\n\n\n\n\n실수 영역으로 확장\n문자를 이용한 덧셈str1 = 'Good'\nstr2 = ' '\nstr3 = 'morning'\nprint(str1 + str2 + str3)\n# result : 'Good morning'\n연산자 종류\n산술 연산자 : +,-,*,&#x2F;,%,&#x2F;&#x2F;,** (^)\n할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, **&#x3D;\n비교 연산자 : &gt;,&gt;&#x3D;,&lt;,&lt;&#x3D;, ==, !&#x3D;\n논리 연산자 : and, or, not\n\n산술 연산자(* ,&#x2F;)나눗셈 연산자는 언제나 float‘Good’*7\n\n\n\n\n\n\n\n\nGoodGoodGoodGoodGoodGoodGood\n산술 연산자 (%,&#x2F;&#x2F;)divmod( , …)num1 = 3\nnum2 = 1\nresult = divmod(num1, num2)\nprint('result : &#123;&#125;',.format(result)) \n# result : (3, 1)\nprint('1st result : &#123;&#125;'.format(result[0])) \n# 1st result : 3\nallStdCnt = int(input('전체 학생 수 입력: '))\ngrpStdNum = int(input('한 모둠 학생 수: '))\ncountGrp = allStdCnt // grpStdNum\novrNumStd = allStdCnt % grpStdNum\n\nprint('전체 학생 수: &#123;&#125;명'.format(allStdCnt))\nprint('각 모둠 학생 수: &#123;&#125;명'.format(grpStdNum))\nprint('모둠 수: &#123;&#125;개'.format(countGrp))\nprint('남는 학생 수: &#123;&#125;명'.format(ovrNumStd))\n산술연산자(**)num1 = 2\nnum2 = 3\npoweredResult = num1 ** num2\nprint('result : &#123;&#125;' .format(result))\n# n의 m제곱근 == n ** (1/m)\n\tresult = 2 ** (1/4)\n\tprint('Fourth root of 2 is : %.2f' % result)\n# math 모듈의 sqrt()&amp;pow()\n\timport math\n\tprint('2의 제곱근 %.2f' %math.sqrt(2))\n\t# 2의 제곱근 1.41\n\tprint('2의 3제곱 %.f' %math.pow(2,3))\n\t# 8.000000\n# Q. 첫 달 용돈 200원, 매달 2배, 12개월 후 =?\n\tpocketMoney1stM = 200\n\tNthMonth = int(input())\n\tafterNthM = ((pocketMoney1stM * 0.01) ** NthMonth) * 100\n\tprint( afterNthM, '원' )\n\n복합연산자할당(대입&#x2F;복합) 연산자 : &#x3D;,+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;,%&#x3D;,&#x2F;&#x2F;&#x3D;, ** &#x3D;num1 = num1 + 5 \n# num1 += 5\n\n비교연산자(숫자)num1 = 10 ; num2 = 20 \nresult = num1 &lt; num2\nprint('num1 &lt; num2 : &#123;&#125;'.format(result))\n\nstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\nfstInputNum = int(input('input 1st number : '))\nsndInputNum = int(input('input 2nd number : '))\nprint('&#123;&#125; > &#123;&#125; : &#123;&#125;'.format(fstInputNum,sndInputNum,(fstInputNum > sndInputNum)))\n\n비교연산자(문자)Ascii Text to Decimal Converter\nord('A') # orderize a char \nchr(65) # charize a num\n\n논리 연산자and &amp; or &amp; not\nprint('&#123;&#125; or &#123;&#125; : &#123;&#125;'.format(True, True, (True or False)))\nprint('not &#123; &#125; : &#123;&#125;'.format(True, (not True)))\nprint('&#123;&#125; and &#123;&#125; : &#123;&#125;'.format(False, True, (False and True)))\noperator moduleimport operator\n\nnum1 = 8\nnum2 = 3\n\nprint('&#123;&#125; + &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.add(num1,num2)))\nprint('&#123;&#125; - &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.sub(num1,num2)))\nprint('&#123;&#125; * &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mul(num1,num2)))\nprint('&#123;&#125; / &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.truediv(num1,num2)))\nprint('&#123;&#125; % &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.mod(num1,num2)))\nprint('&#123;&#125; // &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.floordiv(num1,num2)))\nprint('&#123;&#125; ** &#123;&#125; = &#123;&#125;'.format(num1,num2,operator.pow(num1,num2)))\n\n\n","slug":"zeroBase-DS","date":"2023-03-05T08:28:11.280Z","categories_index":"","tags_index":"zero-base/,data science 취업 스쿨","author_index":"BtheNerd"},{"id":"88f1dd3653b8c66a2b1a60aa62589d28","title":"세상의 모든 Vim린이들에게","content":"(본인 포함)\n\n\n\nVim을 IDE로 쓴다면 당신은 버벅임, 마우스와 터널증후군으로부터 \n자유로울 수 있습니다. 까리함과 생산성은 덤!\n\n사실 이 부분부터 보시면귀찮지만 플러그인 설치 등 노오력을 해야 한다고 하는데요\n\n밑의의 첫번째 영상 시리즈를 보시면서 따라하시면적당히 날로 드실 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n아예 CLI를 못다루시는 분이시라면 간단한 리눅스 명령어부터 배우시고 오는 걸 추천드려요!보다가 지칠 때 같이 보세요! 꿀잼 보장\n\n\n","slug":"4VimNewb","date":"2022-08-17T08:22:47.000Z","categories_index":"Neovim IDE Config","tags_index":"Vim","author_index":"BtheNerd"},{"id":"f16485884214c546614773933a5c3a08","title":"I hate exams.","content":"\n328회 TEPS정기시험 (2022년 8월 6일(토) 실시)을 봤다.488점이 나왔다. 비록 500점은 안되지만 1등급(453~525)\t‘외국인으로서 최상급 수준에 근접한 의사소통능력 (Near-Native Level of Communicative Competence) 단기간 집중 교육을 받으면 대부분의 의사소통이 가능하고 전문분야 업무에 별 무리없이 대처할 수 있음’이라니 그냥 2년 뒤에 다시 봐야겠다.본의 아니게 5급 외무영사직 영어시험 면제가 되었다. 와!\n","slug":"exams","date":"2022-08-16T09:28:46.000Z","categories_index":"","tags_index":"TEPS","author_index":"BtheNerd"},{"id":"6e573ed5ed74772ec768a29128114817","title":"My beloved markdown editor, Typora had ceased to serve complimentary service.","content":"그래서 Obsidian으로 갈아탔다.사실 요즘 neovim 쓰다가 그냥 터미널에서 쓰는게 편해서 터미널로 작업중인데 역시 여기서 md 파일 편집은 살짝 아쉽다.플러그인 찾아봐야할까\nI think I have found the right one\n\n\n\n\n\n\n\n\n\n","slug":"Shooting","date":"2022-08-16T09:27:43.000Z","categories_index":"Neovim IDE Config","tags_index":"Obsidian,Typora","author_index":"BtheNerd"},{"id":"f2e2ed9356207b840aae6645ef52766b","title":"I should have written 3 articles to activate feature mode.","content":"\n","slug":"mode","date":"2022-08-16T09:27:11.000Z","categories_index":"Hexo Blog","tags_index":"Aurora,Hexo","author_index":"BtheNerd"}]
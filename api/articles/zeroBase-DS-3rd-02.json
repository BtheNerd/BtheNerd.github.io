{"title":"zeroBase_DS 3주차 화요일 스터디노트","uid":"1cd0a7cc4fe853645190a97ba47fde31","slug":"zeroBase-DS-3rd-02","date":"2023-03-14T09:00:00.000Z","updated":"2023-03-20T05:42:27.450Z","comments":true,"path":"api/articles/zeroBase-DS-3rd-02.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","content":"<h2 id=\"3rd-Week\"><a href=\"#3rd-Week\" class=\"headerlink\" title=\"3rd Week\"></a>3rd Week</h2><h3 id=\"Tuesday\"><a href=\"#Tuesday\" class=\"headerlink\" title=\"Tuesday\"></a>Tuesday</h3><h4 id=\"연습문제-텍스트-파일-02\"><a href=\"#연습문제-텍스트-파일-02\" class=\"headerlink\" title=\"[연습문제] 텍스트 파일(02)\"></a>[연습문제] 텍스트 파일(02)</h4><h6 id=\"텍스트-파일에-수입-지출을-기록하는-가계부-만들기\"><a href=\"#텍스트-파일에-수입-지출을-기록하는-가계부-만들기\" class=\"headerlink\" title=\"텍스트 파일에 수입,지출을 기록하는 가계부 만들기\"></a>텍스트 파일에 수입,지출을 기록하는 가계부 만들기</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">formatedNum</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tlt <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tst <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> st\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\tselectNumber <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.입금\\t2.출금\\t3.종료'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> selectNumber <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tmoney <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'입금액 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tm <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tmemo <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'입금 내역 입력: '</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'=========================================='</span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \\n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[입금]</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>memo<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>formatedNum<span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">원\\n'</span></span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[잔액]: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>formatedNum<span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">원\\n'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'입금 완료'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'기존 잔액: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>formatedNum<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'입금 후 잔액: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>formatedNum<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t\n\t<span class=\"token keyword\">elif</span> selectNumber <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n\t\tmoney <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'출금액 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tm <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/money.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tmemo <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'출금 내역 입력: '</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/poketMoneyRegister.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'==========================================='</span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \\n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[출금]</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>memo<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>formatedNum<span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">원\\n'</span></span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'[잔액]: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>formatedNum<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">원\\n'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'출금 완료'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'기존 잔액: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>formatedNum<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'출금 후 잔액: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>formatedNum<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">elif</span> selectNumber <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bye'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">break</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please re-enter.'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"연습문제-텍스트-파일-03\"><a href=\"#연습문제-텍스트-파일-03\" class=\"headerlink\" title=\"[연습문제] 텍스트 파일(03)\"></a>[연습문제] 텍스트 파일(03)</h4><h6 id=\"사용자가-입력한-숫자의-약수를-텍스트-파일에-기록해보자\"><a href=\"#사용자가-입력한-숫자의-약수를-텍스트-파일에-기록해보자\" class=\"headerlink\" title=\"사용자가 입력한 숫자의 약수를 텍스트 파일에 기록해보자.\"></a>사용자가 입력한 숫자의 약수를 텍스트 파일에 기록해보자.</h6><pre><code>ex.py\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputNumber <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0보다 큰 정수(자연수)를 입력해주세요: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndivisor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>inputNumber<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> inputNumber <span class=\"token operator\">%</span> number <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tdivisor<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>divisor<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>inputNumber<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 약수: '</span></span><span class=\"token punctuation\">)</span>\n\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>divisor<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'divisor was re-written.'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputNumber <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0보다 큰 정수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprime <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>inputNumber<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\t<span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> number <span class=\"token operator\">%</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t<span class=\"token keyword\">if</span> flag<span class=\"token punctuation\">:</span>\n\t\tprime<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prime<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'(inputNumber)까지의 소수: '</span></span><span class=\"token punctuation\">)</span>\n\t\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>prime<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Prime numbers have been written.'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>divisor.txt\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">```\n<span class=\"token comment\">###### 사용자가 입력한 숫자까지의 소수를 텍스트 파일에 기록해보자.</span>\n<span class=\"token comment\">#### [연습문제] 텍스트 파일(04)</span>\n<span class=\"token comment\">###### 두 개의 수를 입력하면 공약수를 테스트 파일에 작성해보자</span>\n```python\nnum1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1보다 큰 정수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1보다 큰 정수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncommomFactors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nmaxCommonNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\tcommon<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 최대공약수</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\tmaxComNum <span class=\"token operator\">=</span> i\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>common<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/divisor.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f <span class=\"token punctuation\">:</span>\n\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">과 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 공약수: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>common<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">과 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 최대공약수 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>maxComNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e <span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Common factors have been written.'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"연습문제-텍스트-파일-05\"><a href=\"#연습문제-텍스트-파일-05\" class=\"headerlink\" title=\"[연습문제] 텍스트 파일(05)\"></a>[연습문제] 텍스트 파일(05)</h4><h5 id=\"from-datetime-import-timedelta-날짜연산\"><a href=\"#from-datetime-import-timedelta-날짜연산\" class=\"headerlink\" title=\"from datetime import timedelta(날짜연산)\"></a>from datetime import timedelta(날짜연산)</h5><h6 id=\"섬마을에-과일-생선-야채를-판매하는-배가-다음-주기로-입항한다고-할-때-모든-배가-입항하는-날짜를-텍스트-파일에-기록해보자-첫-입항일은-2021년-1월-1일-오전-10시로-하되-과일-선박-입항주기-3일-x2F-생선선박-입항주기-4일-x2F-야채-선박-입항주기-5일\"><a href=\"#섬마을에-과일-생선-야채를-판매하는-배가-다음-주기로-입항한다고-할-때-모든-배가-입항하는-날짜를-텍스트-파일에-기록해보자-첫-입항일은-2021년-1월-1일-오전-10시로-하되-과일-선박-입항주기-3일-x2F-생선선박-입항주기-4일-x2F-야채-선박-입항주기-5일\" class=\"headerlink\" title=\"섬마을에 과일,생선,야채를 판매하는 배가 다음 주기로 입항한다고 할 때, 모든 배가 입항하는 날짜를 텍스트 파일에 기록해보자. (첫 입항일은 2021년 1월 1일 오전 10시로 하되; 과일 선박 입항주기: 3일&#x2F; 생선선박 입항주기: 4일&#x2F; 야채 선박 입항주기: 5일)\"></a>섬마을에 과일,생선,야채를 판매하는 배가 다음 주기로 입항한다고 할 때, 모든 배가 입항하는 날짜를 텍스트 파일에 기록해보자. (첫 입항일은 2021년 1월 1일 오전 10시로 하되; 과일 선박 입항주기: 3일&#x2F; 생선선박 입항주기: 4일&#x2F; 야채 선박 입항주기: 5일)</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> datatime <span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta\n\nship1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nship2 <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nship3 <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nmaxDay <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>ship1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> ship1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> ship2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\tmaxDay <span class=\"token operator\">=</span> i\nminDay <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ship1<span class=\"token operator\">*</span>ship2<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> maxDay\n\nnewDay <span class=\"token operator\">=</span> minDay\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>newDay<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> newDay <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> ship3 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tnewDay <span class=\"token operator\">=</span> i\n\nminDay <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newDay <span class=\"token operator\">*</span> ship3<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> maxDay\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'minDay : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>minDay<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'maxDay : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>maxDay<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nbaseTime <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/shiparrivals.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'2023년 모든 선박 동시입항일\\n'</span></span><span class=\"token punctuation\">)</span>\n\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>baseTime<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\nnextTime <span class=\"token operator\">=</span> baseTime <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span>minDay<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/shiparrivals.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nextTime<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n'</span></span><span class=\"token punctuation\">)</span>\n\tnextTime <span class=\"token operator\">=</span> baseTime <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>day<span class=\"token operator\">=</span>minDay<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> nextTime<span class=\"token punctuation\">.</span>year <span class=\"token operator\">></span> <span class=\"token number\">2023</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"약수와-소수\"><a href=\"#약수와-소수\" class=\"headerlink\" title=\"약수와 소수\"></a>약수와 소수</h4><h6 id=\"1-30-의-구간에서-5로-나눈-몫과-나머지가-모두-소수인-숫자들을-찾아보자\"><a href=\"#1-30-의-구간에서-5로-나눈-몫과-나머지가-모두-소수인-숫자들을-찾아보자\" class=\"headerlink\" title=\"[1:30]의 구간에서 5로 나눈 몫과 나머지가 모두 소수인 숫자들을 찾아보자\"></a>[1:30]의 구간에서 5로 나눈 몫과 나머지가 모두 소수인 숫자들을 찾아보자</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">isPrime <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nmidNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\ntargetNums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">whetherPrime</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tisPrime <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t\tisPrime <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> i <span class=\"token operator\">//</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tmidNum <span class=\"token operator\">=</span> i\n\t\twhetherPrime<span class=\"token punctuation\">(</span>midNum<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> isPrime <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t\t\ttargetNums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is a target number'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t\t<span class=\"token keyword\">continue</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">isPrime &#x3D; False\nmidNum &#x3D; 0\ntargetNums &#x3D; []\n\ndef whetherPrime(num):\n\tfor i in range(2,num):\n\t\tif num % i &#x3D;&#x3D; 0:\n\t\t\tisPrime &#x3D; False\n\t\telse: \n\t\t\tisPrime &#x3D; True\n\nfor i in range(1,31):\n\tif i % 5 &#x3D;&#x3D; 0 and i &#x2F;&#x2F; 5 &#x3D;&#x3D; 0:\n\t\tmidNum &#x3D; i\n\t\twhetherPrime(midNum)\n\t\tif isPrime &#x3D;&#x3D; True:\n\t\t\ttargetNums.append(i)\n\t\t\tprint(f&#39;&#123;i&#125; is a target number&#39;)\n\t\telse: \n\t\t\tcontinue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"약수와-소수-파이썬\"><a href=\"#약수와-소수-파이썬\" class=\"headerlink\" title=\"약수와 소수(파이썬)\"></a>약수와 소수(파이썬)</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputNum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0보다 큰 정수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>unputNum<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> inputNum <span class=\"token operator\">%</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;의 약수: &#123;&#125;.'</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>inputNum<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"사용자가-입력한-숫자까지의-소수를-출력해보자\"><a href=\"#사용자가-입력한-숫자까지의-소수를-출력해보자\" class=\"headerlink\" title=\"사용자가 입력한 숫자까지의 소수를 출력해보자\"></a>사용자가 입력한 숫자까지의 소수를 출력해보자</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>inputNum<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\t<span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tflag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t<span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: 소수!'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: 합성수!'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"소인수와-소인수분해\"><a href=\"#소인수와-소인수분해\" class=\"headerlink\" title=\"소인수와 소인수분해\"></a>소인수와 소인수분해</h4><h6 id=\"소인수-prime-factor-质因子\"><a href=\"#소인수-prime-factor-质因子\" class=\"headerlink\" title=\"소인수: prime factor;质因子\"></a>소인수: prime factor;质因子</h6><h4 id=\"소인수와-소인수분해-파이썬\"><a href=\"#소인수와-소인수분해-파이썬\" class=\"headerlink\" title=\"소인수와 소인수분해(파이썬)\"></a>소인수와 소인수분해(파이썬)</h4><pre><code>factorization.py\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math  \n\ninputNum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input a natural number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \n  \n<span class=\"token keyword\">def</span> get_factor_list<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n  \n    <span class=\"token triple-quoted-string string\">\"\"\"  \n    Use trial division to identify the factors of n.  \n    1 is always a factor of any integer so is added at the start.  \n    We only need to check up to n/2, and then add n after the loop.  \n    \"\"\"</span>  \n    factors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  \n  \n    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>ceil<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> t <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  \n            factors<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>  \n  \n    factors<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>  \n  \n    <span class=\"token keyword\">return</span> factors  \n  \n  \n<span class=\"token keyword\">def</span> factors<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n  \n    <span class=\"token triple-quoted-string string\">\"\"\"  \n    Generator function leveraging the get_factor_list function.  \n    \"\"\"</span>  \n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>get_factor_list<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>main.py\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> factorization  \n  \n<span class=\"token keyword\">def</span> main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n  \n    <span class=\"token triple-quoted-string string\">\"\"\"  \n    Test the get_factor_list function and factors generator on a few numbers.  \n    \"\"\"</span>  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------\\n|\"</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"| codedrome.com |\"</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"| Factorization |\"</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------\\n\"</span><span class=\"token punctuation\">)</span>  \n  \n    numbers_to_factorize <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span>  \n  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"factorization.get_factor_list\\n-----------------------------\"</span><span class=\"token punctuation\">)</span>  \n  \n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> numbers_to_factorize<span class=\"token punctuation\">:</span>  \n  \n        factors <span class=\"token operator\">=</span> factorization<span class=\"token punctuation\">.</span>get_factor_list<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>  \n  \n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Factors of &#123;&#125;: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n  \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nfactorization.factors (generator)\\n---------------------------------\"</span><span class=\"token punctuation\">)</span>  \n  \n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> numbers_to_factorize<span class=\"token punctuation\">:</span>  \n  \n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Factors of &#123;&#125;: \"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>  \n  \n        <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> factorization<span class=\"token punctuation\">.</span>factors<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125; \"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>  \n  \n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>  \n  \n  \nmain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"72에-x를-곱하면-y의-제곱이-된다고-할-때-x에-해당하는-가장-작은-정수를-구하자\"><a href=\"#72에-x를-곱하면-y의-제곱이-된다고-할-때-x에-해당하는-가장-작은-정수를-구하자\" class=\"headerlink\" title=\"72에 x를 곱하면 y의 제곱이 된다고 할 때, x에 해당하는 가장 작은 정수를 구하자.\"></a>72에 x를 곱하면 y의 제곱이 된다고 할 때, x에 해당하는 가장 작은 정수를 구하자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputNum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input a natural number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nsearchedNums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;=</span> inputNum<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> inputNum <span class=\"token operator\">%</span> n <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'prime factor: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> searchedNums<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tsearchedNums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">elif</span> searchedNums<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tsearchedNums<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\t\tinputNum <span class=\"token operator\">/=</span> n\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span> \n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"최대공약수\"><a href=\"#최대공약수\" class=\"headerlink\" title=\"최대공약수\"></a>최대공약수</h4><h5 id=\"for문과-유클리드-호제법을-이용해서-최대공약수-구하기\"><a href=\"#for문과-유클리드-호제법을-이용해서-최대공약수-구하기\" class=\"headerlink\" title=\"for문과 유클리드 호제법을 이용해서 최대공약수 구하기:\"></a>for문과 <a href=\"https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95\">유클리드 호제법</a>을 이용해서 최대공약수 구하기:</h5><h6 id=\"두-개의-수를-입력하면-공약수와-최대공약수를-출력하는-코드를-작성하자\"><a href=\"#두-개의-수를-입력하면-공약수와-최대공약수를-출력하는-코드를-작성하자\" class=\"headerlink\" title=\"두 개의 수를 입력하면 공약수와 최대공약수를 출력하는 코드를 작성하자\"></a>두 개의 수를 입력하면 공약수와 최대공약수를 출력하는 코드를 작성하자</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmaxNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'common factor: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\tmaxNum <span class=\"token operator\">=</span> i\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Max common factor : &#123;maxNum&#125;'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>유클리드 호제법에 의해 x,y의 최대공약수는 y,r(&#x3D;x%y)의 최대공약수와 같으므로, 다음 회차엔 y를 x에 대입하고 y에 r을 대입하는 식으로 나머지(r)가 0이 될때까지 반복한다.<br><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2015-37-48.png?raw=true\" alt=\"유클리드호제법\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntemp1 <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span> temp2 <span class=\"token operator\">=</span> num2\n\n<span class=\"token keyword\">while</span> temp2 <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\ttemp <span class=\"token operator\">=</span> temp2\n\ttemp2 <span class=\"token operator\">=</span> temp1 <span class=\"token operator\">%</span> temp2\n\ttemp1 <span class=\"token operator\">=</span> temp\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 최대공약수: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>temp1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>temp1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> temp1 <span class=\"token operator\">%</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;,&#123;&#125;의 공약수: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"최대공약수-파이썬\"><a href=\"#최대공약수-파이썬\" class=\"headerlink\" title=\"최대공약수(파이썬)\"></a>최대공약수(파이썬)</h4><h4 id=\"최소공배수\"><a href=\"#최소공배수\" class=\"headerlink\" title=\"최소공배수\"></a>최소공배수</h4><h4 id=\"최소공배수-파이썬\"><a href=\"#최소공배수-파이썬\" class=\"headerlink\" title=\"최소공배수(파이썬)\"></a>최소공배수(파이썬)</h4><h5 id=\"for문과-유클리드-호제법을-이용해서-최소공배수를-구하자\"><a href=\"#for문과-유클리드-호제법을-이용해서-최소공배수를-구하자\" class=\"headerlink\" title=\"for문과 유클리드 호제법을 이용해서 최소공배수를 구하자!\"></a>for문과 유클리드 호제법을 이용해서 최소공배수를 구하자!</h5><h6 id=\"두-개의-수를-입력하면-최소공배수를-출력하는-코드를-작성하자\"><a href=\"#두-개의-수를-입력하면-최소공배수를-출력하는-코드를-작성하자\" class=\"headerlink\" title=\"두 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자.\"></a>두 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an Integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an Integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmaxNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'common factor: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\tmaxNum <span class=\"token operator\">=</span> i\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Maxinum common factor: &#123;maxNum&#125;'</span><span class=\"token punctuation\">)</span>\n\nminNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1<span class=\"token operator\">*</span>num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> maxNum\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Least common multiple : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>minNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"세-개의-수를-입력하면-최소공배수를-출력하는-코드를-작성하자\"><a href=\"#세-개의-수를-입력하면-최소공배수를-출력하는-코드를-작성하자\" class=\"headerlink\" title=\"세 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자\"></a>세 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum3 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an integer larger than 1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmaxNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num2 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tmaxNum <span class=\"token operator\">=</span> i\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Maximum common factor: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>maxNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nleastNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> maxNum\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 최소공배수: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leastNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nnewNum <span class=\"token operator\">=</span> leastNum\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>newNum<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> newNum <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> num3 <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tmaxNum <span class=\"token operator\">=</span> i\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Maximum common factor: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>maxNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nleastNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newNum<span class=\"token operator\">*</span>num3<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span> maxNum\n\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num3<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">의 최소공배수: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>leastNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"진법\"><a href=\"#진법\" class=\"headerlink\" title=\"진법\"></a>진법</h4><h5 id=\"10진수-gt-x진수\"><a href=\"#10진수-gt-x진수\" class=\"headerlink\" title=\"10진수 -&gt; x진수\"></a>10진수 -&gt; x진수</h5><p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-19-07.png?raw=true\" alt=\"진법1\"><br><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-21-10.png?raw=true\" alt=\"진법2\"><br><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-22-54.png?raw=true\" alt=\"진법3\"></p>\n<ul>\n<li>계산기 기능 활용</li>\n</ul>\n<h5 id=\"x진수-gt-10진수-변환\"><a href=\"#x진수-gt-10진수-변환\" class=\"headerlink\" title=\"x진수 -&gt; 10진수 변환\"></a>x진수 -&gt; 10진수 변환</h5><p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-25-38.png?raw=true\" alt=\"진법4\"></p>\n<h5 id=\"2진수-gt-8진수-변환\"><a href=\"#2진수-gt-8진수-변환\" class=\"headerlink\" title=\"2진수 -&gt; 8진수 변환\"></a>2진수 -&gt; 8진수 변환</h5><p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-28-48.png?raw=true\" alt=\"진법5\"></p>\n<h5 id=\"2진수-gt-16진수-변환\"><a href=\"#2진수-gt-16진수-변환\" class=\"headerlink\" title=\"2진수 -&gt; 16진수 변환\"></a>2진수 -&gt; 16진수 변환</h5><p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2019%2016-29-34.png?raw=true\" alt=\"진법6\"></p>\n<h4 id=\"진법-파이썬\"><a href=\"#진법-파이썬\" class=\"headerlink\" title=\"진법(파이썬)\"></a>진법(파이썬)</h4><h5 id=\"type-bin-type-oct-type-hex\"><a href=\"#type-bin-type-oct-type-hex\" class=\"headerlink\" title=\"type(bin()); type(oct()); type(hex())\"></a>type(bin()); type(oct()); type(hex())</h5><h5 id=\"format-decimalNum-’-b’-format-decimalNum-’-o’-format-decimalNum-’-x’\"><a href=\"#format-decimalNum-’-b’-format-decimalNum-’-o’-format-decimalNum-’-x’\" class=\"headerlink\" title=\".format(decimalNum,’#b’); .format(decimalNum,’#o’); .format(decimalNum,’#x’)\"></a>.format(decimalNum,’#b’); .format(decimalNum,’#o’); .format(decimalNum,’#x’)</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dNum <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'From decimal number </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> to binary number: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>dNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'From decimal number </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> to octal number: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>dNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'From decimal number </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>dNum<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> to hexadecimal number: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>dNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\ndecimalNum <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binary number: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decimalNum<span class=\"token punctuation\">,</span><span class=\"token string\">'#b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'octal number: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decimalNum<span class=\"token punctuation\">,</span><span class=\"token string\">'#o'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hexadecimal number: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>decimalNum<span class=\"token punctuation\">,</span><span class=\"token string\">'#x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>x진수 -&gt; 10진수\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binary (0b11110) -> 10진수(&#123;&#125;)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0b11110'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'octal (0o36) -> 10진수(&#123;&#125;)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0o36'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binary (0x1e) -> 10진수(&#123;&#125;)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0x1e'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"수열\"><a href=\"#수열\" class=\"headerlink\" title=\"수열\"></a>수열</h4><h4 id=\"등차-수열\"><a href=\"#등차-수열\" class=\"headerlink\" title=\"등차 수열\"></a>등차 수열</h4><h4 id=\"등차-수열-파이썬-01\"><a href=\"#등차-수열-파이썬-01\" class=\"headerlink\" title=\"등차 수열(파이썬) (01)\"></a>등차 수열(파이썬) (01)</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n1 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'공차 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'항수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nvalueN <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;=</span> inputN <span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tvalueN <span class=\"token operator\">+=</span> inputD\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">번째항의 값: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>valueN<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token keyword\">continue</span>\n\tvalueN <span class=\"token operator\">+=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;번째 항의 값: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>valueN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;번째 항의 값: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>inputN<span class=\"token punctuation\">,</span>valueN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n1 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'공차 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'항수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nvalueN <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nvalueN <span class=\"token operator\">=</span> inputN1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>inputN <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inputD\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;번째 항의 값: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>inputN<span class=\"token punctuation\">,</span> valueN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"등차-수열-파이썬-02\"><a href=\"#등차-수열-파이썬-02\" class=\"headerlink\" title=\"등차 수열(파이썬) (02)\"></a>등차 수열(파이썬) (02)</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">inputN1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'초항 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputD <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'공차 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ninputN <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n번째 항 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nvalueN <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nsumN <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;=</span> inputN<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n\t\tvalueN <span class=\"token operator\">=</span> inputN1\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">번째 항의 값: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>valueN<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token keyword\">continue</span>\n\tvalueN <span class=\"token operator\">+=</span> inputD\n\tsumN <span class=\"token operator\">+=</span> valueN\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">번째 항의 값: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sumN<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>inputN<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">번째 항의 값: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sumN<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">inputN1 &#x3D; int(input(&#39;초항 입력: &#39;))\ninputD &#x3D; int(input(&#39;공차 입력: &#39;))\ninputN &#x3D; int(input(&#39;항 개수 입력: &#39;))\n\nvalueN &#x3D; inputN1 + (inputN - 1)*inputD\nsumN &#x3D; inputN *(inputN1 + valueN) &#x2F; 2\nprint(f&#39;&#123;inputN&#125;번째 항까지의 합: &#123;int(sumN)&#125;&#39;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"3rd WeekTuesday[연습문제] 텍스트 파일(02)텍스트 파일에 수입,지출을 기록하는 가계부 만들기import time def formatedNum(n): return format(n,',') def getTime(): lt = time.loc...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":24,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":24,"path":"api/tags/data-science-취업-스쿨.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3rd-Week\"><span class=\"toc-text\">3rd Week</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Tuesday\"><span class=\"toc-text\">Tuesday</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%97%B0%EC%8A%B5%EB%AC%B8%EC%A0%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-02\"><span class=\"toc-text\">[연습문제] 텍스트 파일(02)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC%EC%97%90-%EC%88%98%EC%9E%85-%EC%A7%80%EC%B6%9C%EC%9D%84-%EA%B8%B0%EB%A1%9D%ED%95%98%EB%8A%94-%EA%B0%80%EA%B3%84%EB%B6%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\"><span class=\"toc-text\">텍스트 파일에 수입,지출을 기록하는 가계부 만들기</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%97%B0%EC%8A%B5%EB%AC%B8%EC%A0%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-03\"><span class=\"toc-text\">[연습문제] 텍스트 파일(03)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%9E%85%EB%A0%A5%ED%95%9C-%EC%88%AB%EC%9E%90%EC%9D%98-%EC%95%BD%EC%88%98%EB%A5%BC-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC%EC%97%90-%EA%B8%B0%EB%A1%9D%ED%95%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">사용자가 입력한 숫자의 약수를 텍스트 파일에 기록해보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%97%B0%EC%8A%B5%EB%AC%B8%EC%A0%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-05\"><span class=\"toc-text\">[연습문제] 텍스트 파일(05)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#from-datetime-import-timedelta-%EB%82%A0%EC%A7%9C%EC%97%B0%EC%82%B0\"><span class=\"toc-text\">from datetime import timedelta(날짜연산)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%84%AC%EB%A7%88%EC%9D%84%EC%97%90-%EA%B3%BC%EC%9D%BC-%EC%83%9D%EC%84%A0-%EC%95%BC%EC%B1%84%EB%A5%BC-%ED%8C%90%EB%A7%A4%ED%95%98%EB%8A%94-%EB%B0%B0%EA%B0%80-%EB%8B%A4%EC%9D%8C-%EC%A3%BC%EA%B8%B0%EB%A1%9C-%EC%9E%85%ED%95%AD%ED%95%9C%EB%8B%A4%EA%B3%A0-%ED%95%A0-%EB%95%8C-%EB%AA%A8%EB%93%A0-%EB%B0%B0%EA%B0%80-%EC%9E%85%ED%95%AD%ED%95%98%EB%8A%94-%EB%82%A0%EC%A7%9C%EB%A5%BC-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC%EC%97%90-%EA%B8%B0%EB%A1%9D%ED%95%B4%EB%B3%B4%EC%9E%90-%EC%B2%AB-%EC%9E%85%ED%95%AD%EC%9D%BC%EC%9D%80-2021%EB%85%84-1%EC%9B%94-1%EC%9D%BC-%EC%98%A4%EC%A0%84-10%EC%8B%9C%EB%A1%9C-%ED%95%98%EB%90%98-%EA%B3%BC%EC%9D%BC-%EC%84%A0%EB%B0%95-%EC%9E%85%ED%95%AD%EC%A3%BC%EA%B8%B0-3%EC%9D%BC-x2F-%EC%83%9D%EC%84%A0%EC%84%A0%EB%B0%95-%EC%9E%85%ED%95%AD%EC%A3%BC%EA%B8%B0-4%EC%9D%BC-x2F-%EC%95%BC%EC%B1%84-%EC%84%A0%EB%B0%95-%EC%9E%85%ED%95%AD%EC%A3%BC%EA%B8%B0-5%EC%9D%BC\"><span class=\"toc-text\">섬마을에 과일,생선,야채를 판매하는 배가 다음 주기로 입항한다고 할 때, 모든 배가 입항하는 날짜를 텍스트 파일에 기록해보자. (첫 입항일은 2021년 1월 1일 오전 10시로 하되; 과일 선박 입항주기: 3일&#x2F; 생선선박 입항주기: 4일&#x2F; 야채 선박 입항주기: 5일)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%95%BD%EC%88%98%EC%99%80-%EC%86%8C%EC%88%98\"><span class=\"toc-text\">약수와 소수</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-30-%EC%9D%98-%EA%B5%AC%EA%B0%84%EC%97%90%EC%84%9C-5%EB%A1%9C-%EB%82%98%EB%88%88-%EB%AA%AB%EA%B3%BC-%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-%EB%AA%A8%EB%91%90-%EC%86%8C%EC%88%98%EC%9D%B8-%EC%88%AB%EC%9E%90%EB%93%A4%EC%9D%84-%EC%B0%BE%EC%95%84%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">[1:30]의 구간에서 5로 나눈 몫과 나머지가 모두 소수인 숫자들을 찾아보자</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%95%BD%EC%88%98%EC%99%80-%EC%86%8C%EC%88%98-%ED%8C%8C%EC%9D%B4%EC%8D%AC\"><span class=\"toc-text\">약수와 소수(파이썬)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EC%9E%85%EB%A0%A5%ED%95%9C-%EC%88%AB%EC%9E%90%EA%B9%8C%EC%A7%80%EC%9D%98-%EC%86%8C%EC%88%98%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">사용자가 입력한 숫자까지의 소수를 출력해보자</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%86%8C%EC%9D%B8%EC%88%98%EC%99%80-%EC%86%8C%EC%9D%B8%EC%88%98%EB%B6%84%ED%95%B4\"><span class=\"toc-text\">소인수와 소인수분해</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%86%8C%EC%9D%B8%EC%88%98-prime-factor-%E8%B4%A8%E5%9B%A0%E5%AD%90\"><span class=\"toc-text\">소인수: prime factor;质因子</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%86%8C%EC%9D%B8%EC%88%98%EC%99%80-%EC%86%8C%EC%9D%B8%EC%88%98%EB%B6%84%ED%95%B4-%ED%8C%8C%EC%9D%B4%EC%8D%AC\"><span class=\"toc-text\">소인수와 소인수분해(파이썬)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#72%EC%97%90-x%EB%A5%BC-%EA%B3%B1%ED%95%98%EB%A9%B4-y%EC%9D%98-%EC%A0%9C%EA%B3%B1%EC%9D%B4-%EB%90%9C%EB%8B%A4%EA%B3%A0-%ED%95%A0-%EB%95%8C-x%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%EA%B0%80%EC%9E%A5-%EC%9E%91%EC%9D%80-%EC%A0%95%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%98%EC%9E%90\"><span class=\"toc-text\">72에 x를 곱하면 y의 제곱이 된다고 할 때, x에 해당하는 가장 작은 정수를 구하자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98\"><span class=\"toc-text\">최대공약수</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#for%EB%AC%B8%EA%B3%BC-%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0\"><span class=\"toc-text\">for문과 유클리드 호제법을 이용해서 최대공약수 구하기:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EB%91%90-%EA%B0%9C%EC%9D%98-%EC%88%98%EB%A5%BC-%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4-%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EC%9E%90\"><span class=\"toc-text\">두 개의 수를 입력하면 공약수와 최대공약수를 출력하는 코드를 작성하자</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%ED%8C%8C%EC%9D%B4%EC%8D%AC\"><span class=\"toc-text\">최대공약수(파이썬)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98\"><span class=\"toc-text\">최소공배수</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-%ED%8C%8C%EC%9D%B4%EC%8D%AC\"><span class=\"toc-text\">최소공배수(파이썬)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#for%EB%AC%B8%EA%B3%BC-%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%98%EC%9E%90\"><span class=\"toc-text\">for문과 유클리드 호제법을 이용해서 최소공배수를 구하자!</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EB%91%90-%EA%B0%9C%EC%9D%98-%EC%88%98%EB%A5%BC-%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EC%9E%90\"><span class=\"toc-text\">두 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자.</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%84%B8-%EA%B0%9C%EC%9D%98-%EC%88%98%EB%A5%BC-%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EC%9E%90\"><span class=\"toc-text\">세 개의 수를 입력하면 최소공배수를 출력하는 코드를 작성하자</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%A7%84%EB%B2%95\"><span class=\"toc-text\">진법</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#10%EC%A7%84%EC%88%98-gt-x%EC%A7%84%EC%88%98\"><span class=\"toc-text\">10진수 -&gt; x진수</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#x%EC%A7%84%EC%88%98-gt-10%EC%A7%84%EC%88%98-%EB%B3%80%ED%99%98\"><span class=\"toc-text\">x진수 -&gt; 10진수 변환</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%EC%A7%84%EC%88%98-gt-8%EC%A7%84%EC%88%98-%EB%B3%80%ED%99%98\"><span class=\"toc-text\">2진수 -&gt; 8진수 변환</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%EC%A7%84%EC%88%98-gt-16%EC%A7%84%EC%88%98-%EB%B3%80%ED%99%98\"><span class=\"toc-text\">2진수 -&gt; 16진수 변환</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%A7%84%EB%B2%95-%ED%8C%8C%EC%9D%B4%EC%8D%AC\"><span class=\"toc-text\">진법(파이썬)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#type-bin-type-oct-type-hex\"><span class=\"toc-text\">type(bin()); type(oct()); type(hex())</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#format-decimalNum-%E2%80%99-b%E2%80%99-format-decimalNum-%E2%80%99-o%E2%80%99-format-decimalNum-%E2%80%99-x%E2%80%99\"><span class=\"toc-text\">.format(decimalNum,’#b’); .format(decimalNum,’#o’); .format(decimalNum,’#x’)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%88%98%EC%97%B4\"><span class=\"toc-text\">수열</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EB%93%B1%EC%B0%A8-%EC%88%98%EC%97%B4\"><span class=\"toc-text\">등차 수열</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EB%93%B1%EC%B0%A8-%EC%88%98%EC%97%B4-%ED%8C%8C%EC%9D%B4%EC%8D%AC-01\"><span class=\"toc-text\">등차 수열(파이썬) (01)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EB%93%B1%EC%B0%A8-%EC%88%98%EC%97%B4-%ED%8C%8C%EC%9D%B4%EC%8D%AC-02\"><span class=\"toc-text\">등차 수열(파이썬) (02)</span></a></li></ol></li></ol></li></ol>","author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}},"mapped":true,"prev_post":{"title":"zeroBase_DS 3주차 수요일 스터디노트","uid":"829ef4d975c86b73be4764f9fe8ce223","slug":"zeroBase-DS-3rd-03","date":"2023-03-15T09:00:00.000Z","updated":"2023-03-20T05:43:02.900Z","comments":true,"path":"api/articles/zeroBase-DS-3rd-03.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","text":"3rd WeekWednesday등비 수열등비 수열(파이썬) (01)inputN1 = int(input('초항 입력: ')) inputR = int(input('공비 입력: ')) inputN = int(input('항 수 입력: ')) valueN =...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":24,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":24,"path":"api/tags/data-science-취업-스쿨.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}}},"next_post":{"title":"Week 1.채용공고 살펴보기","uid":"9621e8ae63ed17a106a58fdedd5a4127","slug":"Week.1_채용공고살펴보기","date":"2023-03-13T14:00:00.000Z","updated":"2023-03-14T01:36:40.938Z","comments":true,"path":"api/articles/Week.1_채용공고살펴보기.json","keywords":null,"cover":"https://play-lh.googleusercontent.com/C-Rk5j68xQIgi1apCuupseecXCquaNb-VZdnBecmjYK4_LHPg-ytgk7BTSe8JHSyjoY","text":"Week.1_채용공고 살펴보기1) 데이터 취업 스쿨에 참여하는 여러분들의 다짐과 입과 계기를 작성해 주세요평소 데이터 분석에 관심 많은 편이었어서 올해 초에 준비하던 시험에 합격한 후 AWS와 AD(s)P를 준비를 계획중이었습니다. 그 전에 넓은 영역...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":24,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":24,"path":"api/tags/data-science-취업-스쿨.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}}}}
{"title":"딥러닝을통한비정형회계데이터분석 과제 방향설정","uid":"1931e3651a35159a539b729d48381261","slug":"SKKU-3rd-1st-딥러닝을통한비정형회계데이터분석","date":"2023-03-29T11:08:26.862Z","updated":"2023-03-29T12:02:43.338Z","comments":true,"path":"api/articles/SKKU-3rd-1st-딥러닝을통한비정형회계데이터분석.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/Emblem_02.jpg?raw=true","content":"<h2 id=\"1-Web-Crawling\"><a href=\"#1-Web-Crawling\" class=\"headerlink\" title=\"1. Web Crawling\"></a>1. Web Crawling</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time<span class=\"token punctuation\">,</span> re\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>by <span class=\"token keyword\">import</span> By\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>chrome<span class=\"token punctuation\">.</span>service <span class=\"token keyword\">import</span> Service\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>chrome<span class=\"token punctuation\">.</span>options <span class=\"token keyword\">import</span> Options\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>action_chains <span class=\"token keyword\">import</span> ActionChains\n\n<span class=\"token keyword\">import</span> warnings\nwarnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">date_range</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y%m%d\"</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y%m%d\"</span><span class=\"token punctuation\">)</span>\n    dates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>days <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>days <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> dates\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">chrome_driver_options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    options <span class=\"token operator\">=</span> Options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 사용하는 크롬 버전의 유저 에이전트로 수정</span>\n    \n    user_agent <span class=\"token operator\">=</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36\"</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'user-agent='</span> <span class=\"token operator\">+</span> user_agent<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 이미지 로딩을 하지 않음</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--blink-settings=imagesEnabled=false'</span><span class=\"token punctuation\">)</span> \n    <span class=\"token comment\"># 음소거 적용</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--mute-audio'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 시크릿 모드</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'incognito'</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> options<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 회사명으로 주식 종목 코드를 획득할 수 있도록 하는 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_code</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> daum_talk <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    \n    code_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_html<span class=\"token punctuation\">(</span><span class=\"token string\">'http://kind.krx.co.kr/corpgeneral/corpList.do?method=download'</span><span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    code_df <span class=\"token operator\">=</span> code_df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'회사명'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'종목코드'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token comment\"># data frame title 변경 '회사명' = name, 종목코드 = 'code'</span>\n    code_df <span class=\"token operator\">=</span> code_df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'회사명'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'종목코드'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 종목코드는 6자리로 구분되기때문에 0을 채워 6자리로 변경</span>\n    code_df<span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code_df<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;:06d&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">)</span>\n    target_code <span class=\"token operator\">=</span> code_df<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"name=='</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'\"</span></span><span class=\"token punctuation\">)</span>\n    code <span class=\"token operator\">=</span> target_code<span class=\"token punctuation\">[</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>to_string<span class=\"token punctuation\">(</span>index <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 위와 같이 code명을 가져오면 앞에 공백이 붙어있는 상황이 발생하여 앞뒤로 strip() 하여 공백 제거</span>\n    fin_code <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 다음 주식 검색을 위한 코드</span>\n    <span class=\"token keyword\">if</span> daum_talk <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n        fin_code <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">+</span> code   \n    \n    <span class=\"token keyword\">return</span> fin_code<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">driver_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./chromedriver.exe\"</span>\ns <span class=\"token operator\">=</span> Service<span class=\"token punctuation\">(</span>driver_path<span class=\"token punctuation\">)</span>\ncols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span>\ncodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'LG화학'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'삼성SDI'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SK이노베이션'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'고려아연'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'포스코케미칼'</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">DATE_LIST <span class=\"token operator\">=</span> date_range<span class=\"token punctuation\">(</span><span class=\"token string\">\"20210101\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20221231\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"1-1-Daum-Stock-News-Data-Crawling\"><a href=\"#1-1-Daum-Stock-News-Data-Crawling\" class=\"headerlink\" title=\"1.1) Daum Stock News Data Crawling\"></a>1.1) Daum Stock News Data Crawling</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">daum_Article_Scraping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 반환값으로 전달할 daum_news_df</span>\n    daum_news_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 다음 주식 뉴스 페이지에 나타나는 기사의 최대 갯수</span>\n    NEWS_MAX_CNT <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    \n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> date <span class=\"token keyword\">in</span> DATE_LIST <span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 크롤링 시작</span>\n            driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>service <span class=\"token operator\">=</span> s<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 1페이지부터 접속</span>\n            page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            past_li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n                li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token comment\"># 다음 주식 뉴스 페이지</span>\n                driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"https://news.daum.net/breakingnews/economic/stock?page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page_cnt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;regDate=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>date<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token comment\"># css를 통해 기사 제목의 텍스트 추출</span>\n                articles <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span><span class=\"token string\">'div.box_etc div > strong > a.link_txt'</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> articles <span class=\"token punctuation\">:</span>\n                    li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token comment\"># 이전 뉴스 페이지의 기사 제목과 현재 뉴스 페이지의 기사 제목이 같으면 탈출</span>\n                <span class=\"token comment\"># 마지막 페이지인지 검사하는 조건문(1)</span>\n                <span class=\"token keyword\">if</span> past_li <span class=\"token operator\">==</span> li <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                <span class=\"token comment\"># 결과 데이터프레임과 합병할 데이터 프레임 생성</span>\n                temp_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span> \n\n                daum_news_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>daum_news_df<span class=\"token punctuation\">,</span> temp_df<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token comment\"># 기사 제목이 NEWS_MAX_CNT 보다 모자라면 탈출, 마지막 페이지인지 검사하는 조건문(2)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>articles<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> NEWS_MAX_CNT <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                <span class=\"token comment\"># 현재의 기사 제목을 이전 기사 제목 리스트 변수에 저장</span>\n                past_li <span class=\"token operator\">=</span> li\n\n                <span class=\"token comment\"># 다음 페이지</span>\n                page_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            <span class=\"token comment\"># 하루의 주식 기사들을 모두 확인했다면 종료</span>\n            driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">pass</span>\n\n    <span class=\"token comment\"># 반환 전 중복 제거</span>\n    daum_news_df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep <span class=\"token operator\">=</span> <span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> daum_news_df\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">daum_news_df <span class=\"token operator\">=</span> daum_Article_Scraping<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">daum_news_df<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"1-2-Daum-Finance-Talks-Data-Crawling\"><a href=\"#1-2-Daum-Finance-Talks-Data-Crawling\" class=\"headerlink\" title=\"1.2) Daum Finance Talks Data Crawling\"></a>1.2) Daum Finance Talks Data Crawling</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">daum_Talk_Scraping</span><span class=\"token punctuation\">(</span>input_code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> get_code<span class=\"token punctuation\">(</span>input_code<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    \n    dates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    titles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y%m\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> timedelta<span class=\"token punctuation\">(</span>days <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'.'</span>\n    \n    driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>service <span class=\"token operator\">=</span> s<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'https://finance.daum.net/quotes/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">#talks'</span></span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    \n    TALK_MAX_CNT <span class=\"token operator\">=</span> <span class=\"token number\">31</span>\n    \n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># start의 날짜를 찾을 때까지 반복</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n            \n            <span class=\"token comment\"># 10페이지 중 현재 페이지를 제외한 9페이지 만큼 반복</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                \n                <span class=\"token comment\"># 한 페이지에 0번째 글은 공지사항 고정,</span>\n                <span class=\"token comment\"># 1번째부터 시작하여 30번째 글의 제목까지 반복</span>\n                <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> TALK_MAX_CNT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                    date <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'#boxContents > div.tableB tbody td:nth-child(5)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                    \n                    <span class=\"token comment\"># start의 날짜를 찾으면 전체 반복문 탈출</span>\n                    <span class=\"token keyword\">if</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">fr'^</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>start<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">raise</span> NotImplementedError\n                        \n                    dates<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n                    title <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'#boxContents > div.tableB tbody td:nth-child(1)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n                    <span class=\"token comment\"># 제목이 너무 길 경우 ...으로 끝남</span>\n                    <span class=\"token keyword\">if</span> title<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'...'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                        <span class=\"token comment\"># 해당 글로 이동하여 제목 텍스트를 읽음</span>\n                        driver<span class=\"token punctuation\">.</span>find_element_by_link_text<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n                        element <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bbsFrame\"</span><span class=\"token punctuation\">)</span>\n                        driver<span class=\"token punctuation\">.</span>switch_to<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n                        title_in <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'#bbsTitle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                        titles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title_in<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n                        \n                        driver<span class=\"token punctuation\">.</span>back<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                        titles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n                        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token comment\"># 30줄의 토론방 제목을 전부 다 보았다면 다음 페이지로 이동</span>\n                driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'.btnMove'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 10페이지씩 전부 다 봤다면 다음 페이지 목록으로 이동</span>\n            driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'.btnNext'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">except</span> NotImplementedError <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'find start month'</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">pass</span>\n\n    daum_talk_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">,</span> titles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    daum_talk_df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep <span class=\"token operator\">=</span> <span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    daum_talk_df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> daum_talk_df\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">### codes = ['LG화학', '삼성SDI', 'SK이노베이션', '고려아연', '포스코케미칼']</span>\ndaum_talk_df <span class=\"token operator\">=</span> daum_Talk_Scraping<span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#daum_talk_df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"1-3-Naver-Stock-News-Data-Crawling\"><a href=\"#1-3-Naver-Stock-News-Data-Crawling\" class=\"headerlink\" title=\"1.3) Naver Stock News Data Crawling\"></a>1.3) Naver Stock News Data Crawling</h3><p><a href=\"https://news.naver.com/main/list.naver?mode=LS2D&mid=shm&sid1=101&sid2=258\">네이버 뉴스 홈의 경제증권뉴스</a>와 <a href=\"https://finance.naver.com/news/news_list.naver?mode=LSS3D&section_id=101&section_id2=258&section_id3=402\">금융 홈의 기업 종목분석 뉴스</a> 선택</p>\n<h4 id=\"1-3-1-경제증권뉴스-뉴스데이터-크롤링\"><a href=\"#1-3-1-경제증권뉴스-뉴스데이터-크롤링\" class=\"headerlink\" title=\"1.3.1} 경제증권뉴스 뉴스데이터 크롤링\"></a>1.3.1} <a href=\"https://news.naver.com/main/list.naver?mode=LS2D&mid=shm&sid1=101&sid2=258\">경제증권뉴스</a> 뉴스데이터 크롤링</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">naver_News_Home_Article_Scraping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    naver_news_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n\n    NEWS_MAX_CNT <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> date <span class=\"token keyword\">in</span> DATE_LIST <span class=\"token punctuation\">:</span>\n            driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>driver_path<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            past_li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n                li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token comment\"># 네이버 뉴스 홈의 경제 증권 뉴스 페이지</span>\n                driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'https://news.naver.com/main/list.naver?mode=LS2D&amp;sid2=258&amp;sid1=101&amp;mid=shm&amp;date=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>date<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page_cnt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n                articles <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'#main_content > div > ul > li > dl > dt > a'</span></span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">for</span> article <span class=\"token keyword\">in</span> articles <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n                        li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">,</span> article<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> past_li <span class=\"token operator\">==</span> li <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                temp_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n\n                naver_news_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>naver_news_df<span class=\"token punctuation\">,</span> temp_df<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> NEWS_MAX_CNT <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                past_li <span class=\"token operator\">=</span> li\n                page_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">pass</span>\n\n    naver_news_df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep <span class=\"token operator\">=</span> <span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> naver_news_df<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">naver_news_df <span class=\"token operator\">=</span> naver_News_Home_Article_Scraping<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#naver_news_df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#naver_news_df.query('Title == \"동영상기사\"')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"1-3-2-기업종목분석-뉴스데이터-크롤링\"><a href=\"#1-3-2-기업종목분석-뉴스데이터-크롤링\" class=\"headerlink\" title=\"1.3.2} 기업종목분석 뉴스데이터 크롤링\"></a>1.3.2} <a href=\"https://finance.naver.com/news/news_list.naver?mode=LSS3D&section_id=101&section_id2=258&section_id3=402\">기업종목분석</a> 뉴스데이터 크롤링</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">naver_Finance_Home_Article_Scraping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    naver_finance_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    NEWS_MAX_CNT <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> date <span class=\"token keyword\">in</span> DATE_LIST <span class=\"token punctuation\">:</span>\n            driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>driver_path<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            past_li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n                li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n                <span class=\"token comment\"># 네이버 금융 홈의 기업 종목분석 뉴스 페이지</span>\n                driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'https://finance.naver.com/news/news_list.naver?mode=LSS3D&amp;section_id=101&amp;section_id2=258&amp;section_id3=402&amp;date=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>date<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page_cnt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n                articles <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'.articleSubject > a'</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">for</span> article <span class=\"token keyword\">in</span> articles <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n                        li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">,</span> article<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> past_li <span class=\"token operator\">==</span> li <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                temp_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n\n                naver_finance_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>naver_finance_df<span class=\"token punctuation\">,</span> temp_df<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> NEWS_MAX_CNT <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n\n                past_li <span class=\"token operator\">=</span> li\n                page_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">pass</span>\n    \n    naver_finance_df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep <span class=\"token operator\">=</span> <span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> naver_finance_df<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">naver_finance_df <span class=\"token operator\">=</span> naver_Finance_Home_Article_Scraping<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># naver_finance_df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#naver_finance_df.query('Title == \"동영상기사\"')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"1-4-Naver-Finance-Talks-Data-Crawling\"><a href=\"#1-4-Naver-Finance-Talks-Data-Crawling\" class=\"headerlink\" title=\"1.4) Naver Finance Talks Data Crawling\"></a>1.4) Naver Finance Talks Data Crawling</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">naver_Talk_Scraping</span><span class=\"token punctuation\">(</span>input_code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> get_code<span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 찾고자 하는 연도와 월의 이전 월을 찾음</span>\n    start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%Y%m\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> timedelta<span class=\"token punctuation\">(</span>days <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">'.'</span>\n    \n    <span class=\"token comment\"># 1페이지부터 접속</span>\n    page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    dates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    titles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>service <span class=\"token operator\">=</span> s<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 네이버 주식 토론방 페이지</span>\n            driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'https://finance.naver.com/item/board.naver?code=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;page=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>page_cnt<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># css를 통해 제목과 날짜 추출</span>\n            date <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'#content > div.section.inner_sub > table.type2 > tbody > tr > td:nth-child(1) > span'</span><span class=\"token punctuation\">)</span>\n            title <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span><span class=\"token string\">'#content > div.section.inner_sub > table.type2 > tbody > tr td.title > a'</span><span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># 찾고자 하는 날짜보다 오래된 날짜를 찾으면 반복문 탈출</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">fr'^</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>start<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">raise</span> NotImplementedError\n                \n                dates<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                titles<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># 다음 페이지</span>\n            page_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">except</span> NotImplementedError <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'find start month'</span><span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">pass</span>\n    \n    <span class=\"token comment\"># 반환 전 중복 제거 및 정렬</span>\n    naver_talk_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">,</span> titles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    naver_talk_df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep <span class=\"token operator\">=</span> <span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    naver_talk_df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> naver_talk_df<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># codes = ['LG화학', '삼성SDI', 'SK이노베이션', '고려아연', '포스코케미칼']</span>\nnaver_talk_df <span class=\"token operator\">=</span> naver_Talk_Scraping<span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#naver_talk_df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"1-5-Youtube-Title-Data-Crawling\"><a href=\"#1-5-Youtube-Title-Data-Crawling\" class=\"headerlink\" title=\"1.5) Youtube Title Data Crawling\"></a>1.5) Youtube Title Data Crawling</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">youtube_Scraping</span><span class=\"token punctuation\">(</span>input_code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    day <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    \n    driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>service <span class=\"token operator\">=</span> s<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> chrome_driver_options<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 구글 페이지에서 유튜브 검색</span>\n    driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.google.com/'</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    srart <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">6]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">4]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n    end <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">6]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>DATE_LIST<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">4]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n    \n    <span class=\"token comment\"># 구글링 </span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'gLFyf.gsfi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"site:youtube.com </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>input_code<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'gLFyf.gsfi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>ENTER<span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'t2vtad'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'gTl8xb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'//*[@id=\"lb\"]/div/g-menu/g-menu-item[7]/div/div/span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'OouJcb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>srart<span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'rzG2be'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'Ru1Ao.BwGU8e.fE5Rge'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    menu <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span> <span class=\"token string\">'#hdtb-msb > div:nth-child(1) > div > div > a'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> menu<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">==</span> <span class=\"token string\">\"동영상\"</span> <span class=\"token punctuation\">:</span>\n            driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'//*[@id=\"hdtb-msb\"]/div[1]/div/div[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]/a'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n    \n    <span class=\"token comment\"># 유튜브 제목 크롤링</span>\n    page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">:</span>\n            channels <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'LC20lb.MBeuO.DKV0Md'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> channel <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n\n                <span class=\"token keyword\">if</span> channel <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> channel <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n                    ActionChains<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>move_to_element<span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">[</span>channel<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>key_down<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>PAGE_DOWN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>key_up<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>PAGE_DOWN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>perform<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                channels<span class=\"token punctuation\">[</span>channel<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n                title_txt <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'//*[@id=\"container\"]/h1/yt-formatted-string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n                day_txt <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'//*[@id=\"info-strings\"]/yt-formatted-string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n                title<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title_txt<span class=\"token punctuation\">)</span>\n                day<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>day_txt<span class=\"token punctuation\">)</span>\n                cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n                driver<span class=\"token punctuation\">.</span>back<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n            pages <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements<span class=\"token punctuation\">(</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">'fl'</span><span class=\"token punctuation\">)</span>\n\n            pages<span class=\"token punctuation\">[</span>page_cnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> page_cnt <span class=\"token operator\">>=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">:</span>\n                page_cnt <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                page_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'check'</span><span class=\"token punctuation\">)</span>\n        \n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> df<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">youtube_df <span class=\"token operator\">=</span> youtube_Scraping<span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#youtube_df</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"2-전처리\"><a href=\"#2-전처리\" class=\"headerlink\" title=\"2. 전처리\"></a>2. 전처리</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">clean_text</span><span class=\"token punctuation\">(</span>inputString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    text_rmv <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[+]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'증가'</span><span class=\"token punctuation\">,</span> inputString<span class=\"token punctuation\">)</span>\n    text_rmv <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[-]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'감소'</span><span class=\"token punctuation\">,</span> text_rmv<span class=\"token punctuation\">)</span>\n    text_rmv <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[↑]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'상승'</span><span class=\"token punctuation\">,</span> text_rmv<span class=\"token punctuation\">)</span>\n    text_rmv <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[↓]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'하락'</span><span class=\"token punctuation\">,</span> text_rmv<span class=\"token punctuation\">)</span>\n    text_rmv <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[^一-龥ㄱ-힣a-zA-Z0-9_]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> text_rmv<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> text_rmv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>뉴스 dataframes: <ul>\n<li>daum_news_df, </li>\n<li>naver_news_df, </li>\n<li>naver_finance_df</li>\n</ul>\n</li>\n<li>토론방 dataframes:<ul>\n<li>daum_talk_df, </li>\n<li>naver_talk_df<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> daum_talk_df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmask_news <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'NFT'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'코인'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'코린이'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'디지털자산'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'가상화폐'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'암호화폐'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'공시줍줍'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'이번 주 IPO'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘의 주요일정'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'오늘의 레이더M 뉴스'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘의 증시 메모'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘 증시'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘의 증시'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘 시황'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘의 시황'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'장외주식'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'장학재단'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'[인사]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e공시 눈에 띄네'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'주식 매매 상위 종목 및 환율'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'유가증권시장 공시'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'강영연의 뉴욕오프닝'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'결정적 한끗'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'코스닥 주간메모'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'유가증권 주간메모'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'머니투데이 오프라인 헤드라인'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'청년희망적금'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'투자대회'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'설명회'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'오늘의 주요일정'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'해외 주식형 펀드'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'장중 기업공시'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'신용거래융자'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'일일펀드동향'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'국내 주식형 펀드'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'미래에셋투자와연금센터'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'[표]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'[부고]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'신한디지털포럼'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'미국 실업수당'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'신규 선임'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'권도형'</span><span class=\"token punctuation\">]</span> \nnn <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> mask_news <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> j <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span>\n            nn<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> clean_text<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>index <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">,</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#df.to_csv('./  .csv', encoding = 'utf-8-sig')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li>유튜브 dataframe<ul>\n<li>youtube_df<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">clean_num</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pattern <span class=\"token operator\">=</span>  <span class=\"token string\">r\"(?P&lt;year>\\d+). (?P&lt;month>\\d+). (?P&lt;day>\\d+)\"</span>\n    mstring <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        y <span class=\"token operator\">=</span> mstring<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token string\">'year'</span><span class=\"token punctuation\">)</span>\n        m <span class=\"token operator\">=</span> mstring<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token string\">'month'</span><span class=\"token punctuation\">)</span>\n        d <span class=\"token operator\">=</span> mstring<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token string\">'day'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            m <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'0</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>m<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            d <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'0</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span>\n        ymd <span class=\"token operator\">=</span> y<span class=\"token operator\">+</span>m<span class=\"token operator\">+</span>d\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        ymd <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span>\n\n    <span class=\"token keyword\">return</span> ymd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> youtube_df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nn <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> clean_text<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'shorts'</span> <span class=\"token keyword\">in</span> clean_text<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        nn<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> clean_num<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span>\n        nn<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>index <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">,</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-SP-based-LSTM-sentiment-analysis를-위한-전처리\"><a href=\"#3-SP-based-LSTM-sentiment-analysis를-위한-전처리\" class=\"headerlink\" title=\"3.  SP based LSTM sentiment analysis를 위한 전처리\"></a>3.  <a href=\"https://peerj.com/articles/cs-1044.pdf\">SP based LSTM sentiment analysis</a>를 위한 전처리</h2><p><strong>Sentiment classification(SC)</strong>, which is also named <strong><em>sentiment</em> polarity (<em>SP</em>)</strong>, aims to identify <strong>the corresponding polarity of <em>sentiment</em></strong></p>\n<h3 id=\"3-1-데이터프레임-생성\"><a href=\"#3-1-데이터프레임-생성\" class=\"headerlink\" title=\"3.1) 데이터프레임 생성\"></a>3.1) 데이터프레임 생성</h3><h3 id=\"3-2-vocab-score-생성\"><a href=\"#3-2-vocab-score-생성\" class=\"headerlink\" title=\"3.2) vocab score 생성\"></a>3.2) vocab score 생성</h3><h3 id=\"3-3-vocab-values-정규화\"><a href=\"#3-3-vocab-values-정규화\" class=\"headerlink\" title=\"3.3) vocab values 정규화\"></a>3.3) vocab values 정규화</h3><h3 id=\"3-4-sent-score-설정\"><a href=\"#3-4-sent-score-설정\" class=\"headerlink\" title=\"3.4) sent_score 설정\"></a>3.4) sent_score 설정</h3><h4 id=\"3-4-1-sent-score-기준-라벨링-sent-label\"><a href=\"#3-4-1-sent-score-기준-라벨링-sent-label\" class=\"headerlink\" title=\"3.4-1} sent_score 기준 라벨링(sent_label)\"></a>3.4-1} sent_score 기준 라벨링(sent_label)</h4><h3 id=\"3-5-X-train-Y-train-셋-만들기\"><a href=\"#3-5-X-train-Y-train-셋-만들기\" class=\"headerlink\" title=\"3.5) X_train, Y_train 셋 만들기\"></a>3.5) X_train, Y_train 셋 만들기</h3><h2 id=\"4-예측통계-적용시켜보기\"><a href=\"#4-예측통계-적용시켜보기\" class=\"headerlink\" title=\"4. 예측통계 적용시켜보기\"></a>4. 예측통계 적용시켜보기</h2><h3 id=\"4-1-빈도수-낮은-단어-제거\"><a href=\"#4-1-빈도수-낮은-단어-제거\" class=\"headerlink\" title=\"4.1) 빈도수 낮은 단어 제거\"></a>4.1) 빈도수 낮은 단어 제거</h3><h3 id=\"4-2-max-len-설정\"><a href=\"#4-2-max-len-설정\" class=\"headerlink\" title=\"4.2) max_len 설정\"></a>4.2) max_len 설정</h3><h3 id=\"4-3-모델-평가\"><a href=\"#4-3-모델-평가\" class=\"headerlink\" title=\"4.3) 모델 평가\"></a>4.3) 모델 평가</h3><h3 id=\"4-4-모델-loss-평가\"><a href=\"#4-4-모델-loss-평가\" class=\"headerlink\" title=\"4.4) 모델 loss 평가\"></a>4.4) 모델 loss 평가</h3><h2 id=\"5-예측통계-적용시켜보기\"><a href=\"#5-예측통계-적용시켜보기\" class=\"headerlink\" title=\"5. 예측통계 적용시켜보기\"></a>5. 예측통계 적용시켜보기</h2><h3 id=\"5-1-워드클라우드-생성\"><a href=\"#5-1-워드클라우드-생성\" class=\"headerlink\" title=\"5.1) 워드클라우드 생성\"></a>5.1) 워드클라우드 생성</h3><p>: 뉴스 기사 제목을 인풋받아 긍정이면 초록글씨, 부정이면 붉은글씨를 출력</p>\n<hr>\n<h2 id=\"사실-개인적으로는-여기까지-찾고-알아봐둔-상태입니다\"><a href=\"#사실-개인적으로는-여기까지-찾고-알아봐둔-상태입니다\" class=\"headerlink\" title=\"사실 개인적으로는 여기까지 찾고 알아봐둔 상태입니다.\"></a>사실 개인적으로는 여기까지 찾고 알아봐둔 상태입니다.</h2><p>(6. 교수님이 남들에게 적당히 잘 보일 수 있는 워드클라우드, 딥러닝(LSTM)으로 하는 news category classification 말씀하신 것 같은데 맞을까요..?)<br><a href=\"https://lsjsj92.tistory.com/409\">https://lsjsj92.tistory.com/409</a> </p>\n","text":"1. Web Crawlingimport time, re import pandas as pd from tqdm import tqdm from datetime import datetime, timedelta from selenium import webdr...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[],"tags":[{"name":"SKKU","slug":"SKKU","count":1,"path":"api/tags/SKKU.json"},{"name":"딥러닝을통한비정형회계데이터분석","slug":"딥러닝을통한비정형회계데이터분석","count":1,"path":"api/tags/딥러닝을통한비정형회계데이터분석.json"},{"name":"조현권교수님","slug":"조현권교수님","count":1,"path":"api/tags/조현권교수님.json"},{"name":"LSTM","slug":"LSTM","count":1,"path":"api/tags/LSTM.json"},{"name":"sentiment analysis","slug":"sentiment-analysis","count":1,"path":"api/tags/sentiment-analysis.json"},{"name":"Stock News Data Crawling","slug":"Stock-News-Data-Crawling","count":1,"path":"api/tags/Stock-News-Data-Crawling.json"},{"name":"Stock Prediction","slug":"Stock-Prediction","count":1,"path":"api/tags/Stock-Prediction.json"},{"name":"news category classification","slug":"news-category-classification","count":1,"path":"api/tags/news-category-classification.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-Web-Crawling\"><span class=\"toc-text\">1. Web Crawling</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-Daum-Stock-News-Data-Crawling\"><span class=\"toc-text\">1.1) Daum Stock News Data Crawling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-Daum-Finance-Talks-Data-Crawling\"><span class=\"toc-text\">1.2) Daum Finance Talks Data Crawling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-Naver-Stock-News-Data-Crawling\"><span class=\"toc-text\">1.3) Naver Stock News Data Crawling</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-1-%EA%B2%BD%EC%A0%9C%EC%A6%9D%EA%B6%8C%EB%89%B4%EC%8A%A4-%EB%89%B4%EC%8A%A4%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%81%AC%EB%A1%A4%EB%A7%81\"><span class=\"toc-text\">1.3.1} 경제증권뉴스 뉴스데이터 크롤링</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-2-%EA%B8%B0%EC%97%85%EC%A2%85%EB%AA%A9%EB%B6%84%EC%84%9D-%EB%89%B4%EC%8A%A4%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%81%AC%EB%A1%A4%EB%A7%81\"><span class=\"toc-text\">1.3.2} 기업종목분석 뉴스데이터 크롤링</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-Naver-Finance-Talks-Data-Crawling\"><span class=\"toc-text\">1.4) Naver Finance Talks Data Crawling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-Youtube-Title-Data-Crawling\"><span class=\"toc-text\">1.5) Youtube Title Data Crawling</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%EC%A0%84%EC%B2%98%EB%A6%AC\"><span class=\"toc-text\">2. 전처리</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-SP-based-LSTM-sentiment-analysis%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%A0%84%EC%B2%98%EB%A6%AC\"><span class=\"toc-text\">3.  SP based LSTM sentiment analysis를 위한 전처리</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EC%83%9D%EC%84%B1\"><span class=\"toc-text\">3.1) 데이터프레임 생성</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-vocab-score-%EC%83%9D%EC%84%B1\"><span class=\"toc-text\">3.2) vocab score 생성</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-vocab-values-%EC%A0%95%EA%B7%9C%ED%99%94\"><span class=\"toc-text\">3.3) vocab values 정규화</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-sent-score-%EC%84%A4%EC%A0%95\"><span class=\"toc-text\">3.4) sent_score 설정</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-4-1-sent-score-%EA%B8%B0%EC%A4%80-%EB%9D%BC%EB%B2%A8%EB%A7%81-sent-label\"><span class=\"toc-text\">3.4-1} sent_score 기준 라벨링(sent_label)</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-X-train-Y-train-%EC%85%8B-%EB%A7%8C%EB%93%A4%EA%B8%B0\"><span class=\"toc-text\">3.5) X_train, Y_train 셋 만들기</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%EC%98%88%EC%B8%A1%ED%86%B5%EA%B3%84-%EC%A0%81%EC%9A%A9%EC%8B%9C%EC%BC%9C%EB%B3%B4%EA%B8%B0\"><span class=\"toc-text\">4. 예측통계 적용시켜보기</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%EB%B9%88%EB%8F%84%EC%88%98-%EB%82%AE%EC%9D%80-%EB%8B%A8%EC%96%B4-%EC%A0%9C%EA%B1%B0\"><span class=\"toc-text\">4.1) 빈도수 낮은 단어 제거</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-max-len-%EC%84%A4%EC%A0%95\"><span class=\"toc-text\">4.2) max_len 설정</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%EB%AA%A8%EB%8D%B8-%ED%8F%89%EA%B0%80\"><span class=\"toc-text\">4.3) 모델 평가</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%EB%AA%A8%EB%8D%B8-loss-%ED%8F%89%EA%B0%80\"><span class=\"toc-text\">4.4) 모델 loss 평가</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%EC%98%88%EC%B8%A1%ED%86%B5%EA%B3%84-%EC%A0%81%EC%9A%A9%EC%8B%9C%EC%BC%9C%EB%B3%B4%EA%B8%B0\"><span class=\"toc-text\">5. 예측통계 적용시켜보기</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%EC%9B%8C%EB%93%9C%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%83%9D%EC%84%B1\"><span class=\"toc-text\">5.1) 워드클라우드 생성</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%8B%A4-%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9C%BC%EB%A1%9C%EB%8A%94-%EC%97%AC%EA%B8%B0%EA%B9%8C%EC%A7%80-%EC%B0%BE%EA%B3%A0-%EC%95%8C%EC%95%84%EB%B4%90%EB%91%94-%EC%83%81%ED%83%9C%EC%9E%85%EB%8B%88%EB%8B%A4\"><span class=\"toc-text\">사실 개인적으로는 여기까지 찾고 알아봐둔 상태입니다.</span></a></li></ol>","author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}},"mapped":true,"prev_post":{"title":"두유노 Neovim?","uid":"2ef6910e9fd32212995fcf56f4ebe823","slug":"dUknowNvim","date":"2022-08-17T08:17:58.000Z","updated":"2022-08-21T13:50:51.190Z","comments":true,"path":"api/articles/dUknowNvim.json","keywords":null,"cover":"https://neovim.io/images/nvim-0.4.0-floatwin-chemzqm.gif","text":" Neovim과 함께라면 CLI는 그냥.. 단축키 겸key mapping기이자 마우스이자 IDE 속는 셈 치고 함 봐유~ 어디선가 알라딘🧞‍의 🎼A Whole New World🌏가 들릴테니 ","link":"","photos":[],"count_time":{"symbolsCount":114,"symbolsTime":"1 mins."},"categories":[{"name":"Neovim IDE Config","slug":"Neovim-IDE-Config","count":3,"path":"api/categories/Neovim-IDE-Config.json"}],"tags":[{"name":"Neovim","slug":"Neovim","count":1,"path":"api/tags/Neovim.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}},"feature":true},"next_post":{"title":"zeroBase_DS 5주차 수요일 스터디노트","uid":"8b2d1aa3aa38c7583f7d6f53a221be4b","slug":"zeroBase-DS-5th-03","date":"2023-03-29T09:00:00.000Z","updated":"2023-03-29T07:53:31.654Z","comments":true,"path":"api/articles/zeroBase-DS-5th-03.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","text":"5th WeekWednesday","link":"","photos":[],"count_time":{"symbolsCount":17,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":23,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":23,"path":"api/tags/data-science-취업-스쿨.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}}}}
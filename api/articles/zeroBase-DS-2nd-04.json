{"title":"zeroBase_DS 2주차 목요일 스터디노트","uid":"62e5d5ac162c18c07ba1d1ebd3f01fe8","slug":"zeroBase-DS-2nd-04","date":"2023-03-09T09:00:00.000Z","updated":"2023-03-12T07:52:59.026Z","comments":true,"path":"api/articles/zeroBase-DS-2nd-04.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","content":"<h2 id=\"2nd-Week\"><a href=\"#2nd-Week\" class=\"headerlink\" title=\"2nd Week\"></a>2nd Week</h2><h3 id=\"Thursday\"><a href=\"#Thursday\" class=\"headerlink\" title=\"Thursday\"></a>Thursday</h3><h4 id=\"객체와-메모리\"><a href=\"#객체와-메모리\" class=\"headerlink\" title=\"객체와 메모리\"></a>객체와 메모리</h4><h5 id=\"참조-변수-referenceVariable는-객체의-메모리-주소를-저장하고-이를-이용해-객체를-참조한다\"><a href=\"#참조-변수-referenceVariable는-객체의-메모리-주소를-저장하고-이를-이용해-객체를-참조한다\" class=\"headerlink\" title=\"(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다.\"></a>(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다.</h5><p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2009%2009-33-40.png?raw=true\" alt=\"참조변수\"><br><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2009%2009-39-35.png?raw=true\" alt=\"얕은복사\"></p>\n<h6 id=\"국영수-점수를-입력받아-리스트에-저장하고-원본을-유지한-채로-복사본을-만들어-과목별-점수를-10-올렸을-경우에-평균을-출력해-보자\"><a href=\"#국영수-점수를-입력받아-리스트에-저장하고-원본을-유지한-채로-복사본을-만들어-과목별-점수를-10-올렸을-경우에-평균을-출력해-보자\" class=\"headerlink\" title=\"국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸을 경우에 평균을 출력해 보자.\"></a>국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸을 경우에 평균을 출력해 보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">scores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'국어 점수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'영어 점수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'수학 점수 입력: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span>\n\ncopyScores <span class=\"token operator\">=</span> scores<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> score <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>copyScores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tresult <span class=\"token operator\">=</span> score <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span>\n\tcopyScores<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token keyword\">if</span> result <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token keyword\">else</span> result\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'이전 평균: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'이후 평균: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>copyScores<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>copyScores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"얕은복사와-깊은복사\"><a href=\"#얕은복사와-깊은복사\" class=\"headerlink\" title=\"얕은복사와 깊은복사\"></a>얕은복사와 깊은복사</h4><h5 id=\"얕은복사는-객체-주소를-복사하는-것이므로-객체-자체가-복사되지-않는다\"><a href=\"#얕은복사는-객체-주소를-복사하는-것이므로-객체-자체가-복사되지-않는다\" class=\"headerlink\" title=\"얕은복사는 객체 주소를 복사하는 것이므로 객체 자체가 복사되지 않는다.\"></a>얕은복사는 객체 주소를 복사하는 것이므로 객체 자체가 복사되지 않는다.</h5><h5 id=\"깊은복사는-객체-자체를-복사하는-것으로-또하나의-객체가-만들어진다\"><a href=\"#깊은복사는-객체-자체를-복사하는-것으로-또하나의-객체가-만들어진다\" class=\"headerlink\" title=\"깊은복사는 객체 자체를 복사하는 것으로 또하나의 객체가 만들어진다.\"></a>깊은복사는 객체 자체를 복사하는 것으로 또하나의 객체가 만들어진다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TenCls</span><span class=\"token punctuation\">:</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> n\n\t\tself<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> s\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">printClsInfo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'self.number: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'self.str: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 얕은 복사</span>\ntc1 <span class=\"token operator\">=</span> TenCls<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\ntc2 <span class=\"token operator\">=</span> tc1\n\ntc1<span class=\"token punctuation\">.</span>printClsInfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntc2<span class=\"token punctuation\">.</span>printClsInfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 깊은 복사</span>\n<span class=\"token keyword\">import</span> copy\n\nscores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nscoresCopy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># scoresCopy = scores</span>\n<span class=\"token comment\"># print(f'id(scores): &#123;scores&#125;')</span>\n<span class=\"token comment\"># print(f'id(scoresCopy): &#123;scoresCopy&#125;')</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> scores<span class=\"token punctuation\">:</span> <span class=\"token comment\">#깊은복사</span>\n\tscoresCopy<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scores): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scores<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scoresCopy): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scoresCopy<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nscoresCopy<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span> <span class=\"token comment\">#깊은복사</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scores): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scores<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scoresCopy): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scoresCopy<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nscoresCopy<span class=\"token operator\">=</span> scores<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#깊은복사</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scores): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scores<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scoresCopy): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scoresCopy<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nscoresCopy <span class=\"token operator\">=</span> scores<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#깊은복사</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scores): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scores<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'id(scoresCopy): </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scoresCopy<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"클래스-상속\"><a href=\"#클래스-상속\" class=\"headerlink\" title=\"클래스 상속\"></a>클래스 상속</h4><h5 id=\"클래스는-또-다른-클래스를-상속해서-내-것처럼-사용할-수-있다\"><a href=\"#클래스는-또-다른-클래스를-상속해서-내-것처럼-사용할-수-있다\" class=\"headerlink\" title=\"클래스는 또 다른 클래스를 상속해서 내 것처럼 사용할 수 있다.\"></a>클래스는 또 다른 클래스를 상속해서 내 것처럼 사용할 수 있다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NormalCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[NormalCar] drive() called!'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">back</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[NormalCar] back() called!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TurboCar</span><span class=\"token punctuation\">(</span>NormalCar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 상속!</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">turbo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[TurboCar] turbo() called!'</span><span class=\"token punctuation\">)</span>\n\nmyTurboCar <span class=\"token operator\">=</span> TurboCar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmyTurboCar<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyTurboCar<span class=\"token punctuation\">.</span>back<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyTurboCar<span class=\"token punctuation\">.</span>turbo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"생성자01\"><a href=\"#생성자01\" class=\"headerlink\" title=\"생성자01\"></a>생성자01</h4><h5 id=\"객체가-생성될-때-생성자를-호출하면-init-가-자동-호출된다\"><a href=\"#객체가-생성될-때-생성자를-호출하면-init-가-자동-호출된다\" class=\"headerlink\" title=\"객체가 생성될 때 생성자를 호출하면 __init__()가 자동 호출된다.\"></a>객체가 생성될 때 생성자를 호출하면 __init__()가 자동 호출된다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#2 Calculator 생성자 호출</span>\n  <span class=\"token comment\">#3 Calculator __init__ 호출</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[Calculator] __init__() called!'</span><span class=\"token punctuation\">)</span>\n\ncal <span class=\"token operator\">=</span> Calculator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"ParentClass\"><a href=\"#ParentClass\" class=\"headerlink\" title=\"ParentClass\"></a>ParentClass</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ParentClass</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>pNum1<span class=\"token punctuation\">,</span>pNum2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[ParentClass] __init() called!'</span><span class=\"token punctuation\">)</span>\n\tself<span class=\"token punctuation\">.</span>pNum1 <span class=\"token operator\">=</span> pNum1\n\tself<span class=\"token punctuation\">.</span>pNum2 <span class=\"token operator\">=</span> pNum2\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ChildClass</span><span class=\"token punctuation\">(</span>ParentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>cNum1<span class=\"token punctuation\">,</span>cNum2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[ChildClass] __init__() called!'</span><span class=\"token punctuation\">)</span>\n\tself<span class=\"token punctuation\">.</span>cNum1 <span class=\"token operator\">=</span> cNum1\n\tself<span class=\"token punctuation\">.</span>cNum2 <span class=\"token operator\">=</span> cNum2\n\n<span class=\"token comment\"># result : [ChildClass] __init__() called! </span>\n<span class=\"token comment\"># 앞서 불려진 __init__(self,pNum1,pNum2)가</span>\n<span class=\"token comment\"># 뒤에서 __init__(self,cNum1,cNum2)가 호출되면서</span>\n<span class=\"token comment\"># 初始化됐기 때문. 따라서 pNum1같은 속성값 사용 불가</span>\n<span class=\"token comment\"># 해결 방법: </span>\n<span class=\"token comment\">#class ChildClass(ParentClass):</span>\n<span class=\"token comment\">#\tdef __init__(self,cNum1,cNum2)</span>\n<span class=\"token comment\">#\t\tprint('[ChildClass] __init__() called!')</span>\n<span class=\"token comment\">#   # 여기에 강제로 호출해서 초기화를 다시 시켜주기 </span>\n<span class=\"token comment\">#   ParentClass.__init__(self,cNum1,cNum2)</span>\n<span class=\"token comment\"># # 또는 이거 </span>\n<span class=\"token comment\">#   super().__init__(self,cNum,cNum2)</span>\n<span class=\"token comment\">#\tself.cNum1 = cNum1</span>\n<span class=\"token comment\">#\tself.cNum2 = cNum2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"생성자02\"><a href=\"#생성자02\" class=\"headerlink\" title=\"생성자02\"></a>생성자02</h4><h6 id=\"중간고사-클래스와-기말고사-클래스를-상속관계로-만들고-각각의-점수를-초기화하자-또한-총점-및-평균을-반환하는-기능도-만들어보자\"><a href=\"#중간고사-클래스와-기말고사-클래스를-상속관계로-만들고-각각의-점수를-초기화하자-또한-총점-및-평균을-반환하는-기능도-만들어보자\" class=\"headerlink\" title=\"중간고사 클래스와 기말고사 클래스를 상속관계로 만들고 각각의 점수를 초기화하자. 또한 총점 및 평균을 반환하는 기능도 만들어보자.\"></a>중간고사 클래스와 기말고사 클래스를 상속관계로 만들고 각각의 점수를 초기화하자. 또한 총점 및 평균을 반환하는 기능도 만들어보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Midterm</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">,</span>s3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[Midterm] __init__()'</span><span class=\"token punctuation\">)</span>\n\t\tself<span class=\"token punctuation\">.</span>midKorScore <span class=\"token operator\">=</span> s1\n\t\tself<span class=\"token punctuation\">.</span>midEngScore <span class=\"token operator\">=</span> s2\n\t\tself<span class=\"token punctuation\">.</span>midMthScaore <span class=\"token operator\">=</span> s3\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">printScores</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midKorScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midKorScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midEngScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midEngScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midMthScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midMthScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Finals</span><span class=\"token punctuation\">(</span>Midterm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">,</span>s3<span class=\"token punctuation\">,</span>s4<span class=\"token punctuation\">,</span>s5<span class=\"token punctuation\">,</span>s6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[Finals] __init__()'</span><span class=\"token punctuation\">)</span>\n\t\t\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">,</span>s3<span class=\"token punctuation\">)</span>\n\t\t\n\t\tself<span class=\"token punctuation\">.</span>finalKorScore <span class=\"token operator\">=</span> s4\n\t\tself<span class=\"token punctuation\">.</span>finalEngScore <span class=\"token operator\">=</span> s5\n\t\tself<span class=\"token punctuation\">.</span>finalMthScore <span class=\"token operator\">=</span> s6\n\t\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">printScores</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>printScores<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midKorScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midKorScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midEngScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midEngScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'midMthScore: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>midMthScore<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">getTotalScore</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\ttotal <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>midKorScore <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>midEngScore <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>midMthScore\n\t\ttotal <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>finalKorScore <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>finalEngScore <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>finalMthScore\n\t\t\n\t\t<span class=\"token keyword\">return</span> total \n\t\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">getAvgScore</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>getTotalScore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span>\n\nexam <span class=\"token operator\">=</span> Finals<span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#객체생성</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"다중-상속\"><a href=\"#다중-상속\" class=\"headerlink\" title=\"다중 상속\"></a>다중 상속</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car01</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drive() method is called!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car02</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">turbo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'turbo() method is called!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car03</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">drift</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drift() method is called!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span>Car01<span class=\"token punctuation\">,</span>Car02<span class=\"token punctuation\">,</span>Car03<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\nmyCar <span class=\"token operator\">=</span> Car<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyCar<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyCar<span class=\"token punctuation\">.</span>turbo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyCar<span class=\"token punctuation\">.</span>drift<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BasicCalculator</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1<span class=\"token operator\">+</span>n2\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1<span class=\"token operator\">-</span>n2\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1<span class=\"token operator\">*</span>n2\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1 <span class=\"token operator\">/</span> n2\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DeveloperCalculator</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1 <span class=\"token operator\">%</span> n2\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">flo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1 <span class=\"token operator\">//</span> n2\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> n1 <span class=\"token operator\">**</span> n2\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewCalculator</span><span class=\"token punctuation\">(</span>BasicCalculator<span class=\"token punctuation\">,</span>DeveloperCalculator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\ncal <span class=\"token operator\">=</span> NewCalculator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"오버라이딩\"><a href=\"#오버라이딩\" class=\"headerlink\" title=\"오버라이딩\"></a>오버라이딩</h4><h5 id=\"하위클래스에서-상위클래스의-메서드를-재정의-override-한다\"><a href=\"#하위클래스에서-상위클래스의-메서드를-재정의-override-한다\" class=\"headerlink\" title=\"하위클래스에서 상위클래스의 메서드를 재정의(override)한다.\"></a>하위클래스에서 상위클래스의 메서드를 재정의(override)한다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Robot</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> c\n\t\tself<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h\n\t\tself<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> w\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'총알 발사!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewRobot</span><span class=\"token punctuation\">(</span>Robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">fire</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'레이저 발사!!!'</span><span class=\"token punctuation\">)</span>\nmyRobot <span class=\"token operator\">=</span> NewRobot<span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\nmyRobot<span class=\"token punctuation\">.</span>fire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"삼각형-넓이를-계산하는-클래스를-만들고-이를-상속하는-클래스에서-getArea-를-override해서-출력-결과가-다음과-같을-수-있도록-클래스를-만들어보자\"><a href=\"#삼각형-넓이를-계산하는-클래스를-만들고-이를-상속하는-클래스에서-getArea-를-override해서-출력-결과가-다음과-같을-수-있도록-클래스를-만들어보자\" class=\"headerlink\" title=\"삼각형 넓이를 계산하는 클래스를 만들고 이를 상속하는 클래스에서 getArea()를 override해서 출력 결과가 다음과 같을 수 있도록 클래스를 만들어보자.\"></a>삼각형 넓이를 계산하는 클래스를 만들고 이를 상속하는 클래스에서 getArea()를 override해서 출력 결과가 다음과 같을 수 있도록 클래스를 만들어보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TriangleArea</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w\n\t\tself<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">printTriangleAreaInfo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'self.width: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'self.height: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewTriangleArea</span><span class=\"token punctuation\">(</span>TriangleArea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>getArea<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'㎠'</span>\ntA <span class=\"token operator\">=</span> NewTriangleArea<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\ntA<span class=\"token punctuation\">.</span>printTriangleAreaInfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntriangleArea <span class=\"token operator\">=</span> tA<span class=\"token punctuation\">.</span>getArea<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'triangleArea: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>triangleArea<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"추상클래스\"><a href=\"#추상클래스\" class=\"headerlink\" title=\"추상클래스\"></a>추상클래스</h4><h5 id=\"상위-클래스에서-하위-클래스에-메서드-구현을-강요한다\"><a href=\"#상위-클래스에서-하위-클래스에-메서드-구현을-강요한다\" class=\"headerlink\" title=\"상위 클래스에서 하위 클래스에 메서드 구현을 강요한다.\"></a>상위 클래스에서 하위 클래스에 메서드 구현을 강요한다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABCMeta\n<span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> abstractmethod\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AirPlane</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>ABCMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전진'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">backward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'후진'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Airliner</span><span class=\"token punctuation\">(</span>AirPlane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> c\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'시속 400km/h 비행!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">fighterPlane</span><span class=\"token punctuation\">(</span>AirPlane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> c\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'시속 700km/h 비행!'</span><span class=\"token punctuation\">)</span>\n\naL <span class=\"token operator\">=</span> Airliner<span class=\"token punctuation\">(</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"계산기-추상-클래스를-만들고-이를-이용해서-새로운-계산기-클래스를-만들어-보자-추상-클래스에는-덧셈-뺄셈-곱셈-나눗셈-기능이-선언되어-있어야-한다\"><a href=\"#계산기-추상-클래스를-만들고-이를-이용해서-새로운-계산기-클래스를-만들어-보자-추상-클래스에는-덧셈-뺄셈-곱셈-나눗셈-기능이-선언되어-있어야-한다\" class=\"headerlink\" title=\"계산기 추상 클래스를 만들고 이를 이용해서 새로운 계산기 클래스를 만들어 보자. 추상 클래스에는 덧셈,뺄셈,곱셈,나눗셈 기능이 선언되어 있어야 한다.\"></a>계산기 추상 클래스를 만들고 이를 이용해서 새로운 계산기 클래스를 만들어 보자. 추상 클래스에는 덧셈,뺄셈,곱셈,나눗셈 기능이 선언되어 있어야 한다.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>ABCMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\t<span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\t<span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n\t<span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DeveloperCalculator</span><span class=\"token punctuation\">(</span>Calculator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">+</span>n2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">-</span>n2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">*</span>n2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">/</span>n2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">%</span>n2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">flo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n1<span class=\"token operator\">//</span>n2<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"예외란\"><a href=\"#예외란\" class=\"headerlink\" title=\"예외란?\"></a>예외란?</h4><h5 id=\"문법적인-문제는-없으나-실행-중-발생하는-예상하지-못한-문제\"><a href=\"#문법적인-문제는-없으나-실행-중-발생하는-예상하지-못한-문제\" class=\"headerlink\" title=\"문법적인 문제는 없으나 실행 중 발생하는 예상하지 못한 문제\"></a>문법적인 문제는 없으나 실행 중 발생하는 예상하지 못한 문제</h5><pre><code>- ZeroDivisionError: division by zero\n</code></pre>\n<h5 id=\"예외-관련-클래스는-Exception-클래스를-상속한다\"><a href=\"#예외-관련-클래스는-Exception-클래스를-상속한다\" class=\"headerlink\" title=\"예외 관련 클래스는 Exception 클래스를 상속한다.\"></a>예외 관련 클래스는 Exception 클래스를 상속한다.</h5><pre><code>Exception\n    - Arithmetic Error\n        - ZeroDivisionError\n    - Environment Error\n        - IOError\n    - Lookup Error\n        - IndexError\n    - Syntax Error\n        - IndentationError\n</code></pre>\n<h4 id=\"예외처리\"><a href=\"#예외처리\" class=\"headerlink\" title=\"예외처리\"></a>예외처리</h4><h5 id=\"예상하지-못한-예외가-프로그램-전체-실행에-영향이-없도록-처리함\"><a href=\"#예상하지-못한-예외가-프로그램-전체-실행에-영향이-없도록-처리함\" class=\"headerlink\" title=\"예상하지 못한 예외가 프로그램 전체 실행에 영향이 없도록 처리함\"></a>예상하지 못한 예외가 프로그램 전체 실행에 영향이 없도록 처리함</h5><pre><code>예외 발생 예상 구문을 try ~ except로 감싼다.\n</code></pre>\n<p><img src=\"https://github.com/btheNerd/FigureBed/blob/main/Screenshot%20at%20Mar%2009%2023-31-58.png?raw=true\" alt=\"예외발생구문처리\"></p>\n<h6 id=\"사용자로부터-숫자-5개를-입력받을-때-숫자가-아닌-자료형이-입력되면-예외-처리하는-프로그램을-만들어보자\"><a href=\"#사용자로부터-숫자-5개를-입력받을-때-숫자가-아닌-자료형이-입력되면-예외-처리하는-프로그램을-만들어보자\" class=\"headerlink\" title=\"사용자로부터 숫자 5개를 입력받을 때, 숫자가 아닌 자료형이 입력되면 예외 처리하는 프로그램을 만들어보자.\"></a>사용자로부터 숫자 5개를 입력받을 때, 숫자가 아닌 자료형이 입력되면 예외 처리하는 프로그램을 만들어보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\tnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'예외 발생!'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">continue</span>\n\t\n\tnums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'nums: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nums<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"try-except-else\"><a href=\"#try-except-else\" class=\"headerlink\" title=\"try~except~else\"></a>try~except~else</h4><h5 id=\"에서-else-는-예외가-발생하지-않은-경우-실행\"><a href=\"#에서-else-는-예외가-발생하지-않은-경우-실행\" class=\"headerlink\" title=\"에서 else 는 예외가 발생하지 않은 경우 실행\"></a>에서 else 는 예외가 발생하지 않은 경우 실행</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\tnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input an even number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Exception has occured!'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">continue</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tnums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\t\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You\\'ve entered an odd number.'</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please re-enter.'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">continue</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'nums: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>nums<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"사용자로부터-숫자-5개를-입력받아-짝수-홀수-실수로-구분해서-각각을-리스트에-저장하는-프로그램을-만들어보자\"><a href=\"#사용자로부터-숫자-5개를-입력받아-짝수-홀수-실수로-구분해서-각각을-리스트에-저장하는-프로그램을-만들어보자\" class=\"headerlink\" title=\"사용자로부터 숫자 5개를 입력받아 짝수,홀수,실수로 구분해서 각각을 리스트에 저장하는 프로그램을 만들어보자.\"></a>사용자로부터 숫자 5개를 입력받아 짝수,홀수,실수로 구분해서 각각을 리스트에 저장하는 프로그램을 만들어보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">evenList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>oddList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>floatList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nn<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\tnum <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input a number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Exception has occured!'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please re-enter a number.'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">continue</span>\n\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A float number has been input(ted).'</span><span class=\"token punctuation\">)</span>\n\t\tfloatList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An even number has been input(ted).'</span><span class=\"token punctuation\">)</span>\n\t\t\tevenList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A odd number has been input(ted).'</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\t\t\toddList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"finally\"><a href=\"#finally\" class=\"headerlink\" title=\"finally\"></a>finally</h4><h5 id=\"예외-발생과-상관없이-항상-실행한다\"><a href=\"#예외-발생과-상관없이-항상-실행한다\" class=\"headerlink\" title=\"예외 발생과 상관없이 항상 실행한다.\"></a>예외 발생과 상관없이 항상 실행한다.</h5><pre><code>주로 외부자원을 이용해서 작업할 때 사용(외부자원이므로 예외가 발생하던 않던 연결을 끊어줘야 함)\ne.외부 서버라던가.. AWS라던가... \n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\tinputData <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number: '</span><span class=\"token punctuation\">)</span>\n\tnumInt <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>inputData<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An exception has occured!'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Input(ted) datum is not a number.'</span><span class=\"token punctuation\">)</span>\n\tnumInt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">if</span> numInt <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input(ted) datum is an even number!'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input(ted) datum is a odd number!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'input(ted) data: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>inputData<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"Q-사용자로부터-숫자-5개를-입력받아-짝수-홀수-실수와-입력한-모든-데이터를-각각-출력하는-프로그램을-만들어-보자\"><a href=\"#Q-사용자로부터-숫자-5개를-입력받아-짝수-홀수-실수와-입력한-모든-데이터를-각각-출력하는-프로그램을-만들어-보자\" class=\"headerlink\" title=\"Q. 사용자로부터 숫자 5개를 입력받아 짝수,홀수, 실수와 입력한 모든 데이터를 각각 출력하는 프로그램을 만들어 보자.\"></a>Q. 사용자로부터 숫자 5개를 입력받아 짝수,홀수, 실수와 입력한 모든 데이터를 각각 출력하는 프로그램을 만들어 보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">evenList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> oddList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> floatList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nnumList<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\t\tdatum <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please input a number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An exception has occured.'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please reenter a number.'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">continue</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> datum <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A float number was input(ted).'</span><span class=\"token punctuation\">)</span>\n\t\t\tfloatList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t\t<span class=\"token keyword\">if</span> datum <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An even integer was input(ted).'</span><span class=\"token punctuation\">)</span>\n\t\t\t\tevenList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An odd integer was input(ted).'</span><span class=\"token punctuation\">)</span>\n\t\t\t\toddList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tn <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n\t\tnumList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"Exception-class\"><a href=\"#Exception-class\" class=\"headerlink\" title=\"Exception class\"></a>Exception class</h4><h5 id=\"try-except-Exception-as-e\"><a href=\"#try-except-Exception-as-e\" class=\"headerlink\" title=\"try: ~ except Exception as e:\"></a>try: ~ except Exception as e:</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number2: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'num1 / num2 = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1 <span class=\"token operator\">/</span> num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ZeroDivision Error would occur.'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'exception: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"raise-키워드를-이용하면-예외를-발생시킬-수-있다\"><a href=\"#raise-키워드를-이용하면-예외를-발생시킬-수-있다\" class=\"headerlink\" title=\"raise 키워드를 이용하면 예외를 발생시킬 수 있다.\"></a>raise 키워드를 이용하면 예외를 발생시킬 수 있다.</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">divCalculator</span><span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> n2 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n1 <span class=\"token operator\">/</span> n2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'It can\\'t be divided by 0.'</span><span class=\"token punctuation\">)</span>\n\nnum1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please input a number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please input another number: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\tdivCalculator<span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Exception: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"사용자가-문자메세지를-보낼-때-10글자-이하면-sms로-발송-10글자-초과시-mms로-발송하는-프로그램을-예외처리를-이용해서-만들어보자\"><a href=\"#사용자가-문자메세지를-보낼-때-10글자-이하면-sms로-발송-10글자-초과시-mms로-발송하는-프로그램을-예외처리를-이용해서-만들어보자\" class=\"headerlink\" title=\"사용자가 문자메세지를 보낼 때 10글자 이하면 sms로 발송; 10글자 초과시 mms로 발송하는 프로그램을 예외처리를 이용해서 만들어보자.\"></a>사용자가 문자메세지를 보낼 때 10글자 이하면 sms로 발송; 10글자 초과시 mms로 발송하는 프로그램을 예외처리를 이용해서 만들어보자.</h6><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sendSMS</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'It is overlengthed. It will be sent after being regenerated as MMS.'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># args[1] == 1</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An SMS successfully has been sent!'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sendMMS</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'It is underlengthed. It will be sent after being regenerated as SMS.'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># args[1] == 2</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An MMS successfully has been sent!'</span><span class=\"token punctuation\">)</span>\n\nmsg <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please input Messages: '</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\tsendSMS<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'e: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'e: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> e<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tsendMMS<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">elif</span> e<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n\tsendSMS<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"사용자-Exception-class\"><a href=\"#사용자-Exception-class\" class=\"headerlink\" title=\"사용자 Exception class\"></a>사용자 Exception class</h4><h5 id=\"Exception-클래스를-직접-상속해서-사용자-예외클래스-직접-만들기\"><a href=\"#Exception-클래스를-직접-상속해서-사용자-예외클래스-직접-만들기\" class=\"headerlink\" title=\"Exception 클래스를 직접 상속해서 사용자 예외클래스 직접 만들기\"></a>Exception 클래스를 직접 상속해서 사용자 예외클래스 직접 만들기</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DoNotUseZeroDivisionException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is an unavailable number.'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">divCalculator</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> num1 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> DoNotUseZeroDivisionException<span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>num1<span class=\"token operator\">/</span>num2<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nnum1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number1: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input number2: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\tdivCalculator<span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> DoNotUseZeroDivisionException <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"관리자-암호를-입력하고-다음-상태에-따라-예외-처리하는-예외-클래스를-만들어보자\"><a href=\"#관리자-암호를-입력하고-다음-상태에-따라-예외-처리하는-예외-클래스를-만들어보자\" class=\"headerlink\" title=\"관리자 암호를 입력하고 다음 상태에 따라 예외 처리하는 예외 클래스를 만들어보자.\"></a>관리자 암호를 입력하고 다음 상태에 따라 예외 처리하는 예외 클래스를 만들어보자.</h6><pre><code>암호 길이가 5 미만인 경우: UnderlengthedPasswordException\n암호 길이가 10 초과인 경우: OverlengthedPasswordException\n암호가 틀린 경우: WrongPasswordException\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UnderlengthedPasswordException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tsupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: 비밀번로 자릿수가 너무 적습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OverlengthedPasswordException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: 비밀번로 자릿수가 너무 많습니다. 5 이상 10 이하의 자릿수를 입력해 주세요.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WrongPasswordException</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>f'<span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">:</span> 잘못된 비밀번호 입니다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\npassWord <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'패스워드를 입력하세요: '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>adminPw<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> UnderlengthedPasswordException<span class=\"token punctuation\">(</span>passWord<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>adminPw<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">raise</span> OverlengthedPasswordException<span class=\"token punctuation\">(</span>passWord<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">elif</span> passWord <span class=\"token operator\">!=</span> <span class=\"token string\">'admin1234'</span>\n\t\t<span class=\"token keyword\">raise</span> WrongPasswordException<span class=\"token punctuation\">(</span>passWord<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> UnderlengthedPasswordException <span class=\"token keyword\">as</span> e1<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span> e1\n<span class=\"token keyword\">except</span> OverlengthedPasswordException <span class=\"token keyword\">as</span> e2<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span> e2\n<span class=\"token keyword\">except</span> WrongPasswordException <span class=\"token keyword\">as</span> e3<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span> e3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"2nd WeekThursday객체와 메모리(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다. 국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":17,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":17,"path":"api/tags/data-science-취업-스쿨.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2nd-Week\"><span class=\"toc-text\">2nd Week</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Thursday\"><span class=\"toc-text\">Thursday</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EA%B0%9D%EC%B2%B4%EC%99%80-%EB%A9%94%EB%AA%A8%EB%A6%AC\"><span class=\"toc-text\">객체와 메모리</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%B0%B8%EC%A1%B0-%EB%B3%80%EC%88%98-referenceVariable%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B3%A0-%EC%9D%B4%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%B0%B8%EC%A1%B0%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">(참조)변수_referenceVariable는 객체의 메모리 주소를 저장하고 이를 이용해 객체를 참조한다.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EA%B5%AD%EC%98%81%EC%88%98-%EC%A0%90%EC%88%98%EB%A5%BC-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%95%84-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B3%A0-%EC%9B%90%EB%B3%B8%EC%9D%84-%EC%9C%A0%EC%A7%80%ED%95%9C-%EC%B1%84%EB%A1%9C-%EB%B3%B5%EC%82%AC%EB%B3%B8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EA%B3%BC%EB%AA%A9%EB%B3%84-%EC%A0%90%EC%88%98%EB%A5%BC-10-%EC%98%AC%EB%A0%B8%EC%9D%84-%EA%B2%BD%EC%9A%B0%EC%97%90-%ED%8F%89%EA%B7%A0%EC%9D%84-%EC%B6%9C%EB%A0%A5%ED%95%B4-%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">국영수 점수를 입력받아 리스트에 저장하고 원본을 유지한 채로 복사본을 만들어 과목별 점수를 10% 올렸을 경우에 평균을 출력해 보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%96%95%EC%9D%80%EB%B3%B5%EC%82%AC%EC%99%80-%EA%B9%8A%EC%9D%80%EB%B3%B5%EC%82%AC\"><span class=\"toc-text\">얕은복사와 깊은복사</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%96%95%EC%9D%80%EB%B3%B5%EC%82%AC%EB%8A%94-%EA%B0%9D%EC%B2%B4-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EB%B3%B5%EC%82%AC%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B4%EB%AF%80%EB%A1%9C-%EA%B0%9D%EC%B2%B4-%EC%9E%90%EC%B2%B4%EA%B0%80-%EB%B3%B5%EC%82%AC%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\"><span class=\"toc-text\">얕은복사는 객체 주소를 복사하는 것이므로 객체 자체가 복사되지 않는다.</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EA%B9%8A%EC%9D%80%EB%B3%B5%EC%82%AC%EB%8A%94-%EA%B0%9D%EC%B2%B4-%EC%9E%90%EC%B2%B4%EB%A5%BC-%EB%B3%B5%EC%82%AC%ED%95%98%EB%8A%94-%EA%B2%83%EC%9C%BC%EB%A1%9C-%EB%98%90%ED%95%98%EB%82%98%EC%9D%98-%EA%B0%9D%EC%B2%B4%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%84%EB%8B%A4\"><span class=\"toc-text\">깊은복사는 객체 자체를 복사하는 것으로 또하나의 객체가 만들어진다.</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%81%EC%86%8D\"><span class=\"toc-text\">클래스 상속</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%8A%94-%EB%98%90-%EB%8B%A4%EB%A5%B8-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EC%83%81%EC%86%8D%ED%95%B4%EC%84%9C-%EB%82%B4-%EA%B2%83%EC%B2%98%EB%9F%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\"><span class=\"toc-text\">클래스는 또 다른 클래스를 상속해서 내 것처럼 사용할 수 있다.</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%83%9D%EC%84%B1%EC%9E%9001\"><span class=\"toc-text\">생성자01</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EA%B0%9D%EC%B2%B4%EA%B0%80-%EC%83%9D%EC%84%B1%EB%90%A0-%EB%95%8C-%EC%83%9D%EC%84%B1%EC%9E%90%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%98%EB%A9%B4-init-%EA%B0%80-%EC%9E%90%EB%8F%99-%ED%98%B8%EC%B6%9C%EB%90%9C%EB%8B%A4\"><span class=\"toc-text\">객체가 생성될 때 생성자를 호출하면 __init__()가 자동 호출된다.</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ParentClass\"><span class=\"toc-text\">ParentClass</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%83%9D%EC%84%B1%EC%9E%9002\"><span class=\"toc-text\">생성자02</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%A4%91%EA%B0%84%EA%B3%A0%EC%82%AC-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EC%83%81%EC%86%8D%EA%B4%80%EA%B3%84%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EA%B0%81%EA%B0%81%EC%9D%98-%EC%A0%90%EC%88%98%EB%A5%BC-%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EC%9E%90-%EB%98%90%ED%95%9C-%EC%B4%9D%EC%A0%90-%EB%B0%8F-%ED%8F%89%EA%B7%A0%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5%EB%8F%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">중간고사 클래스와 기말고사 클래스를 상속관계로 만들고 각각의 점수를 초기화하자. 또한 총점 및 평균을 반환하는 기능도 만들어보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EB%8B%A4%EC%A4%91-%EC%83%81%EC%86%8D\"><span class=\"toc-text\">다중 상속</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\"><span class=\"toc-text\">오버라이딩</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%ED%95%98%EC%9C%84%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EC%84%9C-%EC%83%81%EC%9C%84%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EC%9E%AC%EC%A0%95%EC%9D%98-override-%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">하위클래스에서 상위클래스의 메서드를 재정의(override)한다.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%BC%EA%B0%81%ED%98%95-%EB%84%93%EC%9D%B4%EB%A5%BC-%EA%B3%84%EC%82%B0%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%9D%B4%EB%A5%BC-%EC%83%81%EC%86%8D%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EC%84%9C-getArea-%EB%A5%BC-override%ED%95%B4%EC%84%9C-%EC%B6%9C%EB%A0%A5-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8F%84%EB%A1%9D-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">삼각형 넓이를 계산하는 클래스를 만들고 이를 상속하는 클래스에서 getArea()를 override해서 출력 결과가 다음과 같을 수 있도록 클래스를 만들어보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%B6%94%EC%83%81%ED%81%B4%EB%9E%98%EC%8A%A4\"><span class=\"toc-text\">추상클래스</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%83%81%EC%9C%84-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EC%84%9C-%ED%95%98%EC%9C%84-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%EB%A9%94%EC%84%9C%EB%93%9C-%EA%B5%AC%ED%98%84%EC%9D%84-%EA%B0%95%EC%9A%94%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">상위 클래스에서 하위 클래스에 메서드 구현을 강요한다.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EA%B3%84%EC%82%B0%EA%B8%B0-%EC%B6%94%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%9D%B4%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B3%84%EC%82%B0%EA%B8%B0-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90-%EC%B6%94%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EB%8A%94-%EB%8D%A7%EC%85%88-%EB%BA%84%EC%85%88-%EA%B3%B1%EC%85%88-%EB%82%98%EB%88%97%EC%85%88-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%84%A0%EC%96%B8%EB%90%98%EC%96%B4-%EC%9E%88%EC%96%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">계산기 추상 클래스를 만들고 이를 이용해서 새로운 계산기 클래스를 만들어 보자. 추상 클래스에는 덧셈,뺄셈,곱셈,나눗셈 기능이 선언되어 있어야 한다.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%99%B8%EB%9E%80\"><span class=\"toc-text\">예외란?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EB%AC%B8%EB%B2%95%EC%A0%81%EC%9D%B8-%EB%AC%B8%EC%A0%9C%EB%8A%94-%EC%97%86%EC%9C%BC%EB%82%98-%EC%8B%A4%ED%96%89-%EC%A4%91-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EC%98%88%EC%83%81%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C-%EB%AC%B8%EC%A0%9C\"><span class=\"toc-text\">문법적인 문제는 없으나 실행 중 발생하는 예상하지 못한 문제</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%99%B8-%EA%B4%80%EB%A0%A8-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%8A%94-Exception-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EC%83%81%EC%86%8D%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">예외 관련 클래스는 Exception 클래스를 상속한다.</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\"><span class=\"toc-text\">예외처리</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%83%81%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C-%EC%98%88%EC%99%B8%EA%B0%80-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%A0%84%EC%B2%B4-%EC%8B%A4%ED%96%89%EC%97%90-%EC%98%81%ED%96%A5%EC%9D%B4-%EC%97%86%EB%8F%84%EB%A1%9D-%EC%B2%98%EB%A6%AC%ED%95%A8\"><span class=\"toc-text\">예상하지 못한 예외가 프로그램 전체 실행에 영향이 없도록 처리함</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EB%A1%9C%EB%B6%80%ED%84%B0-%EC%88%AB%EC%9E%90-5%EA%B0%9C%EB%A5%BC-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%9D%84-%EB%95%8C-%EC%88%AB%EC%9E%90%EA%B0%80-%EC%95%84%EB%8B%8C-%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%B4-%EC%9E%85%EB%A0%A5%EB%90%98%EB%A9%B4-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">사용자로부터 숫자 5개를 입력받을 때, 숫자가 아닌 자료형이 입력되면 예외 처리하는 프로그램을 만들어보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#try-except-else\"><span class=\"toc-text\">try~except~else</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%97%90%EC%84%9C-else-%EB%8A%94-%EC%98%88%EC%99%B8%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%80-%EA%B2%BD%EC%9A%B0-%EC%8B%A4%ED%96%89\"><span class=\"toc-text\">에서 else 는 예외가 발생하지 않은 경우 실행</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EB%A1%9C%EB%B6%80%ED%84%B0-%EC%88%AB%EC%9E%90-5%EA%B0%9C%EB%A5%BC-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%95%84-%EC%A7%9D%EC%88%98-%ED%99%80%EC%88%98-%EC%8B%A4%EC%88%98%EB%A1%9C-%EA%B5%AC%EB%B6%84%ED%95%B4%EC%84%9C-%EA%B0%81%EA%B0%81%EC%9D%84-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">사용자로부터 숫자 5개를 입력받아 짝수,홀수,실수로 구분해서 각각을 리스트에 저장하는 프로그램을 만들어보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#finally\"><span class=\"toc-text\">finally</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%99%B8-%EB%B0%9C%EC%83%9D%EA%B3%BC-%EC%83%81%EA%B4%80%EC%97%86%EC%9D%B4-%ED%95%AD%EC%83%81-%EC%8B%A4%ED%96%89%ED%95%9C%EB%8B%A4\"><span class=\"toc-text\">예외 발생과 상관없이 항상 실행한다.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#Q-%EC%82%AC%EC%9A%A9%EC%9E%90%EB%A1%9C%EB%B6%80%ED%84%B0-%EC%88%AB%EC%9E%90-5%EA%B0%9C%EB%A5%BC-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%95%84-%EC%A7%9D%EC%88%98-%ED%99%80%EC%88%98-%EC%8B%A4%EC%88%98%EC%99%80-%EC%9E%85%EB%A0%A5%ED%95%9C-%EB%AA%A8%EB%93%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%81%EA%B0%81-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">Q. 사용자로부터 숫자 5개를 입력받아 짝수,홀수, 실수와 입력한 모든 데이터를 각각 출력하는 프로그램을 만들어 보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Exception-class\"><span class=\"toc-text\">Exception class</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#try-except-Exception-as-e\"><span class=\"toc-text\">try: ~ except Exception as e:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#raise-%ED%82%A4%EC%9B%8C%EB%93%9C%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%98%88%EC%99%B8%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%AC-%EC%88%98-%EC%9E%88%EB%8B%A4\"><span class=\"toc-text\">raise 키워드를 이용하면 예외를 발생시킬 수 있다.</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EA%B0%80-%EB%AC%B8%EC%9E%90%EB%A9%94%EC%84%B8%EC%A7%80%EB%A5%BC-%EB%B3%B4%EB%82%BC-%EB%95%8C-10%EA%B8%80%EC%9E%90-%EC%9D%B4%ED%95%98%EB%A9%B4-sms%EB%A1%9C-%EB%B0%9C%EC%86%A1-10%EA%B8%80%EC%9E%90-%EC%B4%88%EA%B3%BC%EC%8B%9C-mms%EB%A1%9C-%EB%B0%9C%EC%86%A1%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">사용자가 문자메세지를 보낼 때 10글자 이하면 sms로 발송; 10글자 초과시 mms로 발송하는 프로그램을 예외처리를 이용해서 만들어보자.</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-Exception-class\"><span class=\"toc-text\">사용자 Exception class</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Exception-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EC%A7%81%EC%A0%91-%EC%83%81%EC%86%8D%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%98%88%EC%99%B8%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%A7%81%EC%A0%91-%EB%A7%8C%EB%93%A4%EA%B8%B0\"><span class=\"toc-text\">Exception 클래스를 직접 상속해서 사용자 예외클래스 직접 만들기</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%95%94%ED%98%B8%EB%A5%BC-%EC%9E%85%EB%A0%A5%ED%95%98%EA%B3%A0-%EB%8B%A4%EC%9D%8C-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%98%88%EC%99%B8-%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94-%EC%98%88%EC%99%B8-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">관리자 암호를 입력하고 다음 상태에 따라 예외 처리하는 예외 클래스를 만들어보자.</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}},"mapped":true,"prev_post":{"title":"zeroBase_DS 2주차 금요일 스터디노트","uid":"2be23b8612c2e5659a5176de7fad3d20","slug":"zeroBase-DS-2nd-05","date":"2023-03-10T09:00:00.000Z","updated":"2023-03-13T05:02:32.921Z","comments":true,"path":"api/articles/zeroBase-DS-2nd-05.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","text":"2nd WeekFridaytext file 작성open(),read(),write(),close()를 이용한 텍스트 파일 다루기 file = open('/Users/gangjuhyeon/Dev/ZeroBase/DataScience13th/pythonT...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":17,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":17,"path":"api/tags/data-science-취업-스쿨.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}}},"next_post":{"title":"zeroBase_DS 2주차 수요일 스터디노트","uid":"b493b07a83682f778196e53afcd3ee9a","slug":"zeroBase-DS-2nd-03","date":"2023-03-08T09:00:00.000Z","updated":"2023-03-12T07:51:20.373Z","comments":true,"path":"api/articles/zeroBase-DS-2nd-03.json","keywords":null,"cover":"https://github.com/btheNerd/FigureBed/blob/main/zerobaseDSlogo.png?raw=true","text":"2nd WeekWednesday함수란?def addFunc(x,y): return x+y print(addFunc(100,2)) 내장함수&amp;사용자함수특정 기능을 재사용하기 위해 사용함수 선언과 호출def키워드, 함수명,(),:,def addCal...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"zero-base/","slug":"zero-base","count":17,"path":"api/tags/zero-base.json"},{"name":"data science 취업 스쿨","slug":"data-science-취업-스쿨","count":17,"path":"api/tags/data-science-취업-스쿨.json"}],"author":{"name":"BtheNerd","slug":"blog-author","avatar":"https://github.com/btheNerd/btheNerd.github.io/blob/master/img/RnbwClrGH.png?raw=true","link":"https://open.kakao.com/o/sDgMhOFd","description":"Hello, This is BtheNerd, a polyglot. <br> It was such a shame that having my macbook stored on my bookshelf.<br>嗯呐，我人懒。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"kakaotalk":{"icon":"/img/2111466.png","link":"https://open.kakao.com/o/sDgMhOFd"},"instagram":{"icon":"/img/instagram.svg","link":"https://www.instagram.com/anothernerdee"}}}}}}